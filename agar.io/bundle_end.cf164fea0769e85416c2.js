webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = normalizeComponent;
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  scriptExports = scriptExports || {}

  // ES6 modules interop
  var type = typeof scriptExports.default
  if (type === 'object' || type === 'function') {
    scriptExports = scriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 2 */,
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = addStylesClient;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__listToStyles__ = __webpack_require__(411);
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (false) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = Object(__WEBPACK_IMPORTED_MODULE_0__listToStyles__["a" /* default */])(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = Object(__WEBPACK_IMPORTED_MODULE_0__listToStyles__["a" /* default */])(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Element: 1,
    Attribute: 2,
    Text: 3,
    CData: 4,
    EntityReference: 5,
    EntityDeclaration: 6,
    ProcessingInstruction: 7,
    Comment: 8,
    Document: 9,
    DocType: 10,
    DocumentFragment: 11,
    NotationDeclaration: 12,
    // Numeric codes up to 200 are reserved to W3C for possible future use.
    // Following are types internal to this library:
    Declaration: 201,
    Raw: 202,
    AttributeDeclaration: 203,
    ElementDeclaration: 204,
    Dummy: 205
  };

}).call(this);


/***/ }),
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(112);
function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject,
    hasProp = {}.hasOwnProperty,
    splice = [].splice;

  ({isObject, isFunction, isEmpty, getValue} = __webpack_require__(24));

  XMLElement = null;

  XMLCData = null;

  XMLComment = null;

  XMLDeclaration = null;

  XMLDocType = null;

  XMLRaw = null;

  XMLText = null;

  XMLProcessingInstruction = null;

  XMLDummy = null;

  NodeType = null;

  XMLNodeList = null;

  XMLNamedNodeMap = null;

  DocumentPosition = null;

  // Represents a generic XMl element
  module.exports = XMLNode = (function() {
    class XMLNode {
      // Initializes a new instance of `XMLNode`

      // `parent` the parent node
      constructor(parent1) {
        this.parent = parent1;
        if (this.parent) {
          this.options = this.parent.options;
          this.stringify = this.parent.stringify;
        }
        this.value = null;
        this.children = [];
        this.baseURI = null;
        // first execution, load dependencies that are otherwise
        // circular (so we can't load them at the top)
        if (!XMLElement) {
          XMLElement = __webpack_require__(90);
          XMLCData = __webpack_require__(92);
          XMLComment = __webpack_require__(93);
          XMLDeclaration = __webpack_require__(94);
          XMLDocType = __webpack_require__(95);
          XMLRaw = __webpack_require__(100);
          XMLText = __webpack_require__(101);
          XMLProcessingInstruction = __webpack_require__(102);
          XMLDummy = __webpack_require__(235);
          NodeType = __webpack_require__(6);
          XMLNodeList = __webpack_require__(643);
          XMLNamedNodeMap = __webpack_require__(91);
          DocumentPosition = __webpack_require__(644);
        }
      }

      
      // Sets the parent node of this node and its children recursively

      // `parent` the parent node
      setParent(parent) {
        var child, j, len, ref1, results;
        this.parent = parent;
        if (parent) {
          this.options = parent.options;
          this.stringify = parent.stringify;
        }
        ref1 = this.children;
        results = [];
        for (j = 0, len = ref1.length; j < len; j++) {
          child = ref1[j];
          results.push(child.setParent(this));
        }
        return results;
      }

      // Creates a child element node

      // `name` node name or an object describing the XML tree
      // `attributes` an object containing name/value pairs of attributes
      // `text` element text
      element(name, attributes, text) {
        var childNode, item, j, k, key, lastChild, len, len1, val;
        lastChild = null;
        if (attributes === null && (text == null)) {
          [attributes, text] = [{}, null];
        }
        if (attributes == null) {
          attributes = {};
        }
        attributes = getValue(attributes);
        // swap argument order: text <-> attributes
        if (!isObject(attributes)) {
          [text, attributes] = [attributes, text];
        }
        if (name != null) {
          name = getValue(name);
        }
        // expand if array
        if (Array.isArray(name)) {
          for (j = 0, len = name.length; j < len; j++) {
            item = name[j];
            lastChild = this.element(item);
          }
        // evaluate if function
        } else if (isFunction(name)) {
          lastChild = this.element(name.apply());
        // expand if object
        } else if (isObject(name)) {
          for (key in name) {
            if (!hasProp.call(name, key)) continue;
            val = name[key];
            if (isFunction(val)) {
              // evaluate if function
              val = val.apply();
            }
            // assign attributes
            if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {
              lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);
            // skip empty arrays
            } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {
              lastChild = this.dummy();
            // empty objects produce one node
            } else if (isObject(val) && isEmpty(val)) {
              lastChild = this.element(key);
            // skip null and undefined nodes
            } else if (!this.options.keepNullNodes && (val == null)) {
              lastChild = this.dummy();
            
            // expand list by creating child nodes
            } else if (!this.options.separateArrayItems && Array.isArray(val)) {
              for (k = 0, len1 = val.length; k < len1; k++) {
                item = val[k];
                childNode = {};
                childNode[key] = item;
                lastChild = this.element(childNode);
              }
            
            // expand child nodes under parent
            } else if (isObject(val)) {
              // if the key is #text expand child nodes under this node to support mixed content
              if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {
                lastChild = this.element(val);
              } else {
                lastChild = this.element(key);
                lastChild.element(val);
              }
            } else {
              
              // text node
              lastChild = this.element(key, val);
            }
          }
        // skip null nodes
        } else if (!this.options.keepNullNodes && text === null) {
          lastChild = this.dummy();
        } else {
          // text node
          if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {
            lastChild = this.text(text);
          // cdata node
          } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {
            lastChild = this.cdata(text);
          // comment node
          } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {
            lastChild = this.comment(text);
          // raw text node
          } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {
            lastChild = this.raw(text);
          // processing instruction
          } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {
            lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);
          } else {
            // element node
            lastChild = this.node(name, attributes, text);
          }
        }
        if (lastChild == null) {
          throw new Error("Could not create any elements with: " + name + ". " + this.debugInfo());
        }
        return lastChild;
      }

      // Creates a child element node before the current node

      // `name` node name or an object describing the XML tree
      // `attributes` an object containing name/value pairs of attributes
      // `text` element text
      insertBefore(name, attributes, text) {
        var child, i, newChild, refChild, removed;
        // DOM level 1
        // insertBefore(newChild, refChild) inserts the child node newChild before refChild
        if (name != null ? name.type : void 0) {
          newChild = name;
          refChild = attributes;
          newChild.setParent(this);
          if (refChild) {
            // temporarily remove children starting *with* refChild
            i = children.indexOf(refChild);
            removed = children.splice(i);
            
            // add the new child
            children.push(newChild);
            
            // add back removed children after new child
            Array.prototype.push.apply(children, removed);
          } else {
            children.push(newChild);
          }
          return newChild;
        } else {
          if (this.isRoot) {
            throw new Error("Cannot insert elements at root level. " + this.debugInfo(name));
          }
          
          // temporarily remove children starting *with* this
          i = this.parent.children.indexOf(this);
          removed = this.parent.children.splice(i);
          
          // add the new child
          child = this.parent.element(name, attributes, text);
          
          // add back removed children after new child
          Array.prototype.push.apply(this.parent.children, removed);
          return child;
        }
      }

      // Creates a child element node after the current node

      // `name` node name or an object describing the XML tree
      // `attributes` an object containing name/value pairs of attributes
      // `text` element text
      insertAfter(name, attributes, text) {
        var child, i, removed;
        if (this.isRoot) {
          throw new Error("Cannot insert elements at root level. " + this.debugInfo(name));
        }
        
        // temporarily remove children starting *after* this
        i = this.parent.children.indexOf(this);
        removed = this.parent.children.splice(i + 1);
        
        // add the new child
        child = this.parent.element(name, attributes, text);
        
        // add back removed children after new child
        Array.prototype.push.apply(this.parent.children, removed);
        return child;
      }

      // Deletes a child element node

      remove() {
        var i, ref1;
        if (this.isRoot) {
          throw new Error("Cannot remove the root element. " + this.debugInfo());
        }
        i = this.parent.children.indexOf(this);
        splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;
        return this.parent;
      }

      // Creates a node

      // `name` name of the node
      // `attributes` an object containing name/value pairs of attributes
      // `text` element text
      node(name, attributes, text) {
        var child;
        if (name != null) {
          name = getValue(name);
        }
        attributes || (attributes = {});
        attributes = getValue(attributes);
        // swap argument order: text <-> attributes
        if (!isObject(attributes)) {
          [text, attributes] = [attributes, text];
        }
        child = new XMLElement(this, name, attributes);
        if (text != null) {
          child.text(text);
        }
        this.children.push(child);
        return child;
      }

      // Creates a text node

      // `value` element text
      text(value) {
        var child;
        if (isObject(value)) {
          this.element(value);
        }
        child = new XMLText(this, value);
        this.children.push(child);
        return this;
      }

      // Creates a CDATA node

      // `value` element text without CDATA delimiters
      cdata(value) {
        var child;
        child = new XMLCData(this, value);
        this.children.push(child);
        return this;
      }

      // Creates a comment node

      // `value` comment text
      comment(value) {
        var child;
        child = new XMLComment(this, value);
        this.children.push(child);
        return this;
      }

      // Creates a comment node before the current node

      // `value` comment text
      commentBefore(value) {
        var child, i, removed;
        // temporarily remove children starting *with* this
        i = this.parent.children.indexOf(this);
        removed = this.parent.children.splice(i);
        // add the new child
        child = this.parent.comment(value);
        // add back removed children after new child
        Array.prototype.push.apply(this.parent.children, removed);
        return this;
      }

      // Creates a comment node after the current node

      // `value` comment text
      commentAfter(value) {
        var child, i, removed;
        // temporarily remove children starting *after* this
        i = this.parent.children.indexOf(this);
        removed = this.parent.children.splice(i + 1);
        // add the new child
        child = this.parent.comment(value);
        // add back removed children after new child
        Array.prototype.push.apply(this.parent.children, removed);
        return this;
      }

      // Adds unescaped raw text

      // `value` text
      raw(value) {
        var child;
        child = new XMLRaw(this, value);
        this.children.push(child);
        return this;
      }

      // Adds a dummy node
      dummy() {
        var child;
        child = new XMLDummy(this);
        // Normally when a new node is created it is added to the child node collection.
        // However, dummy nodes are never added to the XML tree. They are created while
        // converting JS objects to XML nodes in order not to break the recursive function
        // chain. They can be thought of as invisible nodes. They can be traversed through
        // by using prev(), next(), up(), etc. functions but they do not exists in the tree.

        // @children.push child
        return child;
      }

      // Adds a processing instruction

      // `target` instruction target
      // `value` instruction value
      instruction(target, value) {
        var insTarget, insValue, instruction, j, len;
        if (target != null) {
          target = getValue(target);
        }
        if (value != null) {
          value = getValue(value);
        }
        if (Array.isArray(target)) { // expand if array
          for (j = 0, len = target.length; j < len; j++) {
            insTarget = target[j];
            this.instruction(insTarget);
          }
        } else if (isObject(target)) { // expand if object
          for (insTarget in target) {
            if (!hasProp.call(target, insTarget)) continue;
            insValue = target[insTarget];
            this.instruction(insTarget, insValue);
          }
        } else {
          if (isFunction(value)) {
            value = value.apply();
          }
          instruction = new XMLProcessingInstruction(this, target, value);
          this.children.push(instruction);
        }
        return this;
      }

      // Creates a processing instruction node before the current node

      // `target` instruction target
      // `value` instruction value
      instructionBefore(target, value) {
        var child, i, removed;
        // temporarily remove children starting *with* this
        i = this.parent.children.indexOf(this);
        removed = this.parent.children.splice(i);
        // add the new child
        child = this.parent.instruction(target, value);
        // add back removed children after new child
        Array.prototype.push.apply(this.parent.children, removed);
        return this;
      }

      // Creates a processing instruction node after the current node

      // `target` instruction target
      // `value` instruction value
      instructionAfter(target, value) {
        var child, i, removed;
        // temporarily remove children starting *after* this
        i = this.parent.children.indexOf(this);
        removed = this.parent.children.splice(i + 1);
        // add the new child
        child = this.parent.instruction(target, value);
        // add back removed children after new child
        Array.prototype.push.apply(this.parent.children, removed);
        return this;
      }

      // Creates the xml declaration

      // `version` A version number string, e.g. 1.0
      // `encoding` Encoding declaration, e.g. UTF-8
      // `standalone` standalone document declaration: true or false
      declaration(version, encoding, standalone) {
        var doc, xmldec;
        doc = this.document();
        xmldec = new XMLDeclaration(doc, version, encoding, standalone);
        // Replace XML declaration if exists, otherwise insert at top
        if (doc.children.length === 0) {
          doc.children.unshift(xmldec);
        } else if (doc.children[0].type === NodeType.Declaration) {
          doc.children[0] = xmldec;
        } else {
          doc.children.unshift(xmldec);
        }
        return doc.root() || doc;
      }

      // Creates the document type declaration

      // `pubID` the public identifier of the external subset
      // `sysID` the system identifier of the external subset
      dtd(pubID, sysID) {
        var child, doc, doctype, i, j, k, len, len1, ref1, ref2;
        doc = this.document();
        doctype = new XMLDocType(doc, pubID, sysID);
        ref1 = doc.children;
        // Replace DTD if exists
        for (i = j = 0, len = ref1.length; j < len; i = ++j) {
          child = ref1[i];
          if (child.type === NodeType.DocType) {
            doc.children[i] = doctype;
            return doctype;
          }
        }
        ref2 = doc.children;
        // insert before root node if the root node exists
        for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {
          child = ref2[i];
          if (child.isRoot) {
            doc.children.splice(i, 0, doctype);
            return doctype;
          }
        }
        // otherwise append to end
        doc.children.push(doctype);
        return doctype;
      }

      // Gets the parent node
      up() {
        if (this.isRoot) {
          throw new Error("The root node has no parent. Use doc() if you need to get the document object.");
        }
        return this.parent;
      }

      // Gets the root node
      root() {
        var node;
        node = this;
        while (node) {
          if (node.type === NodeType.Document) {
            return node.rootObject;
          } else if (node.isRoot) {
            return node;
          } else {
            node = node.parent;
          }
        }
      }

      // Gets the node representing the XML document
      document() {
        var node;
        node = this;
        while (node) {
          if (node.type === NodeType.Document) {
            return node;
          } else {
            node = node.parent;
          }
        }
      }

      // Ends the document and converts string
      end(options) {
        return this.document().end(options);
      }

      // Gets the previous node
      prev() {
        var i;
        i = this.parent.children.indexOf(this);
        if (i < 1) {
          throw new Error("Already at the first node. " + this.debugInfo());
        }
        return this.parent.children[i - 1];
      }

      // Gets the next node
      next() {
        var i;
        i = this.parent.children.indexOf(this);
        if (i === -1 || i === this.parent.children.length - 1) {
          throw new Error("Already at the last node. " + this.debugInfo());
        }
        return this.parent.children[i + 1];
      }

      // Imports cloned root from another XML document

      // `doc` the XML document to insert nodes from
      importDocument(doc) {
        var child, clonedRoot, j, len, ref1;
        clonedRoot = doc.root().clone();
        clonedRoot.parent = this;
        clonedRoot.isRoot = false;
        this.children.push(clonedRoot);
        // set properties if imported element becomes the root node
        if (this.type === NodeType.Document) {
          clonedRoot.isRoot = true;
          clonedRoot.documentObject = this;
          this.rootObject = clonedRoot;
          // set dtd name
          if (this.children) {
            ref1 = this.children;
            for (j = 0, len = ref1.length; j < len; j++) {
              child = ref1[j];
              if (child.type === NodeType.DocType) {
                child.name = clonedRoot.name;
                break;
              }
            }
          }
        }
        return this;
      }

      
      // Returns debug string for this node
      debugInfo(name) {
        var ref1, ref2;
        name = name || this.name;
        if ((name == null) && !((ref1 = this.parent) != null ? ref1.name : void 0)) {
          return "";
        } else if (name == null) {
          return "parent: <" + this.parent.name + ">";
        } else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) {
          return "node: <" + name + ">";
        } else {
          return "node: <" + name + ">, parent: <" + this.parent.name + ">";
        }
      }

      // Aliases
      ele(name, attributes, text) {
        return this.element(name, attributes, text);
      }

      nod(name, attributes, text) {
        return this.node(name, attributes, text);
      }

      txt(value) {
        return this.text(value);
      }

      dat(value) {
        return this.cdata(value);
      }

      com(value) {
        return this.comment(value);
      }

      ins(target, value) {
        return this.instruction(target, value);
      }

      doc() {
        return this.document();
      }

      dec(version, encoding, standalone) {
        return this.declaration(version, encoding, standalone);
      }

      e(name, attributes, text) {
        return this.element(name, attributes, text);
      }

      n(name, attributes, text) {
        return this.node(name, attributes, text);
      }

      t(value) {
        return this.text(value);
      }

      d(value) {
        return this.cdata(value);
      }

      c(value) {
        return this.comment(value);
      }

      r(value) {
        return this.raw(value);
      }

      i(target, value) {
        return this.instruction(target, value);
      }

      u() {
        return this.up();
      }

      // can be deprecated in a future release
      importXMLBuilder(doc) {
        return this.importDocument(doc);
      }

      // Adds or modifies an attribute.

      // `name` attribute name
      // `value` attribute value
      attribute(name, value) {
        throw new Error("attribute() applies to element nodes only.");
      }

      att(name, value) {
        return this.attribute(name, value);
      }

      a(name, value) {
        return this.attribute(name, value);
      }

      // Removes an attribute

      // `name` attribute name
      removeAttribute(name) {
        throw new Error("attribute() applies to element nodes only.");
      }

      // DOM level 1 functions to be implemented later
      replaceChild(newChild, oldChild) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      removeChild(oldChild) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      appendChild(newChild) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      hasChildNodes() {
        return this.children.length !== 0;
      }

      cloneNode(deep) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      normalize() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM level 2
      isSupported(feature, version) {
        return true;
      }

      hasAttributes() {
        return this.attribs.length !== 0;
      }

      // DOM level 3 functions to be implemented later
      compareDocumentPosition(other) {
        var ref, res;
        ref = this;
        if (ref === other) {
          return 0;
        } else if (this.document() !== other.document()) {
          res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;
          if (Math.random() < 0.5) {
            res |= DocumentPosition.Preceding;
          } else {
            res |= DocumentPosition.Following;
          }
          return res;
        } else if (ref.isAncestor(other)) {
          return DocumentPosition.Contains | DocumentPosition.Preceding;
        } else if (ref.isDescendant(other)) {
          return DocumentPosition.Contains | DocumentPosition.Following;
        } else if (ref.isPreceding(other)) {
          return DocumentPosition.Preceding;
        } else {
          return DocumentPosition.Following;
        }
      }

      isSameNode(other) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      lookupPrefix(namespaceURI) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      isDefaultNamespace(namespaceURI) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      lookupNamespaceURI(prefix) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      isEqualNode(node) {
        var i, j, ref1;
        if (node.nodeType !== this.nodeType) {
          return false;
        }
        if (node.children.length !== this.children.length) {
          return false;
        }
        for (i = j = 0, ref1 = this.children.length - 1; (0 <= ref1 ? j <= ref1 : j >= ref1); i = 0 <= ref1 ? ++j : --j) {
          if (!this.children[i].isEqualNode(node.children[i])) {
            return false;
          }
        }
        return true;
      }

      getFeature(feature, version) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      setUserData(key, data, handler) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getUserData(key) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // Returns true if other is an inclusive descendant of node,
      // and false otherwise.
      contains(other) {
        if (!other) {
          return false;
        }
        return other === this || this.isDescendant(other);
      }

      // An object A is called a descendant of an object B, if either A is 
      // a child of B or A is a child of an object C that is a descendant of B.
      isDescendant(node) {
        var child, isDescendantChild, j, len, ref1;
        ref1 = this.children;
        for (j = 0, len = ref1.length; j < len; j++) {
          child = ref1[j];
          if (node === child) {
            return true;
          }
          isDescendantChild = child.isDescendant(node);
          if (isDescendantChild) {
            return true;
          }
        }
        return false;
      }

      // An object A is called an ancestor of an object B if and only if
      // B is a descendant of A.
      isAncestor(node) {
        return node.isDescendant(this);
      }

      // An object A is preceding an object B if A and B are in the 
      // same tree and A comes before B in tree order.
      isPreceding(node) {
        var nodePos, thisPos;
        nodePos = this.treePosition(node);
        thisPos = this.treePosition(this);
        if (nodePos === -1 || thisPos === -1) {
          return false;
        } else {
          return nodePos < thisPos;
        }
      }

      // An object A is folllowing an object B if A and B are in the 
      // same tree and A comes after B in tree order.
      isFollowing(node) {
        var nodePos, thisPos;
        nodePos = this.treePosition(node);
        thisPos = this.treePosition(this);
        if (nodePos === -1 || thisPos === -1) {
          return false;
        } else {
          return nodePos > thisPos;
        }
      }

      // Returns the preorder position of the given node in the tree, or -1
      // if the node is not in the tree.
      treePosition(node) {
        var found, pos;
        pos = 0;
        found = false;
        this.foreachTreeNode(this.document(), function(childNode) {
          pos++;
          if (!found && childNode === node) {
            return found = true;
          }
        });
        if (found) {
          return pos;
        } else {
          return -1;
        }
      }

      
      // Depth-first preorder traversal through the XML tree
      foreachTreeNode(node, func) {
        var child, j, len, ref1, res;
        node || (node = this.document());
        ref1 = node.children;
        for (j = 0, len = ref1.length; j < len; j++) {
          child = ref1[j];
          if (res = func(child)) {
            return res;
          } else {
            res = this.foreachTreeNode(child, func);
            if (res) {
              return res;
            }
          }
        }
      }

    };

    // DOM level 1
    Object.defineProperty(XMLNode.prototype, 'nodeName', {
      get: function() {
        return this.name;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'nodeType', {
      get: function() {
        return this.type;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'nodeValue', {
      get: function() {
        return this.value;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'parentNode', {
      get: function() {
        return this.parent;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'childNodes', {
      get: function() {
        if (!this.childNodeList || !this.childNodeList.nodes) {
          this.childNodeList = new XMLNodeList(this.children);
        }
        return this.childNodeList;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'firstChild', {
      get: function() {
        return this.children[0] || null;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'lastChild', {
      get: function() {
        return this.children[this.children.length - 1] || null;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'previousSibling', {
      get: function() {
        var i;
        i = this.parent.children.indexOf(this);
        return this.parent.children[i - 1] || null;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'nextSibling', {
      get: function() {
        var i;
        i = this.parent.children.indexOf(this);
        return this.parent.children[i + 1] || null;
      }
    });

    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {
      get: function() {
        return this.document() || null;
      }
    });

    // DOM level 3
    Object.defineProperty(XMLNode.prototype, 'textContent', {
      get: function() {
        var child, j, len, ref1, str;
        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {
          str = '';
          ref1 = this.children;
          for (j = 0, len = ref1.length; j < len; j++) {
            child = ref1[j];
            if (child.textContent) {
              str += child.textContent;
            }
          }
          return str;
        } else {
          return null;
        }
      },
      set: function(value) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    return XMLNode;

  }).call(this);

}).call(this);


/***/ }),
/* 21 */,
/* 22 */,
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(244);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Copies all enumerable own properties from `sources` to `target`
  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,
    hasProp = {}.hasOwnProperty;

  assign = function(target, ...sources) {
    var i, key, len, source;
    if (isFunction(Object.assign)) {
      Object.assign.apply(null, arguments);
    } else {
      for (i = 0, len = sources.length; i < len; i++) {
        source = sources[i];
        if (source != null) {
          for (key in source) {
            if (!hasProp.call(source, key)) continue;
            target[key] = source[key];
          }
        }
      }
    }
    return target;
  };

  // Determines if `val` is a Function object
  isFunction = function(val) {
    return !!val && Object.prototype.toString.call(val) === '[object Function]';
  };

  // Determines if `val` is an Object
  isObject = function(val) {
    var ref;
    return !!val && ((ref = typeof val) === 'function' || ref === 'object');
  };

  // Determines if `val` is an Array
  isArray = function(val) {
    if (isFunction(Array.isArray)) {
      return Array.isArray(val);
    } else {
      return Object.prototype.toString.call(val) === '[object Array]';
    }
  };

  // Determines if `val` is an empty Array or an Object with no own properties
  isEmpty = function(val) {
    var key;
    if (isArray(val)) {
      return !val.length;
    } else {
      for (key in val) {
        if (!hasProp.call(val, key)) continue;
        return false;
      }
      return true;
    }
  };

  // Determines if `val` is a plain Object
  isPlainObject = function(val) {
    var ctor, proto;
    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));
  };

  // Gets the primitive value of an object
  getValue = function(obj) {
    if (isFunction(obj.valueOf)) {
      return obj.valueOf();
    } else {
      return obj;
    }
  };

  module.exports.assign = assign;

  module.exports.isFunction = isFunction;

  module.exports.isObject = isObject;

  module.exports.isArray = isArray;

  module.exports.isEmpty = isEmpty;

  module.exports.isPlainObject = isPlainObject;

  module.exports.getValue = getValue;

}).call(this);


/***/ }),
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


/***/ }),
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(674),
    getValue = __webpack_require__(679);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 32 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7c14ee4d_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Table_vue__ = __webpack_require__(506);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(504)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7c14ee4d"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Table_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7c14ee4d_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Table_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7c14ee4d_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Table_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/Table.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7c14ee4d", Component.options)
  } else {
    hotAPI.reload("data-v-7c14ee4d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 48 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(107),
    getRawTag = __webpack_require__(675),
    objectToString = __webpack_require__(676);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, ".sprite-main {display:inline-block; overflow:hidden; background-repeat: no-repeat;background-image:url(/mc/atlas/main_shop.png);}\n\n.Avatar {width:50px; height:50px; background-position: -512px -840px}\n.Close {width:20px; height:20px; background-position: -1677px -1439px}\n.Close-disabled {width:20px; height:20px; background-position: -1007px -1653px}\n.Coins-L {width:259px; height:186px; background-position: -1245px -1280px}\n.Coins-M {width:190px; height:154px; background-position: -1519px -0px}\n.Coins-S {width:114px; height:105px; background-position: -1390px -1610px}\n.Coins-XL {width:280px; height:212px; background-position: -965px -1292px}\n.Coins-XS {width:81px; height:97px; background-position: -1504px -1610px}\n.Coins-XXL {width:343px; height:225px; background-position: -512px -1137px}\n.Confetti {width:365px; height:247px; background-position: -512px -890px}\n.Exp-Star {width:125px; height:125px; background-position: -1598px -1065px}\n.Icon-DailyQuests {width:49px; height:40px; background-position: -1560px -1211px}\n.Icon-Gifting {width:37px; height:47px; background-position: -685px -595px}\n.Icon-Leaderboards {width:58px; height:42px; background-position: -949px -1653px}\n.Icon-Store {width:46px; height:43px; background-position: -1677px -1396px}\n.Trophy {width:310px; height:368px; background-position: -1209px -0px}\n.Trophy-2 {width:483px; height:412px; background-position: -726px -0px}\n.Trophy-3 {width:615px; height:418px; background-position: -0px -422px}\n.Trophy-4 {width:726px; height:422px; background-position: -0px -0px}\n.alert-icon {width:140px; height:129px; background-position: -1504px -1251px}\n.appstore {width:116px; height:39px; background-position: -1553px -847px}\n.arrow {width:24px; height:119px; background-position: -1701px -847px}\n.arrow-right {width:45px; height:25px; background-position: -0px -1700px}\n.arrow-up-blue {width:23px; height:31px; background-position: -923px -1292px}\n.arrow-up-green {width:23px; height:31px; background-position: -1644px -1347px}\n.back-button {width:39px; height:39px; background-position: -1585px -1686px}\n.check {width:21px; height:21px; background-position: -1349px -391px}\n.checkbox-img {width:21px; height:21px; background-position: -1370px -391px}\n.chest-bottom {width:319px; height:149px; background-position: -376px -1567px}\n.chest-top {width:319px; height:205px; background-position: -376px -1362px}\n.clock-grey {width:20px; height:21px; background-position: -45px -1700px}\n.clock-white {width:20px; height:21px; background-position: -855px -1137px}\n.cog {width:30px; height:30px; background-position: -1419px -1065px}\n.coins-button {width:396px; height:239px; background-position: -615px -651px}\n.controller {width:41px; height:19px; background-position: -849px -1701px}\n.currency-icon {width:19px; height:19px; background-position: -1706px -450px}\n.dailyquest-chest {width:154px; height:119px; background-position: -695px -1601px}\n.dailyquest-chestbudle {width:297px; height:149px; background-position: -965px -1504px}\n.dna-small-icon {width:29px; height:27px; background-position: -1443px -1251px}\n.exp-star {width:100px; height:100px; background-position: -849px -1601px}\n.fast-play {width:18px; height:13px; background-position: -1690px -154px}\n.fb-icon {width:9px; height:18px; background-position: -1209px -394px}\n.flask-alert {width:210px; height:175px; background-position: -1418px -890px}\n.freecoins-video {width:33px; height:37px; background-position: -1519px -325px}\n.fully-upgraded {width:45px; height:21px; background-position: -1598px -1190px}\n.gamemode-Icon-BattleRoyale {width:110px; height:173px; background-position: -615px -422px}\n.gamemode-Icon-Experimental {width:78px; height:77px; background-position: -1644px -1270px}\n.gamemode-Icon-FFA {width:78px; height:64px; background-position: -1628px -999px}\n.gamemode-Icon-Teams {width:73px; height:113px; background-position: -1628px -886px}\n.giant-coin {width:160px; height:155px; background-position: -1393px -368px}\n.gift-big-icons {width:343px; height:163px; background-position: -877px -1129px}\n.gifting-button {width:397px; height:239px; background-position: -726px -412px}\n.gifts-icon {width:223px; height:151px; background-position: -1220px -1129px}\n.google-icon {width:80px; height:80px; background-position: -1644px -1190px}\n.google-play {width:117px; height:40px; background-position: -1443px -1211px}\n.hint {width:24px; height:24px; background-position: -1701px -966px}\n.hint-button {width:75px; height:76px; background-position: -1585px -1610px}\n.icon-reconnect {width:128px; height:115px; background-position: -1262px -1610px}\n.inparty-banner {width:90px; height:86px; background-position: -1504px -1380px}\n.locket {width:17px; height:23px; background-position: -1245px -1466px}\n.massboost-2x-shop {width:163px; height:126px; background-position: -1393px -523px}\n.massboost-3x-shop {width:162px; height:126px; background-position: -1556px -596px}\n.massboost-main {width:150px; height:146px; background-position: -1556px -450px}\n.multiplier-stamp {width:70px; height:55px; background-position: -615px -595px}\n.not-for-guests {width:329px; height:144px; background-position: -1262px -1466px}\n.partymode-menu-icon {width:29px; height:23px; background-position: -1349px -368px}\n.partymode-menu-leave {width:16px; height:17px; background-position: -1709px -0px}\n.pellets-openflask {width:376px; height:348px; background-position: -0px -1352px}\n.play {width:11px; height:13px; background-position: -1609px -1211px}\n.progress-striped {width:140px; height:26px; background-position: -1209px -368px}\n.purchase-plus {width:68px; height:68px; background-position: -855px -1292px}\n.search-mini-icon {width:16px; height:16px; background-position: -949px -1601px}\n.shop-coins {width:270px; height:239px; background-position: -695px -1362px}\n.shop-dna {width:270px; height:239px; background-position: -877px -890px}\n.shop-flasks {width:271px; height:239px; background-position: -1011px -651px}\n.shop-mass {width:270px; height:239px; background-position: -1123px -412px}\n.shop-skins {width:271px; height:239px; background-position: -1147px -890px}\n.shop-xp {width:271px; height:239px; background-position: -1282px -651px}\n.skin-normal {width:74px; height:74px; background-position: -1594px -1461px}\n.skin-special {width:74px; height:74px; background-position: -1591px -1535px}\n.skin-special-big {width:171px; height:171px; background-position: -1519px -154px}\n.skin-special-big-question-mark {width:512px; height:512px; background-position: -0px -840px}\n.special-badge {width:48px; height:49px; background-position: -1677px -1347px}\n.sticker {width:50px; height:49px; background-position: -562px -840px}\n.sticker-green {width:83px; height:81px; background-position: -1594px -1380px}\n.survey-icon {width:31px; height:36px; background-position: -1669px -847px}\n.twitter-icon {width:21px; height:17px; background-position: -1624px -1686px}\n.xpboost-2x-shop {width:172px; height:125px; background-position: -1553px -325px}\n.xpboost-3x-shop {width:170px; height:123px; background-position: -1553px -723px}\n.xpboost-main {width:155px; height:146px; background-position: -1443px -1065px}\n", ""]);

// exports


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4e9866c4_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Header_vue__ = __webpack_require__(500);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(498)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-4e9866c4"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Header_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4e9866c4_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Header_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4e9866c4_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Header_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/Header.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4e9866c4", Component.options)
  } else {
    hotAPI.reload("data-v-4e9866c4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_654ce29c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Prizes_vue__ = __webpack_require__(503);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(501)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-654ce29c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Prizes_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_654ce29c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Prizes_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_654ce29c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Prizes_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/Prizes.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-654ce29c", Component.options)
  } else {
    hotAPI.reload("data-v-654ce29c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.
 *
 * Works with anything that has a `length` property and index access properties, including NodeList.
 *
 * @template {unknown} T
 * @param {Array<T> | ({length:number, [number]: T})} list
 * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate
 * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,
 * 				allows injecting a custom implementation in tests
 * @returns {T | undefined}
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
 * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find
 */
function find(list, predicate, ac) {
	if (ac === undefined) {
		ac = Array.prototype;
	}
	if (list && typeof ac.find === 'function') {
		return ac.find.call(list, predicate);
	}
	for (var i = 0; i < list.length; i++) {
		if (Object.prototype.hasOwnProperty.call(list, i)) {
			var item = list[i];
			if (predicate.call(undefined, item, i, list)) {
				return item;
			}
		}
	}
}

/**
 * "Shallow freezes" an object to render it immutable.
 * Uses `Object.freeze` if available,
 * otherwise the immutability is only in the type.
 *
 * Is used to create "enum like" objects.
 *
 * @template T
 * @param {T} object the object to freeze
 * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,
 * 				allows to inject custom object constructor for tests
 * @returns {Readonly<T>}
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze
 */
function freeze(object, oc) {
	if (oc === undefined) {
		oc = Object
	}
	return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object
}

/**
 * Since we can not rely on `Object.assign` we provide a simplified version
 * that is sufficient for our needs.
 *
 * @param {Object} target
 * @param {Object | null | undefined} source
 *
 * @returns {Object} target
 * @throws TypeError if target is not an object
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
 * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign
 */
function assign(target, source) {
	if (target === null || typeof target !== 'object') {
		throw new TypeError('target is not an object')
	}
	for (var key in source) {
		if (Object.prototype.hasOwnProperty.call(source, key)) {
			target[key] = source[key]
		}
	}
	return target
}

/**
 * All mime types that are allowed as input to `DOMParser.parseFromString`
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec
 * @see DOMParser.prototype.parseFromString
 */
var MIME_TYPE = freeze({
	/**
	 * `text/html`, the only mime type that triggers treating an XML document as HTML.
	 *
	 * @see DOMParser.SupportedType.isHTML
	 * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
	 * @see https://en.wikipedia.org/wiki/HTML Wikipedia
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
	 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec
	 */
	HTML: 'text/html',

	/**
	 * Helper method to check a mime type if it indicates an HTML document
	 *
	 * @param {string} [value]
	 * @returns {boolean}
	 *
	 * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
	 * @see https://en.wikipedia.org/wiki/HTML Wikipedia
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
	 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring 	 */
	isHTML: function (value) {
		return value === MIME_TYPE.HTML
	},

	/**
	 * `application/xml`, the standard mime type for XML documents.
	 *
	 * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration
	 * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303
	 * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
	 */
	XML_APPLICATION: 'application/xml',

	/**
	 * `text/html`, an alias for `application/xml`.
	 *
	 * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303
	 * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration
	 * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
	 */
	XML_TEXT: 'text/xml',

	/**
	 * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,
	 * but is parsed as an XML document.
	 *
	 * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration
	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec
	 * @see https://en.wikipedia.org/wiki/XHTML Wikipedia
	 */
	XML_XHTML_APPLICATION: 'application/xhtml+xml',

	/**
	 * `image/svg+xml`,
	 *
	 * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration
	 * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1
	 * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia
	 */
	XML_SVG_IMAGE: 'image/svg+xml',
})

/**
 * Namespaces that are used in this code base.
 *
 * @see http://www.w3.org/TR/REC-xml-names
 */
var NAMESPACE = freeze({
	/**
	 * The XHTML namespace.
	 *
	 * @see http://www.w3.org/1999/xhtml
	 */
	HTML: 'http://www.w3.org/1999/xhtml',

	/**
	 * Checks if `uri` equals `NAMESPACE.HTML`.
	 *
	 * @param {string} [uri]
	 *
	 * @see NAMESPACE.HTML
	 */
	isHTML: function (uri) {
		return uri === NAMESPACE.HTML
	},

	/**
	 * The SVG namespace.
	 *
	 * @see http://www.w3.org/2000/svg
	 */
	SVG: 'http://www.w3.org/2000/svg',

	/**
	 * The `xml:` namespace.
	 *
	 * @see http://www.w3.org/XML/1998/namespace
	 */
	XML: 'http://www.w3.org/XML/1998/namespace',

	/**
	 * The `xmlns:` namespace
	 *
	 * @see https://www.w3.org/2000/xmlns/
	 */
	XMLNS: 'http://www.w3.org/2000/xmlns/',
})

exports.assign = assign;
exports.find = find;
exports.freeze = freeze;
exports.MIME_TYPE = MIME_TYPE;
exports.NAMESPACE = NAMESPACE;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var XMLCharacterData, XMLNode;

  XMLNode = __webpack_require__(20);

  // Represents a character data node
  module.exports = XMLCharacterData = (function() {
    class XMLCharacterData extends XMLNode {
      // Initializes a new instance of `XMLCharacterData`

      constructor(parent) {
        super(parent);
        this.value = '';
      }

      
      // Creates and returns a deep clone of `this`
      clone() {
        return Object.create(this);
      }

      // DOM level 1 functions to be implemented later
      substringData(offset, count) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      appendData(arg) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      insertData(offset, arg) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      deleteData(offset, count) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      replaceData(offset, count, arg) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      isEqualNode(node) {
        if (!super.isEqualNode(node)) {
          return false;
        }
        if (node.data !== this.data) {
          return false;
        }
        return true;
      }

    };

    // DOM level 1
    Object.defineProperty(XMLCharacterData.prototype, 'data', {
      get: function() {
        return this.value;
      },
      set: function(value) {
        return this.value = value || '';
      }
    });

    Object.defineProperty(XMLCharacterData.prototype, 'length', {
      get: function() {
        return this.value.length;
      }
    });

    // DOM level 3
    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {
      get: function() {
        return this.value;
      },
      set: function(value) {
        return this.value = value || '';
      }
    });

    return XMLCharacterData;

  }).call(this);

}).call(this);


/***/ }),
/* 59 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    None: 0,
    OpenTag: 1,
    InsideTag: 2,
    CloseTag: 3
  };

}).call(this);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(664),
    listCacheDelete = __webpack_require__(665),
    listCacheGet = __webpack_require__(666),
    listCacheHas = __webpack_require__(667),
    listCacheSet = __webpack_require__(668);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(48);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(688);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 64 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(106),
    isLength = __webpack_require__(252);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fb660a50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CounterCircle_vue__ = __webpack_require__(432);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(430)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-fb660a50"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CounterCircle_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fb660a50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CounterCircle_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_fb660a50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CounterCircle_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/CounterCircle.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fb660a50", Component.options)
  } else {
    hotAPI.reload("data-v-fb660a50", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_575582a5_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SpineAnimation_vue__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(457)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SpineAnimation_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_575582a5_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SpineAnimation_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_575582a5_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SpineAnimation_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/SpineAnimation.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-575582a5", Component.options)
  } else {
    hotAPI.reload("data-v-575582a5", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0875eca7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpTrophies_vue__ = __webpack_require__(538);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(536)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0875eca7"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpTrophies_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0875eca7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpTrophies_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0875eca7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpTrophies_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/country/CountryWorldHelpTrophies.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0875eca7", Component.options)
  } else {
    hotAPI.reload("data-v-0875eca7", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject,
    hasProp = {}.hasOwnProperty;

  ({isObject, isFunction, getValue} = __webpack_require__(24));

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  XMLAttribute = __webpack_require__(234);

  XMLNamedNodeMap = __webpack_require__(91);

  // Represents an element of the XML document
  module.exports = XMLElement = (function() {
    class XMLElement extends XMLNode {
      // Initializes a new instance of `XMLElement`

      // `parent` the parent node
      // `name` element name
      // `attributes` an object containing name/value pairs of attributes
      constructor(parent, name, attributes) {
        var child, j, len, ref;
        super(parent);
        if (name == null) {
          throw new Error("Missing element name. " + this.debugInfo());
        }
        this.name = this.stringify.name(name);
        this.type = NodeType.Element;
        this.attribs = {};
        this.schemaTypeInfo = null;
        if (attributes != null) {
          this.attribute(attributes);
        }
        // set properties if this is the root node
        if (parent.type === NodeType.Document) {
          this.isRoot = true;
          this.documentObject = parent;
          parent.rootObject = this;
          // set dtd name
          if (parent.children) {
            ref = parent.children;
            for (j = 0, len = ref.length; j < len; j++) {
              child = ref[j];
              if (child.type === NodeType.DocType) {
                child.name = this.name;
                break;
              }
            }
          }
        }
      }

      // Creates and returns a deep clone of `this`

      clone() {
        var att, attName, clonedSelf, ref;
        clonedSelf = Object.create(this);
        // remove document element
        if (clonedSelf.isRoot) {
          clonedSelf.documentObject = null;
        }
        // clone attributes
        clonedSelf.attribs = {};
        ref = this.attribs;
        for (attName in ref) {
          if (!hasProp.call(ref, attName)) continue;
          att = ref[attName];
          clonedSelf.attribs[attName] = att.clone();
        }
        // clone child nodes
        clonedSelf.children = [];
        this.children.forEach(function(child) {
          var clonedChild;
          clonedChild = child.clone();
          clonedChild.parent = clonedSelf;
          return clonedSelf.children.push(clonedChild);
        });
        return clonedSelf;
      }

      // Adds or modifies an attribute

      // `name` attribute name
      // `value` attribute value
      attribute(name, value) {
        var attName, attValue;
        if (name != null) {
          name = getValue(name);
        }
        if (isObject(name)) { // expand if object
          for (attName in name) {
            if (!hasProp.call(name, attName)) continue;
            attValue = name[attName];
            this.attribute(attName, attValue);
          }
        } else {
          if (isFunction(value)) {
            value = value.apply();
          }
          if (this.options.keepNullAttributes && (value == null)) {
            this.attribs[name] = new XMLAttribute(this, name, "");
          } else if (value != null) {
            this.attribs[name] = new XMLAttribute(this, name, value);
          }
        }
        return this;
      }

      // Removes an attribute

      // `name` attribute name
      removeAttribute(name) {
        var attName, j, len;
        // Also defined in DOM level 1
        // removeAttribute(name) removes an attribute by name.
        if (name == null) {
          throw new Error("Missing attribute name. " + this.debugInfo());
        }
        name = getValue(name);
        if (Array.isArray(name)) { // expand if array
          for (j = 0, len = name.length; j < len; j++) {
            attName = name[j];
            delete this.attribs[attName];
          }
        } else {
          delete this.attribs[name];
        }
        return this;
      }

      // Converts the XML fragment to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      // `options.allowEmpty` do not self close empty element tags
      toString(options) {
        return this.options.writer.element(this, this.options.writer.filterOptions(options));
      }

      // Aliases
      att(name, value) {
        return this.attribute(name, value);
      }

      a(name, value) {
        return this.attribute(name, value);
      }

      // DOM Level 1
      getAttribute(name) {
        if (this.attribs.hasOwnProperty(name)) {
          return this.attribs[name].value;
        } else {
          return null;
        }
      }

      setAttribute(name, value) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getAttributeNode(name) {
        if (this.attribs.hasOwnProperty(name)) {
          return this.attribs[name];
        } else {
          return null;
        }
      }

      setAttributeNode(newAttr) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      removeAttributeNode(oldAttr) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByTagName(name) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM Level 2
      getAttributeNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      setAttributeNS(namespaceURI, qualifiedName, value) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      removeAttributeNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getAttributeNodeNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      setAttributeNodeNS(newAttr) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByTagNameNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      hasAttribute(name) {
        return this.attribs.hasOwnProperty(name);
      }

      hasAttributeNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM Level 3
      setIdAttribute(name, isId) {
        if (this.attribs.hasOwnProperty(name)) {
          return this.attribs[name].isId;
        } else {
          return isId;
        }
      }

      setIdAttributeNS(namespaceURI, localName, isId) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      setIdAttributeNode(idAttr, isId) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM Level 4
      getElementsByTagName(tagname) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByTagNameNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByClassName(classNames) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      isEqualNode(node) {
        var i, j, ref;
        if (!super.isEqualNode(node)) {
          return false;
        }
        if (node.namespaceURI !== this.namespaceURI) {
          return false;
        }
        if (node.prefix !== this.prefix) {
          return false;
        }
        if (node.localName !== this.localName) {
          return false;
        }
        if (node.attribs.length !== this.attribs.length) {
          return false;
        }
        for (i = j = 0, ref = this.attribs.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
          if (!this.attribs[i].isEqualNode(node.attribs[i])) {
            return false;
          }
        }
        return true;
      }

    };

    // DOM level 1
    Object.defineProperty(XMLElement.prototype, 'tagName', {
      get: function() {
        return this.name;
      }
    });

    // DOM level 4
    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {
      get: function() {
        return '';
      }
    });

    Object.defineProperty(XMLElement.prototype, 'prefix', {
      get: function() {
        return '';
      }
    });

    Object.defineProperty(XMLElement.prototype, 'localName', {
      get: function() {
        return this.name;
      }
    });

    Object.defineProperty(XMLElement.prototype, 'id', {
      get: function() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    Object.defineProperty(XMLElement.prototype, 'className', {
      get: function() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    Object.defineProperty(XMLElement.prototype, 'classList', {
      get: function() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    Object.defineProperty(XMLElement.prototype, 'attributes', {
      get: function() {
        if (!this.attributeMap || !this.attributeMap.nodes) {
          this.attributeMap = new XMLNamedNodeMap(this.attribs);
        }
        return this.attributeMap;
      }
    });

    return XMLElement;

  }).call(this);

}).call(this);


/***/ }),
/* 91 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Represents a map of nodes accessed by a string key
  var XMLNamedNodeMap;

  module.exports = XMLNamedNodeMap = (function() {
    class XMLNamedNodeMap {
      // Initializes a new instance of `XMLNamedNodeMap`
      // This is just a wrapper around an ordinary
      // JS object.

      // `nodes` the object containing nodes.
      constructor(nodes) {
        this.nodes = nodes;
      }

      // Creates and returns a deep clone of `this`

      clone() {
        // this class should not be cloned since it wraps
        // around a given object. The calling function should check
        // whether the wrapped object is null and supply a new object
        // (from the clone).
        return this.nodes = null;
      }

      // DOM Level 1
      getNamedItem(name) {
        return this.nodes[name];
      }

      setNamedItem(node) {
        var oldNode;
        oldNode = this.nodes[node.nodeName];
        this.nodes[node.nodeName] = node;
        return oldNode || null;
      }

      removeNamedItem(name) {
        var oldNode;
        oldNode = this.nodes[name];
        delete this.nodes[name];
        return oldNode || null;
      }

      item(index) {
        return this.nodes[Object.keys(this.nodes)[index]] || null;
      }

      // DOM level 2 functions to be implemented later
      getNamedItemNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented.");
      }

      setNamedItemNS(node) {
        throw new Error("This DOM method is not implemented.");
      }

      removeNamedItemNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented.");
      }

    };

    
    // DOM level 1
    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {
      get: function() {
        return Object.keys(this.nodes).length || 0;
      }
    });

    return XMLNamedNodeMap;

  }).call(this);

}).call(this);


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLCData, XMLCharacterData;

  NodeType = __webpack_require__(6);

  XMLCharacterData = __webpack_require__(58);

  // Represents a  CDATA node
  module.exports = XMLCData = class XMLCData extends XMLCharacterData {
    // Initializes a new instance of `XMLCData`

    // `text` CDATA text
    constructor(parent, text) {
      super(parent);
      if (text == null) {
        throw new Error("Missing CDATA text. " + this.debugInfo());
      }
      this.name = "#cdata-section";
      this.type = NodeType.CData;
      this.value = this.stringify.cdata(text);
    }

    // Creates and returns a deep clone of `this`
    clone() {
      return Object.create(this);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLCharacterData, XMLComment;

  NodeType = __webpack_require__(6);

  XMLCharacterData = __webpack_require__(58);

  // Represents a comment node
  module.exports = XMLComment = class XMLComment extends XMLCharacterData {
    // Initializes a new instance of `XMLComment`

    // `text` comment text
    constructor(parent, text) {
      super(parent);
      if (text == null) {
        throw new Error("Missing comment text. " + this.debugInfo());
      }
      this.name = "#comment";
      this.type = NodeType.Comment;
      this.value = this.stringify.comment(text);
    }

    // Creates and returns a deep clone of `this`
    clone() {
      return Object.create(this);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.comment(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDeclaration, XMLNode, isObject;

  ({isObject} = __webpack_require__(24));

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents the XML declaration
  module.exports = XMLDeclaration = class XMLDeclaration extends XMLNode {
    // Initializes a new instance of `XMLDeclaration`

    // `parent` the document object

    // `version` A version number string, e.g. 1.0
    // `encoding` Encoding declaration, e.g. UTF-8
    // `standalone` standalone document declaration: true or false
    constructor(parent, version, encoding, standalone) {
      super(parent);
      // arguments may also be passed as an object
      if (isObject(version)) {
        ({version, encoding, standalone} = version);
      }
      if (!version) {
        version = '1.0';
      }
      this.type = NodeType.Declaration;
      this.version = this.stringify.xmlVersion(version);
      if (encoding != null) {
        this.encoding = this.stringify.xmlEncoding(encoding);
      }
      if (standalone != null) {
        this.standalone = this.stringify.xmlStandalone(standalone);
      }
    }

    // Converts to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject;

  ({isObject} = __webpack_require__(24));

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  XMLDTDAttList = __webpack_require__(96);

  XMLDTDEntity = __webpack_require__(97);

  XMLDTDElement = __webpack_require__(98);

  XMLDTDNotation = __webpack_require__(99);

  XMLNamedNodeMap = __webpack_require__(91);

  // Represents doctype declaration
  module.exports = XMLDocType = (function() {
    class XMLDocType extends XMLNode {
      // Initializes a new instance of `XMLDocType`

      // `parent` the document object

      // `pubID` public identifier of the external subset
      // `sysID` system identifier of the external subset
      constructor(parent, pubID, sysID) {
        var child, i, len, ref;
        super(parent);
        this.type = NodeType.DocType;
        // set DTD name to the name of the root node
        if (parent.children) {
          ref = parent.children;
          for (i = 0, len = ref.length; i < len; i++) {
            child = ref[i];
            if (child.type === NodeType.Element) {
              this.name = child.name;
              break;
            }
          }
        }
        this.documentObject = parent;
        // arguments may also be passed as an object
        if (isObject(pubID)) {
          ({pubID, sysID} = pubID);
        }
        if (sysID == null) {
          [sysID, pubID] = [pubID, sysID];
        }
        if (pubID != null) {
          this.pubID = this.stringify.dtdPubID(pubID);
        }
        if (sysID != null) {
          this.sysID = this.stringify.dtdSysID(sysID);
        }
      }

      // Creates an element type declaration

      // `name` element name
      // `value` element content (defaults to #PCDATA)
      element(name, value) {
        var child;
        child = new XMLDTDElement(this, name, value);
        this.children.push(child);
        return this;
      }

      // Creates an attribute declaration

      // `elementName` the name of the element containing this attribute
      // `attributeName` attribute name
      // `attributeType` type of the attribute (defaults to CDATA)
      // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or
      //                    #DEFAULT) (defaults to #IMPLIED)
      // `defaultValue` default value of the attribute
      //                (only used for #FIXED or #DEFAULT)
      attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
        var child;
        child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
        this.children.push(child);
        return this;
      }

      // Creates a general entity declaration

      // `name` the name of the entity
      // `value` internal entity value or an object with external entity details
      // `value.pubID` public identifier
      // `value.sysID` system identifier
      // `value.nData` notation declaration
      entity(name, value) {
        var child;
        child = new XMLDTDEntity(this, false, name, value);
        this.children.push(child);
        return this;
      }

      // Creates a parameter entity declaration

      // `name` the name of the entity
      // `value` internal entity value or an object with external entity details
      // `value.pubID` public identifier
      // `value.sysID` system identifier
      pEntity(name, value) {
        var child;
        child = new XMLDTDEntity(this, true, name, value);
        this.children.push(child);
        return this;
      }

      // Creates a NOTATION declaration

      // `name` the name of the notation
      // `value` an object with external entity details
      // `value.pubID` public identifier
      // `value.sysID` system identifier
      notation(name, value) {
        var child;
        child = new XMLDTDNotation(this, name, value);
        this.children.push(child);
        return this;
      }

      // Converts to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.docType(this, this.options.writer.filterOptions(options));
      }

      // Aliases
      ele(name, value) {
        return this.element(name, value);
      }

      att(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
        return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);
      }

      ent(name, value) {
        return this.entity(name, value);
      }

      pent(name, value) {
        return this.pEntity(name, value);
      }

      not(name, value) {
        return this.notation(name, value);
      }

      up() {
        return this.root() || this.documentObject;
      }

      isEqualNode(node) {
        if (!super.isEqualNode(node)) {
          return false;
        }
        if (node.name !== this.name) {
          return false;
        }
        if (node.publicId !== this.publicId) {
          return false;
        }
        if (node.systemId !== this.systemId) {
          return false;
        }
        return true;
      }

    };

    // DOM level 1
    Object.defineProperty(XMLDocType.prototype, 'entities', {
      get: function() {
        var child, i, len, nodes, ref;
        nodes = {};
        ref = this.children;
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {
            nodes[child.name] = child;
          }
        }
        return new XMLNamedNodeMap(nodes);
      }
    });

    Object.defineProperty(XMLDocType.prototype, 'notations', {
      get: function() {
        var child, i, len, nodes, ref;
        nodes = {};
        ref = this.children;
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          if (child.type === NodeType.NotationDeclaration) {
            nodes[child.name] = child;
          }
        }
        return new XMLNamedNodeMap(nodes);
      }
    });

    // DOM level 2
    Object.defineProperty(XMLDocType.prototype, 'publicId', {
      get: function() {
        return this.pubID;
      }
    });

    Object.defineProperty(XMLDocType.prototype, 'systemId', {
      get: function() {
        return this.sysID;
      }
    });

    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {
      get: function() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    return XMLDocType;

  }).call(this);

}).call(this);


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDTDAttList, XMLNode;

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents an attribute list
  module.exports = XMLDTDAttList = class XMLDTDAttList extends XMLNode {
    // Initializes a new instance of `XMLDTDAttList`

    // `parent` the parent `XMLDocType` element
    // `elementName` the name of the element containing this attribute
    // `attributeName` attribute name
    // `attributeType` type of the attribute
    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED,
    //                    #FIXED or #DEFAULT)
    // `defaultValue` default value of the attribute
    //                (only used for #FIXED or #DEFAULT)
    constructor(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      super(parent);
      if (elementName == null) {
        throw new Error("Missing DTD element name. " + this.debugInfo());
      }
      if (attributeName == null) {
        throw new Error("Missing DTD attribute name. " + this.debugInfo(elementName));
      }
      if (!attributeType) {
        throw new Error("Missing DTD attribute type. " + this.debugInfo(elementName));
      }
      if (!defaultValueType) {
        throw new Error("Missing DTD attribute default. " + this.debugInfo(elementName));
      }
      if (defaultValueType.indexOf('#') !== 0) {
        defaultValueType = '#' + defaultValueType;
      }
      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {
        throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. " + this.debugInfo(elementName));
      }
      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {
        throw new Error("Default value only applies to #FIXED or #DEFAULT. " + this.debugInfo(elementName));
      }
      this.elementName = this.stringify.name(elementName);
      this.type = NodeType.AttributeDeclaration;
      this.attributeName = this.stringify.name(attributeName);
      this.attributeType = this.stringify.dtdAttType(attributeType);
      if (defaultValue) {
        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);
      }
      this.defaultValueType = defaultValueType;
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDTDEntity, XMLNode, isObject;

  ({isObject} = __webpack_require__(24));

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents an entity declaration in the DTD
  module.exports = XMLDTDEntity = (function() {
    class XMLDTDEntity extends XMLNode {
      // Initializes a new instance of `XMLDTDEntity`

      // `parent` the parent `XMLDocType` element
      // `pe` whether this is a parameter entity or a general entity
      //      defaults to `false` (general entity)
      // `name` the name of the entity
      // `value` internal entity value or an object with external entity details
      // `value.pubID` public identifier
      // `value.sysID` system identifier
      // `value.nData` notation declaration
      constructor(parent, pe, name, value) {
        super(parent);
        if (name == null) {
          throw new Error("Missing DTD entity name. " + this.debugInfo(name));
        }
        if (value == null) {
          throw new Error("Missing DTD entity value. " + this.debugInfo(name));
        }
        this.pe = !!pe;
        this.name = this.stringify.name(name);
        this.type = NodeType.EntityDeclaration;
        if (!isObject(value)) {
          this.value = this.stringify.dtdEntityValue(value);
          this.internal = true;
        } else {
          if (!value.pubID && !value.sysID) {
            throw new Error("Public and/or system identifiers are required for an external entity. " + this.debugInfo(name));
          }
          if (value.pubID && !value.sysID) {
            throw new Error("System identifier is required for a public external entity. " + this.debugInfo(name));
          }
          this.internal = false;
          if (value.pubID != null) {
            this.pubID = this.stringify.dtdPubID(value.pubID);
          }
          if (value.sysID != null) {
            this.sysID = this.stringify.dtdSysID(value.sysID);
          }
          if (value.nData != null) {
            this.nData = this.stringify.dtdNData(value.nData);
          }
          if (this.pe && this.nData) {
            throw new Error("Notation declaration is not allowed in a parameter entity. " + this.debugInfo(name));
          }
        }
      }

      // Converts the XML fragment to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));
      }

    };

    // DOM level 1
    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {
      get: function() {
        return this.pubID;
      }
    });

    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {
      get: function() {
        return this.sysID;
      }
    });

    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {
      get: function() {
        return this.nData || null;
      }
    });

    // DOM level 3
    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {
      get: function() {
        return null;
      }
    });

    return XMLDTDEntity;

  }).call(this);

}).call(this);


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDTDElement, XMLNode;

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents an attribute
  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {
    // Initializes a new instance of `XMLDTDElement`

    // `parent` the parent `XMLDocType` element
    // `name` element name
    // `value` element content (defaults to #PCDATA)
    constructor(parent, name, value) {
      super(parent);
      if (name == null) {
        throw new Error("Missing DTD element name. " + this.debugInfo());
      }
      if (!value) {
        value = '(#PCDATA)';
      }
      if (Array.isArray(value)) {
        value = '(' + value.join(',') + ')';
      }
      this.name = this.stringify.name(name);
      this.type = NodeType.ElementDeclaration;
      this.value = this.stringify.dtdElementValue(value);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDTDNotation, XMLNode;

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents a NOTATION entry in the DTD
  module.exports = XMLDTDNotation = (function() {
    class XMLDTDNotation extends XMLNode {
      // Initializes a new instance of `XMLDTDNotation`

      // `parent` the parent `XMLDocType` element
      // `name` the name of the notation
      // `value` an object with external entity details
      // `value.pubID` public identifier
      // `value.sysID` system identifier
      constructor(parent, name, value) {
        super(parent);
        if (name == null) {
          throw new Error("Missing DTD notation name. " + this.debugInfo(name));
        }
        if (!value.pubID && !value.sysID) {
          throw new Error("Public or system identifiers are required for an external entity. " + this.debugInfo(name));
        }
        this.name = this.stringify.name(name);
        this.type = NodeType.NotationDeclaration;
        if (value.pubID != null) {
          this.pubID = this.stringify.dtdPubID(value.pubID);
        }
        if (value.sysID != null) {
          this.sysID = this.stringify.dtdSysID(value.sysID);
        }
      }

      // Converts the XML fragment to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));
      }

    };

    // DOM level 1
    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {
      get: function() {
        return this.pubID;
      }
    });

    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {
      get: function() {
        return this.sysID;
      }
    });

    return XMLDTDNotation;

  }).call(this);

}).call(this);


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLNode, XMLRaw;

  NodeType = __webpack_require__(6);

  XMLNode = __webpack_require__(20);

  // Represents a  raw node
  module.exports = XMLRaw = class XMLRaw extends XMLNode {
    // Initializes a new instance of `XMLRaw`

    // `text` raw text
    constructor(parent, text) {
      super(parent);
      if (text == null) {
        throw new Error("Missing raw text. " + this.debugInfo());
      }
      this.type = NodeType.Raw;
      this.value = this.stringify.raw(text);
    }

    // Creates and returns a deep clone of `this`
    clone() {
      return Object.create(this);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.raw(this, this.options.writer.filterOptions(options));
    }

  };

}).call(this);


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLCharacterData, XMLText;

  NodeType = __webpack_require__(6);

  XMLCharacterData = __webpack_require__(58);

  // Represents a text node
  module.exports = XMLText = (function() {
    class XMLText extends XMLCharacterData {
      // Initializes a new instance of `XMLText`

      // `text` element text
      constructor(parent, text) {
        super(parent);
        if (text == null) {
          throw new Error("Missing element text. " + this.debugInfo());
        }
        this.name = "#text";
        this.type = NodeType.Text;
        this.value = this.stringify.text(text);
      }

      // Creates and returns a deep clone of `this`
      clone() {
        return Object.create(this);
      }

      // Converts the XML fragment to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.text(this, this.options.writer.filterOptions(options));
      }

      // DOM level 1 functions to be implemented later
      splitText(offset) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM level 3 functions to be implemented later
      replaceWholeText(content) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

    };

    // DOM level 3
    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {
      get: function() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }
    });

    Object.defineProperty(XMLText.prototype, 'wholeText', {
      get: function() {
        var next, prev, str;
        str = '';
        prev = this.previousSibling;
        while (prev) {
          str = prev.data + str;
          prev = prev.previousSibling;
        }
        str += this.data;
        next = this.nextSibling;
        while (next) {
          str = str + next.data;
          next = next.nextSibling;
        }
        return str;
      }
    });

    return XMLText;

  }).call(this);

}).call(this);


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLCharacterData, XMLProcessingInstruction;

  NodeType = __webpack_require__(6);

  XMLCharacterData = __webpack_require__(58);

  // Represents a processing instruction
  module.exports = XMLProcessingInstruction = class XMLProcessingInstruction extends XMLCharacterData {
    // Initializes a new instance of `XMLProcessingInstruction`

    // `parent` the parent node
    // `target` instruction target
    // `value` instruction value
    constructor(parent, target, value) {
      super(parent);
      if (target == null) {
        throw new Error("Missing instruction target. " + this.debugInfo());
      }
      this.type = NodeType.ProcessingInstruction;
      this.target = this.stringify.insTarget(target);
      this.name = this.target;
      if (value) {
        this.value = this.stringify.insValue(value);
      }
    }

    // Creates and returns a deep clone of `this`
    clone() {
      return Object.create(this);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));
    }

    isEqualNode(node) {
      if (!super.isEqualNode(node)) {
        return false;
      }
      if (node.target !== this.target) {
        return false;
      }
      return true;
    }

  };

}).call(this);


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var XMLStringWriter, XMLWriterBase;

  XMLWriterBase = __webpack_require__(237);

  // Prints XML nodes as plain text
  module.exports = XMLStringWriter = class XMLStringWriter extends XMLWriterBase {
    // Initializes a new instance of `XMLStringWriter`

    // `options.pretty` pretty prints the result
    // `options.indent` indentation string
    // `options.newline` newline sequence
    // `options.offset` a fixed number of indentations to add to every line
    // `options.allowEmpty` do not self close empty element tags
    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF
    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements
    constructor(options) {
      super(options);
    }

    document(doc, options) {
      var child, i, len, r, ref;
      options = this.filterOptions(options);
      r = '';
      ref = doc.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        r += this.writeChildNode(child, options, 0);
      }
      // remove trailing newline
      if (options.pretty && r.slice(-options.newline.length) === options.newline) {
        r = r.slice(0, -options.newline.length);
      }
      return r;
    }

  };

}).call(this);


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31),
    root = __webpack_require__(23);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(49),
    isObject = __webpack_require__(32);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(23);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(23),
    stubFalse = __webpack_require__(710);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(40)(module)))

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(711),
    baseUnary = __webpack_require__(712),
    nodeUtil = __webpack_require__(713);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 110 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(255);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _mcsdk = __webpack_require__(86);
var _index = __webpack_require__(5);
var _ChangeLog = _interopRequireDefault(__webpack_require__(412));
var _Menu = _interopRequireDefault(__webpack_require__(420));
var _Leagues = _interopRequireDefault(__webpack_require__(492));
var _BattleRoyale = _interopRequireDefault(__webpack_require__(589));
var _TeamRush = _interopRequireDefault(__webpack_require__(605));
var _RewardLinks = _interopRequireDefault(__webpack_require__(609));
var _SkinEditor = _interopRequireDefault(__webpack_require__(613));
var _userEvents = _interopRequireDefault(__webpack_require__(85));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  name: 'home',
  data: function data() {
    return {
      store: _index.store,
      inFacebook: window.location.search.indexOf('fb') != -1,
      GameMode: _index.GameMode,
      GameState: _index.GameState,
      LoginState: _index.LoginState,
      PartyState: _index.PartyState,
      showChangeLog: false,
      partyToken: null,
      shop: false,
      fastEntry: false,
      userName: null,
      showFullSpectate: false,
      fullSpectateTimer: null,
      showSideBanners: false,
      showBottomBanners: false
    };
  },
  components: {
    changelog: _ChangeLog["default"],
    mainmenu: _Menu["default"],
    leaderboards: _Leagues["default"],
    battleroyale: _BattleRoyale["default"],
    teamrush: _TeamRush["default"],
    rewardlinks: _RewardLinks["default"],
    skineditor: _SkinEditor["default"]
  },
  mounted: function mounted() {
    var EnvConfig = window.EnvConfig;
    var agarApp = window.agarApp;
    window.hasBottomAd = this.hasBottomAd;
    this.windowResized();

    // Copy localized texts to store
    for (var key in agarApp.i18n.list) {
      if (agarApp.i18n.list[key]) {
        _index.store.commit('localizedTextUpdate', {
          key: key,
          value: agarApp.i18n.get(key)
        });
      }
    }

    // Haxe stuff
    var MC = new window.MiniclipAPI('openfl-content', 'openfl-overlay');
    MC.loadEnvironment(EnvConfig);
    window.lime.embed('agario', 'openfl-content', 880, 1024, {
      width: 880,
      height: 1024,
      rootPath: 'mc/',
      background: 'transparent',
      allowHighDPI: true
    });
    agarApp.API = MC;
    window.MC = MC;
    window.MC = window.MC || {};

    // Events
    window.document.addEventListener('login', this.onLoginComplete);
    window.document.addEventListener('country_update', this.onCountryUpdate);
    window.document.addEventListener('game_start', this.onGameStart);
    window.document.addEventListener('game_over', this.onGameOver);
    window.document.addEventListener('show_main_menu', this.onShowMainMenu);
    window.document.addEventListener('hide_main_menu', this.onHideMainMenu);
    window.document.addEventListener('location_outside_europe', this.onLocationUpdate);
    window.document.addEventListener('show_shop', this.onShowShop);
    window.document.addEventListener('hide_shop', this.onHideShop);
    window.document.addEventListener('arena_connect_update', this.onArenaConnectUpdate);
    window.document.addEventListener('full_spectate', this.onFullSpectate);
    window.document.addEventListener('equip_skin_update', this.onEquipSkin);
    window.document.addEventListener('update_settings', this.onUpdateSettings);
    window.addEventListener(_mcsdk.MCSDK.EVENT_LIBRA, this.onLibraInit);
    // User events
    window.document.addEventListener('update_user_info', this.onUpdateUserInfo);
    window.document.addEventListener('update_version_tag', this.onUpdateVersionTag);
    window.document.addEventListener('update_user_id_tag', this.onUpdateUserIdTag);
    window.document.addEventListener('update_coin', this.onUpdateCoin);
    window.document.addEventListener('update_dna', this.onUpdateDna);
    window.document.addEventListener('update_xp_boost_amount', this.onUpdateXpBoostAmount);
    window.document.addEventListener('update_xp_boost_timer', this.onUpdateXpBoostTimer);
    window.document.addEventListener('update_mass_boost_amount', this.onUpdateMassBoostAmount);
    window.document.addEventListener('update_mass_boost_timer', this.onUpdateMassBoostTimer);
    window.document.addEventListener('update_potion', this.onUpdatePotion);
    window.document.addEventListener('logout', this.onLogout);
    window.document.addEventListener('refresh_slots', this.onRefreshPotions);
    window.document.addEventListener('minimize_map_update', this.onMinimizeMapUpdate);
    window.addEventListener("resize", this.windowResized, false);
    this.initZendeskWidget();
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'loginComplete', 'gameState', 'gameMode', 'partyState', 'realm'])), {}, {
    hasTopAd: function hasTopAd() {
      return this.gameState == _index.GameState.GAMEOVER && this.gameMode == _index.GameMode.BATTLEROYALE && window.innerHeight > 600;
    },
    hasBottomAd: function hasBottomAd() {
      return this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER || this.gameState === _index.GameState.SPECTATE;
    },
    hasSideAds: function hasSideAds() {
      return this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER;
    },
    isHome: function isHome() {
      return this.loginComplete && (this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER);
    },
    inGame: function inGame() {
      return this.gameState === _index.GameState.PLAY || this.gameState === _index.GameState.SPECTATE;
    },
    canShowDefaultResultsBanner: function canShowDefaultResultsBanner() {
      return this.gameMode != _index.GameMode.BATTLEROYALE && this.gameState == _index.GameState.GAMEOVER || this.gameState == _index.GameState.HOME;
    },
    canShowBattleResultsBanner: function canShowBattleResultsBanner() {
      return this.gameMode == _index.GameMode.BATTLEROYALE && this.gameState == _index.GameState.GAMEOVER;
    }
  }),
  methods: {
    windowResized: function windowResized() {
      if (window.innerWidth > 1100 && window.innerHeight > 600) {
        this.showSideBanners = true;
        this.showBottomBanners = true;
      } else if (window.innerWidth > 850 && window.innerHeight > 800) {
        this.showSideBanners = true;
        this.showBottomBanners = true;
      } else if (window.innerWidth > 850 && window.innerHeight > 700) {
        this.showSideBanners = true;
        this.showBottomBanners = false;
      } else if (window.innerHeight > 500 && window.innerWidth > 650) {
        this.showSideBanners = false;
        this.showBottomBanners = true;
      } else {
        this.showSideBanners = false;
        this.showBottomBanners = false;
      }
    },
    showPrivacySettings: function showPrivacySettings() {
      aipAPItag.showCMPScreen();
    },
    onLoginComplete: function onLoginComplete() {
      var realm = agarApp.API.isLoggedWithFacebook() ? 'facebook' : agarApp.API.isLoggedWithGoogle() ? 'google' : 'guest';
      _index.store.commit('game/loginRealmUpdate', realm);
    },
    onCountryUpdate: function onCountryUpdate(evt) {
      _index.store.dispatch('game/countryUpdate', evt.detail);
    },
    onShowMainMenu: function onShowMainMenu() {
      this.fastEntry = true;
      _index.store.commit('gameUpdate', _index.GameState.HOME);
      window.core.setFadeout(true);
    },
    onHideMainMenu: function onHideMainMenu() {
      window.core.setFadeout(false);
    },
    onGameStart: function onGameStart(evt) {
      _index.store.commit('gameUpdate', _index.GameState.PLAY);
      document.dispatchEvent(new Event(_userEvents["default"].HIDE_PRIVACY_POLICY_BANNER));
    },
    onGameOver: function onGameOver(evt) {
      _index.store.state.user.deaths++;
      this.fastEntry = false;
      _index.store.commit('gameUpdate', _index.GameState.GAMEOVER);
      _index.store.commit('user/statsUpdate', evt.detail);

      // Check and show interstitial
      agarApp.API.checkInterstitial();

      // Send analytics
      agarApp.MCSDK.sendMatchEvent(this.gameMode.substr(1), Math.round(evt.detail.timeAlive / 1000));
      if (this.realm != 'guest') {
        return;
      }
      var deaths = _index.store.state.user.deaths;
      if (deaths == 5 || deaths == 15 || deaths == 25 || deaths > 25 && (deaths - 25) % 20 == 0) {
        setTimeout(function () {
          agarApp.API.showIncentive();
        }, 2000);
      }
    },
    copyToken: function copyToken(elem) {
      if (!navigator.clipboard) {
        var textArea = document.createElement('textarea');
        textArea.value = this.partyToken;
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
      } else {
        /* eslint-disable no-console */
        navigator.clipboard.writeText(this.partyToken).then(function () {
          console.log('Async: Copying to clipboard was successful!');
        }, function (err) {
          console.error('Async: Could not copy text: ', err);
        });
      }
      var input = document.querySelector(elem);
      if (input) {
        input.focus();
        input.select();
      }
    },
    onLocationUpdate: function onLocationUpdate() {
      _index.store.dispatch('settings/remove', 'targetedAds');
    },
    onShowShop: function onShowShop() {
      this.shop = true;
    },
    onHideShop: function onHideShop() {
      this.shop = false;
    },
    onArenaConnectUpdate: function onArenaConnectUpdate(evt) {
      _index.store.commit('game/connectUpdate', !evt.detail);
    },
    onFullSpectate: function onFullSpectate() {
      this.showFullSpectate = true;
      var self = this;
      this.fullSpectateTimer = setTimeout(function () {
        self.showFullSpectate = false;
      }, 5000);
    },
    closeFullSpectate: function closeFullSpectate() {
      this.showFullSpectate = false;
      clearTimeout(this.fullSpectateTimer);
    },
    initZendeskWidget: function initZendeskWidget() {
      window.zESettings = {
        webWidget: {
          color: {
            theme: '#00aa00'
          },
          offset: {
            vertical: '30px'
          }
        }
      };
      window.zE(function () {
        window.zE.hide();
      });
    },
    openCustomerSupport: function openCustomerSupport() {
      var _this = this;
      var email = null;
      if (_index.store.state.game.login == _index.LoginState.IN && window.userInfoEmail) {
        this.userName = _index.store.state.user.userId.split(': ')[1];
        email = window.userInfoEmail;
      } else if (this.userName) {
        this.userName = '';
        email = 'email@domain.com';
      }
      if (email) {
        window.zE(function () {
          window.zE.identify({
            name: _this.userName,
            email: email
          });
        });
      }
      window.zEmbed.activate({
        hideOnClose: true
      });
    },
    onEquipSkin: function onEquipSkin(e) {
      _index.store.commit('user/skinUpdate', e.detail);
    },
    onUpdateSettings: function onUpdateSettings(e) {
      _index.store.dispatch('settings/update', {
        key: e.detail.key,
        value: e.detail.value
      });
    },
    onLibraInit: function onLibraInit(evt) {
      // Check minimap test
      var test = agarApp.MCSDK.getTest('minimap');
      if (test && (test.group == 'A' || test.group == 'B')) {
        this.addSetting('showMinimap', 'menu_settings_minimap', true);
        if (test.group == 'B') {
          this.addSetting('playersMinimap', null, true);
        }
      }
    },
    addSetting: function addSetting(key, label, value) {
      _index.store.dispatch('settings/add', {
        key: key,
        label: label,
        value: value
      });
    },
    onUpdateUserIdTag: function onUpdateUserIdTag(evt) {
      _index.store.commit('user/versionUserIdUpdate', evt.detail);
    },
    onUpdateUserInfo: function onUpdateUserInfo(evt) {
      // Not a new user any more
      /*
      if (store.state.user.userInfo && store.state.user.userInfo.fute) {
          this.addSetting('minimizeMinimap', null, false);
          // FTUE is off
          evt.detail.fute = false;
      }
      // Minimized Minimap for new users
      if (evt.detail.isNewUser) {
          this.addSetting('minimizeMinimap', null, true);
          // FTUE is on
          evt.detail.fute = true;
      }
      */
      _index.store.commit('user/userInfoUpdate', evt.detail);
      agarApp.main.initAnalytics();
      if (evt.detail.id != '') {
        agarApp.MCSDK.setUserId(evt.detail.id);
      }
    },
    onUpdateVersionTag: function onUpdateVersionTag(evt) {
      _index.store.commit('game/versionTagUpdate', evt.detail);
    },
    onMinimizeMapUpdate: function onMinimizeMapUpdate(evt) {
      _index.store.dispatch('settings/update', {
        key: 'minimizeMinimap',
        value: evt.detail
      });
    },
    onUpdateCoin: function onUpdateCoin(evt) {
      _index.store.commit('user/coinUpdate', evt.detail);
    },
    onUpdateDna: function onUpdateDna(evt) {
      _index.store.commit('user/dnaUpdate', evt.detail);
    },
    onUpdateXpBoostAmount: function onUpdateXpBoostAmount(evt) {
      _index.store.commit('user/xpBoostAmountUpdate', evt.detail);
    },
    onUpdateXpBoostTimer: function onUpdateXpBoostTimer(evt) {
      _index.store.commit('user/xpBoostTimerUpdate', evt.detail);
    },
    onUpdateMassBoostAmount: function onUpdateMassBoostAmount(evt) {
      _index.store.commit('user/massBoostAmountUpdate', evt.detail);
    },
    onUpdateMassBoostTimer: function onUpdateMassBoostTimer(evt) {
      _index.store.commit('user/massBoostTimerUpdate', evt.detail);
    },
    onUpdatePotion: function onUpdatePotion(evt) {
      _index.store.commit('user/potionUpdate', evt.detail);
    },
    onRefreshPotions: function onRefreshPotions(evt) {
      _index.store.commit('user/potionRefresh');
    },
    onLogout: function onLogout(evt) {
      this.onRefreshPotions();
      if (_index.store.state.analytics.init) {
        this.agarApp.main.sendEndSession();
      }
    }
  },
  watch: {
    gameState: function gameState(value) {
      // Set fps limits according to game state
      if (value == _index.GameState.PLAY || value == _index.GameState.SPECTATE) {
        window.core.setFpsCap(0);
      } else {
        window.core.setFpsCap(25);
      }
    }
  }
};

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Collapse = _interopRequireDefault(__webpack_require__(415));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'ChangeLog',
  components: {
    Collapse: _Collapse["default"]
  }
};

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'Collapse',
  data: function data() {
    return {
      active: false
    };
  },
  props: {
    selected: {
      type: Boolean,
      required: false,
      "default": false
    }
  },
  created: function created() {
    this._isCollapseItem = true;
    this.active = this.selected;
  },
  ready: function ready() {
    if (this.active) {
      this.$emit('collapse-open', this.index);
    }
  },
  methods: {
    toggle: function toggle() {
      this.active = !this.active;
      if (this.active) {
        this.$emit('collapse-open', this.index);
      }
    }
  }
};

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _User = _interopRequireDefault(__webpack_require__(424));
var _Offers = _interopRequireDefault(__webpack_require__(443));
var _Features = _interopRequireDefault(__webpack_require__(452));
var _Play = _interopRequireDefault(__webpack_require__(466));
var _Ads = _interopRequireDefault(__webpack_require__(474));
var _Modes = _interopRequireDefault(__webpack_require__(479));
var _Party = _interopRequireDefault(__webpack_require__(483));
var _Promo = _interopRequireDefault(__webpack_require__(487));
var _storage = _interopRequireDefault(__webpack_require__(53));
var _storageKeys = _interopRequireDefault(__webpack_require__(33));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  name: 'mainui',
  props: ['fastEntry'],
  data: function data() {
    return {
      inFacebook: window.location.search.indexOf('fb') != -1,
      GameState: _index.GameState
    };
  },
  components: {
    'user': _User["default"],
    'offers': _Offers["default"],
    'features': _Features["default"],
    'play': _Play["default"],
    'ads': _Ads["default"],
    'modes': _Modes["default"],
    'party': _Party["default"],
    'promo': _Promo["default"]
  },
  mounted: function mounted() {
    window.document.addEventListener('core_init_complete', this.onHaxeInitComplete);
    window.document.addEventListener('login_state_update', this.onLoginStateUpdate);
    window.document.addEventListener('game_mode_update', this.onGameModeUpdate);
    window.document.addEventListener('event_region_change', this.onRegionChange);
    window.document.addEventListener('event_regions_update', this.onRegionsUpdate);
    window.document.addEventListener('settings_update', this.onSettingsUpdate);
    window.document.addEventListener('play', this.play);
  },
  methods: {
    onHaxeInitComplete: function onHaxeInitComplete() {
      this.processSettings();
    },
    onLoginStateUpdate: function onLoginStateUpdate(evt) {
      _index.store.commit('game/loginUpdate', evt.detail);
      if (_index.store.gameState == _index.GameState.WAIT && _index.store.state.analytics.init) {
        agarApp.main.sendEndSession();
      }
      this.processSettings();
    },
    onGameModeUpdate: function onGameModeUpdate(evt) {
      _index.store.commit('game/modeUpdate', evt.detail);
    },
    onRegionChange: function onRegionChange(evt) {
      _index.store.commit('game/regionUpdate', evt.detail);
    },
    onRegionsUpdate: function onRegionsUpdate(evt) {
      _index.store.commit('game/regionsUpdate', evt.detail);
    },
    onSettingsUpdate: function onSettingsUpdate(evt) {
      _index.store.dispatch('settings/update', {
        key: evt.detail.key,
        value: evt.detail.value
      });
    },
    onSettingsUpdate_Play: function onSettingsUpdate_Play(option) {
      _index.store.dispatch('settings/update', {
        key: option.key,
        value: option.value
      });
      this.processSetting(option.key, option.value);
    },
    processSettings: function processSettings() {
      for (var key in this.settings) {
        if (Object.prototype.hasOwnProperty.call(this.settings, key)) {
          this.processSetting(key, this.settings[key]);
        }
      }
    },
    processSetting: function processSetting(key, value) {
      if (key == 'blackTheme') {
        window.core.setDarkTheme(value);
      }
      if (key == 'quality') {
        agarApp.API.setQuality(value);
      } else {
        agarApp.API.updateSettings(key, value);
      }
    },
    play: function play() {
      agarApp.API.playGame(this.gameMode);
      if (this.gameMode === ':teamrush') {
        _storage["default"].updateKey(_storageKeys["default"].HAS_PLAYED_TEAMS, true);
      }
      if (!_index.store.state.analytics.init && !_index.store.state.game.login != _index.LoginState.WAIT) {
        agarApp.main.initGuestAnalytics();
      }
    },
    onContinue: function onContinue() {
      agarApp.API.onPlayerMenu();
      _index.store.commit('gameUpdate', _index.GameState.HOME);

      // reset party panel if in "show code after gameover" state
      _index.store.commit('party/partyUpdate', 'init');
      window.document.dispatchEvent(new Event('focus_on_nick'));
    },
    spectate: function spectate() {
      _index.store.commit('gameUpdate', _index.GameState.SPECTATE);
      agarApp.API.spectate();
      window.core.setFadeout(false);
    }
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['loginComplete', 'gameState', 'gameMode'])), {}, {
    settings: function settings() {
      return _index.store.state.settings.options;
    },
    loginState: function loginState() {
      return _index.store.state.game.login;
    },
    isHome: function isHome() {
      return this.loginComplete && this.gameState == _index.GameState.HOME;
    },
    isGameOver: function isGameOver() {
      return this.gameState == _index.GameState.GAMEOVER;
    },
    showMenu: function showMenu() {
      return this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER;
    },
    canShowPartyWidget: function canShowPartyWidget() {
      return this.gameMode != _index.GameMode.BATTLEROYALE && this.gameMode != _index.GameMode.TEAMRUSH;
    },
    hasPlayedTeams: function hasPlayedTeams() {
      return window.localStorage.getItem(_storageKeys["default"].HAS_PLAYED_TEAMS);
    }
  }),
  watch: {
    settings: function settings(options) {
      for (var key in options) {
        if (key == 'quality') {
          agarApp.API.setQuality(options[key]);
        } else {
          agarApp.API.updateSettings(key, options[key]);
        }
      }
    }
  }
};

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
var _BoostButton = _interopRequireDefault(__webpack_require__(427));
var _CurrencyCounter = _interopRequireDefault(__webpack_require__(434));
var _XpBar = _interopRequireDefault(__webpack_require__(438));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: [],
  data: function data() {
    return {};
  },
  components: {
    boost: _BoostButton["default"],
    currency: _CurrencyCounter["default"],
    xp: _XpBar["default"]
  },
  mounted: function mounted() {},
  computed: {
    avatarUrl: function avatarUrl() {
      return _index.store.state.user.userInfo ? _index.store.state.user.userInfo.avatarUrl : 'img/profilepic_guest.png';
    },
    userName: function userName() {
      if (_index.store.state.user.userInfo) {
        return _index.store.state.user.userInfo.name;
      } else {
        return '';
      }
    },
    coins: function coins() {
      return _index.store.state.user.coin;
    },
    dna: function dna() {
      return _index.store.state.user.dna;
    }
  },
  methods: {
    onProfilePictureClick: function onProfilePictureClick() {
      window.agarApp.API.showProfile();
      window.agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Profile');
      window.agarApp.API.playSound('sfxClick');
    }
  }
};

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
var _CounterCircle = _interopRequireDefault(__webpack_require__(87));
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['type'],
  data: function data() {
    return {
      timer: null
    };
  },
  components: {
    counter: _CounterCircle["default"]
  },
  mounted: function mounted() {
    var self = this;
    this.timer = setInterval(function () {
      var currentTime = self.getTime();
      if (currentTime > 0) {
        self.setTime(currentTime - 1);
      }
    }, 1000);
    window.document.addEventListener('update_user_info', this.clearTimer);
  },
  computed: {
    getId: function getId() {
      return this.type + 'Button';
    },
    getImage: function getImage() {
      if (this.type === 'xp') {
        return 'xpboost-3x-shop';
      } else if (this.type === 'mass') {
        return 'massboost-3x-shop';
      }
    },
    getTimer: function getTimer() {
      if (this.getTime() >= 3600) {
        return Math.floor(this.getTime() / 3600) + 'h' + Math.floor(this.getTime() % 3600 / 60) + 'm';
      } else {
        return Math.floor(this.getTime() / 60) + 'm' + Math.floor(this.getTime() % 60) + 's';
      }
    },
    getAmount: function getAmount() {
      if (this.type === 'xp') {
        return _index.store.state.user.xpBoosts.amount;
      } else if (this.type === 'mass') {
        return _index.store.state.user.massBoosts.amount;
      }
    }
  },
  methods: {
    onClick: function onClick() {
      var shop = this.type == 'xp' ? 'shopBoost' : 'shopMass';
      var event = this.type == 'xp' ? 'XpBoost' : 'MassBoost';
      agarApp.API.openShop(shop);
      agarApp.API.playSound('sfxClick');
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', event);
    },
    getTime: function getTime() {
      if (this.type === 'xp') {
        return _index.store.state.user.xpBoosts.timer;
      } else if (this.type === 'mass') {
        return _index.store.state.user.massBoosts.timer;
      }
    },
    setTime: function setTime(v) {
      if (this.type === 'xp') {
        _index.store.commit('user/xpBoostTimerUpdate', v);
      } else if (this.type === 'mass') {
        _index.store.commit('user/massBoostTimerUpdate', v);
      }
    },
    clearTimer: function clearTimer() {
      window.document.removeEventListener('update_user_info', this.clearTimer);
      this.setTime(0);
      clearInterval(this.timer);
    }
  },
  destroyed: function destroyed() {
    this.clearTimer();
  }
};

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
var _default = exports["default"] = {
  props: ['amount', 'time'],
  data: function data() {
    return {};
  },
  components: {},
  mounted: function mounted() {},
  computed: {
    getAmount: function getAmount() {
      return this.amount > 0 ? this.amount > 99 ? '99+' : this.amount : '+';
    },
    getNotificationColor: function getNotificationColor() {
      return this.time > 0 ? 'grey' : this.amount > 0 ? 'red' : 'green';
    }
  },
  methods: {}
};

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: ['type', 'amount'],
  data: function data() {
    return {};
  },
  components: {},
  mounted: function mounted() {},
  computed: {
    getId: function getId() {
      return this.type + 'Wallet';
    },
    getIcon: function getIcon() {
      if (this.type === 'coin') {
        return 'currency-icon';
      } else if (this.type === 'dna') {
        return 'dna-small-icon';
      }
    },
    getAmount: function getAmount() {
      return this.amount >= 1000000 ? Math.floor(this.amount / 1000000) + ' M' : this.amount;
    }
  },
  methods: {
    onClick: function onClick() {
      var shop = this.type == 'dna' ? 'shopDNA' : 'shopCurrency';
      var event = this.type == 'dna' ? 'DNA' : 'Coins';
      var agarApp = window.agarApp;
      agarApp.API.openShop(shop);
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', event);
      agarApp.API.playSound('sfxClick');
    }
  }
};

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: [],
  data: function data() {
    return {};
  },
  components: {},
  mounted: function mounted() {},
  computed: {
    currentXp: function currentXp() {
      return _index.store.state.user.userInfo ? _index.store.state.user.userInfo.currentXp : 0;
    },
    totalXp: function totalXp() {
      return _index.store.state.user.userInfo ? _index.store.state.user.userInfo.totalXp : 50;
    },
    level: function level() {
      return _index.store.state.user.userInfo ? _index.store.state.user.userInfo.level : 1;
    },
    getLevelStar: function getLevelStar() {
      var level = this.level;
      if (level >= 90) return 'leaguestar-kraken';else if (level < 90 && level >= 80) return 'leaguestar-mammoth';else if (level < 80 && level >= 70) return 'leaguestar-crocodile';else if (level < 70 && level >= 60) return 'leaguestar-panther';else if (level < 60 && level >= 50) return 'leaguestar-bear';else if (level < 50 && level >= 40) return 'leaguestar-hunter';else if (level < 40 && level >= 30) return 'leaguestar-fox';else if (level < 30 && level >= 20) return 'leaguestar-bat';else if (level < 20 && level >= 10) return 'leaguestar-wasp';else return 'leaguestar-fly';
    }
  },
  methods: {}
};

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _PromoButton = _interopRequireDefault(__webpack_require__(446));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: [],
  data: function data() {
    return {
      promoId: 0,
      promoConfig: null,
      promoDelegate: null,
      promoSystem: null,
      promoCallback: null,
      canShowCoinShop: false,
      freeCoinsTimeLeft: 0
    };
  },
  components: {
    badge: _PromoButton["default"]
  },
  mounted: function mounted() {
    var _this = this;
    document.addEventListener('promo_badge_create', this.onCreateBadge);
    document.addEventListener('free_coins_timer', this.onfreeCoinsTimer);
    setTimeout(function () {
      _this.canShowCoinShop = true;
    }, 15000);
    setInterval(function () {
      if (_this.freeCoinsTimeLeft > 0) {
        _this.freeCoinsTimeLeft -= 1000;
      }
    }, 1000);
  },
  computed: _objectSpread({}, (0, _vuex.mapGetters)(['i18n'])),
  methods: {
    onFreeCoinsClick: function onFreeCoinsClick(e) {
      window.agarApp.API.getFreeCoins();
      window.agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'FreeCoins');
      window.agarApp.API.playSound('sfxClick');
    },
    onPromoClick: function onPromoClick() {
      this.promoCallback();
      window.agarApp.API.playSound('sfxClick');
    },
    onCoinShopClick: function onCoinShopClick() {
      window.agarApp.API.openShop('shopCurrency');
      window.agarApp.API.playSound('sfxClick');
    },
    onCreateBadge: function onCreateBadge(e) {
      var _this2 = this;
      // check if its a different promo!
      if (this.promoId == e.detail.offerId) {
        return;
      }
      this.canShowCoinShop = true;
      var promoConfig = e.detail.config;
      this.promoId = e.detail.offerId;
      this.promoConfig = null; // triggers fade-out
      this.promoDelegate = e.detail.delegate;
      this.promoSystem = e.detail.system;
      this.promoCallback = e.detail.callback;
      setTimeout(function () {
        _this2.promoConfig = promoConfig; // triggers fade-in
      }, 500);
    },
    onfreeCoinsTimer: function onfreeCoinsTimer(e) {
      this.freeCoinsTimeLeft = e.detail;
    },
    getFreeCoinsWaitingLabel: function getFreeCoinsWaitingLabel(e) {
      return agarApp.i18n.get('menu_free_coins_collect_later') + '</br>' + this.getFreeCoinsTimer();
    },
    getFreeCoinsTimer: function getFreeCoinsTimer() {
      var time = Math.floor(this.freeCoinsTimeLeft / 1000);
      var sec = '' + time % 60;
      var min = '' + Math.floor(time / 60);
      if (sec.length < 2) sec = '0' + sec;
      return min + 'm ' + sec + 's';
    }
  }
};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ImageNode = _interopRequireDefault(__webpack_require__(449));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var BASE_PACK_RATIO = 1.6;
var IPAD_CONVERSION_RATIO = 0.3662109375 / 0.5;
var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['id', 'config', 'delegate', 'system'],
  data: function data() {
    return {
      frameWidth: null,
      frameHeight: null,
      timerText: '99h 99m 99s',
      timerStyle: {
        transform: 'scale(1)',
        whiteSpace: 'normal'
      },
      timerInterval: null
    };
  },
  components: {},
  mounted: function mounted() {},
  computed: {
    action: function action() {
      return this.config.buttonAction;
    },
    name: function name() {
      return 'button_' + this.id + (this.action && this.action != 'null' ? '_' + this.action : +'');
    },
    frameStyle: function frameStyle() {
      return this.getFrameStyle(this.config.buttonBackgroundImage);
    },
    bgStyle: function bgStyle() {
      return this.getBgStyle(this.config.buttonBackgroundImage);
    }
  },
  methods: {
    getFrameStyle: function getFrameStyle(imageEntry) {
      var img = new _ImageNode["default"](imageEntry);

      // preload image
      this.preload(img.file);
      this.frameWidth = img.width;
      this.frameHeight = img.height;
      var scale = 45 / img.height;
      return {
        position: 'absolute',
        top: '0px',
        right: '0px',
        width: img.width + 'px',
        height: img.height + 'px',
        transform: 'scale(' + scale + ')',
        transformOrigin: '100% 0%'
      };
    },
    getBgStyle: function getBgStyle(imageEntry) {
      var img = new _ImageNode["default"](imageEntry);

      // preload image
      this.preload(img.file);

      // console.log('test: cache image', img.file);
      return {
        position: 'absolute',
        left: (this.scaleF(imageEntry.offsetX, imageEntry.useBasePack) || 0) + 'px',
        top: -(this.scaleF(imageEntry.offsetY, imageEntry.useBasePack) || 0) + 'px',
        width: img.width + 'px',
        height: img.height + 'px',
        backgroundImage: 'url(' + img.file + ')',
        backgroundPosition: -img.x + 'px ' + -img.y + 'px'
      };
    },
    getImageStyle: function getImageStyle(imageEntry) {
      return {
        position: 'absolute',
        left: '50%',
        top: '50%',
        marginLeft: (this.scaleF(imageEntry.offsetX, imageEntry.useBasePack) || 0) + 'px',
        marginTop: -(this.scaleF(imageEntry.offsetY, imageEntry.useBasePack) || 0) + 'px',
        width: '100%',
        height: '100%'
      };
    },
    getIconStyle: function getIconStyle(imageEntry) {
      var img = new _ImageNode["default"](imageEntry);
      var style = {
        position: 'relative',
        left: -img.width * imageEntry.anchorX + 'px',
        top: -img.height * imageEntry.anchorY + 'px',
        width: img.width + 'px',
        height: img.height + 'px'
      };
      this.preload(img.file);
      // console.log('test: stretch image', img, imageEntry);

      if (imageEntry.type == 'Sprite') {
        style.backgroundImage = 'url(' + img.file + ')';
        style.backgroundPosition = -img.x + 'px ' + -img.y + 'px';
      } else if (imageEntry.type == 'HorizontalStretchFrame') {
        style.borderImageSource = 'url(' + img.file + ')';
        style.borderImageSlice = img.height / 2 + ' ' + imageEntry.rightX + ' ' + img.height / 2 + ' ' + imageEntry.leftX;
        style.borderImageWidth = img.width / 2;
        style.borderImageRepeat = 'stretch';
      }
      return style;
    },
    getLabelStyle: function getLabelStyle(labelEntry) {
      // console.log('test: label', labelEntry);

      var css = {
        position: 'absolute',
        left: '50%',
        top: '50%',
        marginLeft: (this.scaleF(labelEntry.offsetX, labelEntry.useBasePack) || 0) + 'px',
        marginTop: -(this.scaleF(labelEntry.offsetY, labelEntry.useBasePack) || 0) + 'px',
        width: '100%',
        height: '100%',
        fontFamily: this.delegate.getLocalizedResourceForResource(labelEntry.ttfFontName, this.system),
        fontSize: labelEntry.ttfFontSize + 'px',
        color: this.getRBGColor(labelEntry.colorData)
      };
      if (labelEntry.horizontalStrikeThrough) {
        css['text-decoration'] = 'line-through';
        css['text-decoration-color'] = 'red';
      }

      // set scale?

      // zOrder
      if (labelEntry.zOrder && labelEntry.zOrder > -1) {
        css.zIndex = labelEntry.zOrder;
      }
      return css;
    },
    getRBGColor: function getRBGColor(colorData) {
      return colorData ? 'rgba(' + colorData.r + ',' + colorData.g + ',' + colorData.b + ',' + colorData.a + ')' : '#fff';
    },
    getTextStyle: function getTextStyle(index, labelEntry) {
      var maxWidth = this.scaleF(labelEntry.maxWidth, labelEntry.useBasePack);
      var maxHeight = this.scaleF(labelEntry.maxHeight, labelEntry.useBasePack);
      var css = {
        position: 'relative',
        left: -maxWidth * labelEntry.anchorX + 'px',
        top: -maxHeight * labelEntry.anchorY + 'px',
        width: maxWidth + 'px',
        height: maxHeight + 'px',
        lineHeight: 1
      };
      if (labelEntry.ttfFontOutline && labelEntry.ttfFontOutlineColor) {
        css['text-shadow'] = this.getTextShadowStyle(this.scaleF(labelEntry.ttfFontOutlineSize, labelEntry.useBasePack), this.getRBGColor(labelEntry.ttfFontOutlineColor));
      }
      this.checkTextSize('label_' + index, labelEntry);
      return css;
    },
    getTimerStyle: function getTimerStyle(timerEntry) {
      // console.log('test: timer', timerEntry);

      var tag = timerEntry.tag;
      if (tag) {
        this.timer = this.delegate.getLocalizedTextForTag(tag, this.system);
      }
      var maxWidth = this.scaleF(timerEntry.maxWidth, timerEntry.useBasePack);
      var maxHeight = this.scaleF(timerEntry.maxHeight, timerEntry.useBasePack);
      var css = {
        position: 'relative',
        left: -maxWidth * timerEntry.anchorX + 'px',
        top: -maxHeight * timerEntry.anchorY + 'px',
        width: maxWidth + 'px',
        height: maxHeight + 'px'
      };
      if (timerEntry.ttfFontOutline && timerEntry.ttfFontOutlineColor) {
        css['text-shadow'] = this.getTextShadowStyle(this.scaleF(timerEntry.ttfFontOutlineSize, timerEntry.useBasePack), this.getRBGColor(timerEntry.ttfFontOutlineColor));
      }
      this.updateTimer(timerEntry);
      return css;
    },
    getLabelText: function getLabelText(labelEntry) {
      return agarApp.API.getPromoTextFromConfig(labelEntry, this.delegate, this.system);
    },
    updateTimer: function updateTimer(timerEntry) {
      var _this = this;
      if (this.timerInterval) {
        return;
      }
      this.setTimer(timerEntry);
      this.timerInterval = setInterval(function () {
        _this.setTimer(timerEntry);
      }, 1000);
    },
    setTimer: function setTimer(timerEntry) {
      var timestamp = this.system.getRemainingBadgeTimeForOffer(this.id);
      this.timerText = this.delegate.getFormatedStringForTimeStamp(timestamp, this.system);
      this.checkTextSize('timer', timerEntry);
    },
    checkTextSize: function checkTextSize(name, config) {
      /* eslint-disable no-invalid-this */
      this.$nextTick(function () {
        var elem = this.$refs[name];
        if (elem && elem.length) {
          elem = elem[0];
        }
        this.checkTextSizeHeight(elem, config);
      });
      /* eslint-disable no-invalid-this */
    },
    checkTextSizeHeight: function checkTextSizeHeight(elem, config) {
      // check if its too high
      var maxHeight = this.scaleF(config.maxHeight, config.useBasePack);
      if (elem && elem.scrollHeight > maxHeight) {
        // lets try single line
        elem.style.whiteSpace = 'nowrap';
        this.$nextTick(function () {
          /* eslint-disable-next-line no-invalid-this */
          this.checkTextSizeWidth(elem, config);
        });
      } else {
        this.checkTextSizeWidth(elem, config);
      }
    },
    checkTextSizeWidth: function checkTextSizeWidth(elem, config) {
      // check if its too wide
      var maxWidth = this.scaleF(config.maxWidth, config.useBasePack);
      var maxHeight = this.scaleF(config.maxHeight, config.useBasePack);
      if (elem && (elem.scrollWidth > maxWidth || elem.scrollHeight > maxHeight)) {
        this.applyScale(elem, maxWidth, maxHeight);
        if (elem.innerHTML.length > 15 && elem != this.$refs['timer']) {
          elem.style.display = 'flex';
          elem.style.whiteSpace = 'normal';
          this.applyScale(elem, maxWidth, maxHeight);
        }
      }
    },
    applyScale: function applyScale(elem, maxWidth, maxHeight) {
      // calculate scale factor with a 10% margin
      var scale = Math.min(maxWidth / (elem.scrollWidth * 1.1), maxHeight / elem.scrollHeight);
      elem.style.transformOrigin = '10% 25%';
      elem.style.transform = 'scale(' + scale + ')';
    },
    scaleF: function scaleF(value, basePack) {
      return value * (basePack ? BASE_PACK_RATIO : IPAD_CONVERSION_RATIO);
    },
    preload: function preload(src) {
      // preload image
      if (src) {
        var cache = new Image();
        cache.src = src;
      }
    },
    getTextShadowStyle: function getTextShadowStyle(size, color) {
      return -size + 'px ' + -size + 'px 0 ' + color + ', ' + -size + 'px ' + size + 'px 0 ' + color + ', ' + size + 'px ' + -size + 'px 0 ' + color + ', ' + size + 'px ' + size + 'px 0 ' + color;
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.timerInterval) {
      clearInterval(this.timerInterval);
    }
  }
};

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vue = _interopRequireDefault(__webpack_require__(37));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _PotionSlot = _interopRequireDefault(__webpack_require__(180));
var _AlertCircle = _interopRequireDefault(__webpack_require__(461));
var _CounterCircle = _interopRequireDefault(__webpack_require__(87));
var _utils = _interopRequireDefault(__webpack_require__(26));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: [],
  data: function data() {
    return {
      stampAnimations: [false, false, false],
      store: _index.store,
      GameState: _index.GameState,
      slot: null,
      showQuestNotification: false,
      questTime: null,
      giftCount: null
    };
  },
  components: {
    'potion': _PotionSlot["default"],
    'alert': _AlertCircle["default"],
    'counter': _CounterCircle["default"]
  },
  mounted: function mounted() {
    window.document.addEventListener('won_potion', this.onWonPotion);
    window.document.addEventListener('mystery_skin_update', this.onMysterySkinUpdate);
    window.document.addEventListener('quest_alert_update', this.onQuestUpdate);
    window.document.addEventListener('gift_counter_update', this.onGiftsUpdate);
    window.document.addEventListener('update_user_wallet', this.onUpdateUserWallet);
    var self = this;
    this.questTimer = setInterval(function () {
      var currentTime = self.questTime;
      if (currentTime > 0) {
        self.questTime = currentTime - 1;
      }
    }, 1000);
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'gameState'])), {}, {
    customSkinTokensTotalCount: function customSkinTokensTotalCount() {
      var isVIP = window.agarApp.API && window.agarApp.API.getUserInfo().hasVIPSubscription;
      var vipTokens = isVIP ? _index.store.state.user.customSkinVipTokensCount : 0;
      return _index.store.state.user.customSkinTokensCount + vipTokens;
    },
    mysterySkinNotificationCount: function mysterySkinNotificationCount() {
      return _index.store.state.user.mysterySkinNotificationCount;
    },
    customSkinTokensCount: function customSkinTokensCount() {
      return _index.store.state.user.customSkinTokensCount;
    },
    getLeftPotion: function getLeftPotion() {
      return _index.store.state.user.potions[0];
    },
    getMiddlePotion: function getMiddlePotion() {
      return _index.store.state.user.potions[1];
    },
    getRightPotion: function getRightPotion() {
      return _index.store.state.user.potions[2];
    },
    inGoogleRealm: function inGoogleRealm() {
      return _index.store.state.game.loginRealm == 'google';
    },
    getQuestsLabel: function getQuestsLabel() {
      if (this.questTime > 0) {
        return this.getTimer(this.questTime);
      } else {
        return window.agarApp.i18n.get('page_menu_main_dailyquests');
      }
    }
  }),
  methods: {
    onShopClick: function onShopClick() {
      agarApp.API.openShop();
      agarApp.API.playSound('sfxClick');
    },
    onLeaderboardsClick: function onLeaderboardsClick() {
      agarApp.API.showLeaderboards();
      agarApp.API.playSound('sfxClick');
    },
    onQuestsClick: function onQuestsClick() {
      agarApp.API.showQuests();
      agarApp.API.playSound('sfxClick');
    },
    onGiftingClick: function onGiftingClick() {
      agarApp.API.showGifting();
      agarApp.API.playSound('sfxClick');
    },
    onHelpClick: function onHelpClick() {
      agarApp.API.showPotions('help');
      agarApp.API.playSound('sfxClick');
    },
    onUpdateUserWallet: function onUpdateUserWallet(e) {
      var skinTokens = e.detail.find(function (item) {
        return item.productId == 'create_skin_token';
      }) || 0;
      var vipSubscription = window.agarApp.API.getUserInfo().hasVIPSubscription;
      var vipSkinToken = e.detail.find(function (item) {
        return item.productId == 'create_skin_token_for_vip_weekly';
      });
      _index.store.commit('user/customSkinTokensCountUpdate', skinTokens._balance);
      _index.store.commit('user/customSkinVipTokensCountUpdate', vipSkinToken && vipSubscription ? vipSkinToken._balance : 0);
    },
    onWonPotion: function onWonPotion(e) {
      var _this = this;
      this.slot = e.detail.potion.slot - 1;

      // Check if in the right state
      if (this.gameState != _index.GameState.HOME) {
        return;
      }
      if (e.detail.wait) {
        // Check if we have to wait for dialogs to close
        window.document.addEventListener('dialog_closed', function (e2) {
          if (e2.detail == 0) {
            _this.addAnimationForSlot(_this.slot);
          }
        });
      } else {
        this.addAnimationForSlot(this.slot);
      }
    },
    onMysterySkinUpdate: function onMysterySkinUpdate(e) {
      _index.store.commit('user/mysterySkinNotificationCountUpdate', e.detail || 0);
    },
    onQuestUpdate: function onQuestUpdate(e) {
      this.showQuestNotification = e.detail.show;
      if (e.detail.animate) {
        _utils["default"].addClass('.feature-button.quests .circle', 'animated pulse');
      } else {
        _utils["default"].removeClass('.feature-button.quests .circle', 'animated pulse');
      }
      this.questTime = e.detail.time;
    },
    onGiftsUpdate: function onGiftsUpdate(e) {
      this.giftCount = e.detail;
    },
    addAnimationForSlot: function addAnimationForSlot(slot) {
      _vue["default"].set(this.stampAnimations, slot, true);
      var element = document.getElementsByClassName('potion-slot-wraper')[slot];
      setTimeout(this.addParticles, 750, element, 25);
      this.slot = null;
    },
    addParticles: function addParticles(element, particleCount) {
      for (var i = 0; i < particleCount; i++) {
        setTimeout(this.addParticle, this.rnd(0, 500), element);
      }
      for (var _i = 0; _i < this.stampAnimations.length; _i++) {
        _vue["default"].set(this.stampAnimations, _i, false);
      }
    },
    addParticle: function addParticle(element) {
      var size = this.rnd(10, 15);
      var offsetX = 40;
      var offsetY = -100;
      var span = document.createElement('span');
      span.className = 'particle';
      span.style.width = size + 'px';
      span.style.height = size + 'px';
      element.appendChild(span);
      var pos = 40;
      var angle = this.rnd(0, 360);
      this.buildAnim('star' + angle, [[offsetX, offsetY, 0, 1.0, 1.0], [Math.cos(angle) * pos * 1.5 + offsetX, Math.sin(angle) * pos * 1.5 + offsetY, 0, 1.0, 1.0]]);
      span.style.animation = 'star' + angle;
      span.style.animationDuration = '0.5s';
      span.style.animationTimingFunction = 'linear';
      span.style.animationFillMode = 'none';
      span.addEventListener('webkitAnimationEnd', function () {
        span.outerHTML = '';
      });
      span.addEventListener('animationend', function () {
        span.outerHTML = '';
      });
    },
    rnd: function rnd(m, n) {
      m = parseInt(m);
      n = parseInt(n);
      return Math.floor(Math.random() * (n - m + 1)) + m;
    },
    buildAnim: function buildAnim(name, params) {
      var frames = '';
      var len = params.length;
      for (var i = 0; i < len; i++) {
        var kf = params[i];
        var dt = i / (len - 1) * 100;
        frames += dt + '% { -webkit-transform: translate3d(' + kf[0] + 'px,' + kf[1] + 'px, 0) rotate(' + kf[2] + 'deg) scale(' + kf[3] + ',' + kf[4] + '); } ';
      }
      var idx = document.styleSheets[1].cssRules.length;
      document.styleSheets[1].insertRule('@-webkit-keyframes ' + name + ' { ' + frames + '}', idx);
    },
    getTimer: function getTimer(time) {
      if (time >= 3600) {
        return Math.floor(time / 3600) + 'h' + Math.floor(time % 3600 / 60) + 'm';
      } else {
        return Math.floor(time / 60) + 'm' + Math.floor(time % 60) + 's';
      }
    }
  },
  watch: {
    gameState: function gameState(value) {
      if (value == _index.GameState.HOME && this.slot != null) {
        this.addAnimationForSlot(this.slot);
      }
    }
  },
  destroyed: function destroyed() {
    window.document.removeEventListener('won_potion', this.onWonPotion);
  }
};

/***/ }),
/* 180 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_55506716_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PotionSlot_vue__ = __webpack_require__(460);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(455)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-55506716"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PotionSlot_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_55506716_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PotionSlot_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_55506716_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PotionSlot_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/PotionSlot.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-55506716", Component.options)
  } else {
    hotAPI.reload("data-v-55506716", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _SpineAnimation = _interopRequireDefault(__webpack_require__(88));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'potion',
  props: ['potion', 'fullslots', 'mini', 'loading'],
  data: function data() {
    return {
      ready: false
    };
  },
  components: {
    'animation': _SpineAnimation["default"]
  },
  mounted: function mounted() {
    var self = this;
    window.document.addEventListener('potions_ready', function () {
      self.ready = true;
    }, false);
    window.document.addEventListener('update_potion', this.onUpdatePotion);
    this.potionTimer = setInterval(function () {
      if (self.potion == null || self.state !== 'BREWING') {
        return;
      }
      var currentTime = self.potion.totalTime;
      if (currentTime > 0) {
        self.potion.totalTime = currentTime - 1;
        self.potion.skipPrice = agarApp.API.getPriceForPotionSkip(self.potion.totalTime, self.potion.id, self.potion.slot);
      }
    }, 1000);
  },
  computed: {
    isSkippable: function isSkippable() {
      return this.state === 'UNAVAILABLE' || this.state === 'BREWING' || this.state == 'BATTLE_FULL';
    },
    getColorClass: function getColorClass() {
      if (this.state === 'EMPTY') {
        return 'none';
      } else if (this.state === 'READY') {
        return 'orange';
      } else if (this.state === 'UNAVAILABLE' || this.state == 'BATTLE_FULL') {
        return 'grey';
      } else {
        return 'blue';
      }
    },
    getButtonColorClass: function getButtonColorClass() {
      if (this.state === 'AVAILABLE') {
        return 'blue';
      } else {
        return 'green';
      }
    },
    getTextClass: function getTextClass() {
      if (this.state === 'AVAILABLE' || this.state === 'EMPTY' || this.state === 'READY') {
        return 'bigger';
      } else {
        return null;
      }
    },
    getShapeText: function getShapeText() {
      if (this.state === 'AVAILABLE') {
        return agarApp.i18n.get('potion_slot_brew');
      } else if (this.state === 'BREWING') {
        return this.getTimer();
      } else if (this.state === 'UNAVAILABLE') {
        return agarApp.i18n.get('potion_locked');
      } else if (this.state === 'READY') {
        return agarApp.i18n.get('potion_slot_ready');
      } else if (this.state === 'BATTLE_FULL') {
        return agarApp.i18n.get('menu_potions_full_title');
      }
      return '';
    },
    getButtonText: function getButtonText() {
      if (this.state === 'EMPTY') {
        return agarApp.i18n.get('page_potion_slot_get_potions');
      } else if (this.state === 'AVAILABLE') {
        return agarApp.i18n.get('potion_slot_start');
      } else if (this.state === 'READY') {
        return agarApp.i18n.get('potion_slot_open');
      } else {
        return agarApp.i18n.get('potion_slot_open_now');
      }
    },
    state: function state() {
      if (this.potion && this.potion.state) {
        return this.potion.state[0];
      } else {
        return 'EMPTY';
      }
    },
    hours: function hours() {
      return Math.round(this.potion.totalTime / 60 / 60);
    },
    upperText: function upperText() {
      return agarApp.i18n.get('skip_only_potion_slot_inner_title');
    },
    getAnimation: function getAnimation() {
      if (this.state === 'BREWING') {
        return '7_Brew';
      } else if (this.state === 'READY') {
        return '8_AfterBrew_CallAttention';
      } else {
        return '1_Idle';
      }
    }
  },
  methods: {
    getTimer: function getTimer() {
      var d = new Date(null);
      d.setSeconds(this.potion.totalTime);
      var time = d.toISOString().substr(11, 5);
      time = time.replace(':', 'h') + 'm';
      return time;
    },
    onButtonClick: function onButtonClick() {
      agarApp.API.playSound('sfxClick');
      if (this.state === 'BREWING' || this.state === 'UNAVAILABLE') {
        agarApp.API.skipPotion(this.potion.slot);
        this.$parent.$emit('match_results_close', event);
      } else if (this.state === 'AVAILABLE') {
        agarApp.API.startPotion(this.potion.slot);
      } else if (this.state === 'EMPTY') {
        agarApp.API.getMorePotions();
      } else if (this.state === 'BATTLE_FULL') {
        agarApp.API.buyBattlePotion();
        this.$parent.$emit('match_results_close', event);
      } else {
        agarApp.API.openPotion(this.potion.slot);
        this.$parent.$emit('match_results_close', event);
      }
    },
    onUpdatePotion: function onUpdatePotion(e) {
      if (e.detail && this.potion && e.detail.slot === this.potion.slot) {
        this.$parent.$emit('potion_update', e.detail);
      }
    }
  },
  destroyed: function destroyed() {
    window.document.removeEventListener('update_potion', this.onUpdatePotion);
  }
};

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _spineAnimations = __webpack_require__(167);
//
//
//
//
var _default = exports["default"] = {
  props: ['assetName', 'animName', 'texturesCount', 'width', 'height', 'offsetX', 'offsetY', 'scaleX', 'scaleY'],
  data: function data() {
    return {
      canvasHTML: '',
      anim: null
    };
  },
  mounted: function mounted() {
    this.updateAnimation();
  },
  methods: {
    updateAnimation: function updateAnimation() {
      if (this.anim) {
        this.$refs.animation.removeChild(this.anim.getCanvas());
        this.anim.dispose();
      }
      this.anim = new _spineAnimations.SpineAnimation(this.assetName, this.width, this.height, this.scaleX, this.scaleY, true, false, this.texturesCount ? this.texturesCount : 1);
      var animCanvas = this.anim.getCanvas();
      var ctx = animCanvas.getContext('2d');
      ctx.scale(this.scaleX, this.scaleY);
      this.anim.setOffset(this.offsetX, this.offsetY);
      this.$refs.animation.appendChild(animCanvas);
      this.anim.play(this.animName, true, false);
    }
  },
  updated: function updated() {
    this.updateAnimation();
  },
  watch: {
    animName: function animName() {
      this.updateAnimation();
    }
  }
};

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _Settings = _interopRequireDefault(__webpack_require__(469));
var _storage = _interopRequireDefault(__webpack_require__(53));
var _storageKeys = _interopRequireDefault(__webpack_require__(33));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: ['inFacebook'],
  data: function data() {
    return {
      showSettings: false,
      showSkinEditorBubble: true
    };
  },
  components: {
    'settings-comp': _Settings["default"]
  },
  mounted: function mounted() {
    var _this = this;
    this.setFocus();
    window.document.addEventListener('focus_on_nick', function (e) {
      _this.setFocus();
    });
    window.document.addEventListener('open_settings', function () {
      _this.toggleSettings();
    });
    window.document.addEventListener('opened_skin_editor', function () {
      _this.showSkinEditorBubble = false;
    });
    window.document.addEventListener('login', function () {
      _this.showSkinEditorBubble = !_storage["default"].getKey(_storageKeys["default"].HAS_OPENED_SKIN_EDITOR);
    });
    window.document.addEventListener('logout', function () {
      _this.showSkinEditorBubble = !_storage["default"].getKey(_storageKeys["default"].HAS_OPENED_SKIN_EDITOR);
      _index.store.commit('user/customSkinTokensCountUpdate', 0);
      _index.store.commit('user/customSkinVipTokensCountUpdate', 0);
    });
    this.showSkinEditorBubble = !_storage["default"].getKey(_storageKeys["default"].HAS_OPENED_SKIN_EDITOR);
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'gameState', 'gameMode'])), {}, {
    guest: function guest() {
      return _index.store.state.game.login == _index.LoginState.OUT;
    },
    stats: function stats() {
      return _index.store.state.user.lastGameStats;
    },
    connecting: function connecting() {
      return !_index.store.state.game.connected;
    },
    settings: function settings() {
      return _index.store.state.settings.options;
    },
    isHome: function isHome() {
      return this.gameState == _index.GameState.HOME;
    },
    isGameOver: function isGameOver() {
      return this.gameState == _index.GameState.GAMEOVER;
    },
    show: function show() {
      return this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER && this.gameMode != _index.GameMode.BATTLEROYALE && this.gameMode != _index.GameMode.TEAMRUSH;
    },
    userInfo: function userInfo() {
      return _index.store.state.user.userInfo;
    }
  }),
  methods: {
    toggleSettings: function toggleSettings() {
      this.showSettings = !this.showSettings;
      agarApp.API.playSound('sfxClick');
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Settings');
    },
    play: function play() {
      var _this2 = this;
      var playCallback = function playCallback() {
        _this2.$emit('play');
        agarApp.API.playSound('sfxClick');
        agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Play', _this2.guest ? 'Guest' : 'User');
      };
      if (this.playVideoAd()) {
        // wait for video to be shown
        document.addEventListener('adCompleted', function () {
          playCallback();
        }.bind(this));
      } else {
        playCallback();
      }
    },
    spectate: function spectate() {
      this.closeSettings();
      this.$emit('spectate');
      agarApp.API.playSound('sfxClick');
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Spectate');
    },
    getVideoTimestamp: function getVideoTimestamp() {
      return _storage["default"].getKey(_storageKeys["default"].LAST_VIDEO_TIMESTAMP);
    },
    setVideoTimestamp: function setVideoTimestamp(value) {
      return _storage["default"].updateKey(_storageKeys["default"].LAST_VIDEO_TIMESTAMP, value);
    },
    playVideoAd: function playVideoAd() {
      var info = this.userInfo;
      console.log(info);
      if (this.userInfo.isPayingUser) {
        return false;
      }
      var dateNow = Date.now();
      var lastVideoDate = this.getVideoTimestamp();
      var cooldownInMiliseconds = 60 * 1000;
      var hasPassedCooldown = lastVideoDate != null ? dateNow - lastVideoDate >= cooldownInMiliseconds : true;
      if (!hasPassedCooldown) {
        return false;
      }

      //check if the adslib is loaded correctly or blocked by adblockers etc.
      if (typeof aiptag.adplayer !== 'undefined') {
        aiptag.cmd.player.push(function () {
          aiptag.adplayer.startPreRoll();
        });
        this.setVideoTimestamp(Date.now());
      } else {
        //Adlib didnt load this could be due to an adblocker, timeout etc.
        //Please add your script here that starts the content, this usually is the same script as added in AIP_COMPLETE.
        console.log("Ad Could not be loaded, load your content here");
        document.dispatchEvent(new Event('adCompleted'));
      }
      return true;
    },
    onContinue: function onContinue() {
      this.$emit('continue');
      agarApp.API.playSound('sfxClick');
      agarApp.API.maybeSendAnalyticsEvent('Stats', 'Continue');
    },
    facebookLogin: function facebookLogin() {
      agarApp.API.facebookLogin(function (result) {});
      agarApp.API.playSound('sfxClick');
    },
    googleLogin: function googleLogin() {
      document.dispatchEvent(new Event('google_selected'));
      agarApp.API.playSound('sfxClick');
      // agarApp.API.googleLoginClicked();
    },
    logout: function logout() {
      this.closeSettings();
      window.logout();
      agarApp.API.playSound('sfxClick');
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Logout');
      _index.store.commit('game/loginRealmUpdate', 'guest');
    },
    onCloseSettings: function onCloseSettings() {
      this.closeSettings();
      agarApp.API.playSound('sfxClick');
    },
    closeSettings: function closeSettings() {
      this.showSettings = false;
      this.setFocus();
      // this.saveStorage();
    },
    changeSettings: function changeSettings(id, value) {
      this.$emit('settingsUpdate', {
        key: id,
        value: value
      });
    },
    openSkins: function openSkins() {
      agarApp.API.openShop('shopSkins', {
        tab: 'OWNED',
        id: _index.store.state.user.skin
      });
      agarApp.API.playSound('sfxClick');
    },
    googleShare: function googleShare() {
      var obj = {
        mins: Math.floor(this.stats.timeAlive / 1000 / 60),
        secs: Math.floor(this.stats.timeAlive / 1000 % 60),
        score: this.stats.highestMass
      };
      agarApp.API.socialStory('ss_matchresults', obj, 'google');
    },
    fbShare: function fbShare() {
      agarApp.social.fbShareStats(this.getStatsString('page_fb_matchresults_subtitle'));
    },
    twShare: function twShare() {
      agarApp.social.twitterShareStats(this.getStatsString('page_tt_share_stats'));
    },
    formatSeconds: function formatSeconds(s) {
      s = Math.max(0, Math.floor(s / 1000));
      var sec = '' + s % 60;
      var min = '' + Math.floor(s / 60);
      if (sec.length < 2) sec = '0' + sec;
      return min + ':' + sec;
    },
    getStatsString: function getStatsString(originalStr) {
      var timeAlive = this.formatSeconds(this.stats.timeAlive);
      var minsAlive = timeAlive.split(':')[0];
      var secsAlive = timeAlive.split(':')[1];
      var replaceStr = agarApp.i18n.parseString(originalStr, '%@', [minsAlive, secsAlive, Math.floor(this.stats.highestMass)]);
      return replaceStr;
    },
    setFocus: function setFocus() {
      var self = this;
      this.$nextTick(function () {
        if (self.$refs.nick) {
          self.$refs.nick.focus();
        }
      });
    }
  },
  watch: {
    show: function show(value) {
      if (value) {
        this.setFocus();
      }
    },
    connecting: function connecting(value) {
      if (!value) {
        this.setFocus();
      }
    }
  }
};

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var regionTitle = [];
regionTitle['US-Atlanta'] = 'page_region_north_america';
regionTitle['BR-Brazil'] = 'page_region_south_america';
regionTitle['EU-London'] = 'page_region_europe';
regionTitle['RU-Russia'] = 'page_region_russia';
regionTitle['TK-Turkey'] = 'page_region_turkey';
regionTitle['JP-Tokyo'] = 'page_region_east_asia';
regionTitle['CN-China'] = 'page_region_china';
regionTitle['SG-Singapore'] = 'page_region_oceania';
var _default = exports["default"] = {
  store: _index.store,
  props: ['inFacebook'],
  data: function data() {
    return {};
  },
  components: {},
  created: function created() {},
  mounted: function mounted() {},
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'settings', 'settings/labels', 'realm'])), {}, {
    options: function options() {
      return this['settings/labels'];
    },
    guest: function guest() {
      return _index.store.state.game.login == _index.LoginState.OUT;
    },
    region: {
      get: function get() {
        return _index.store.state.game.region;
      },
      set: function set(value) {
        window.agarApp.API.setRegion(value);
        _index.store.commit('game/regionUpdate', value);
      }
    },
    regions: function regions() {
      return _index.store.state.game.regions;
    },
    version: function version() {
      return _index.store.state.game.version;
    },
    userId: function userId() {
      return _index.store.state.user.userId;
    },
    isInGame: function isInGame() {
      return window.agarApp.API.isInGame() && window.core.playerHasCells();
    }
  }),
  methods: {
    regionName: function regionName(region, total) {
      var title = regionTitle[region];
      return this.i18n[title] + ' (' + total + ')';
    },
    onChange: function onChange(evt) {
      this.$emit('change', evt.target.id, evt.target.checked);
      if (evt.target.id == 'targetedAds') {
        window.agarApp.API.showGDPRRevokeDialog(evt.target.checked);
      }
    },
    onSelected: function onSelected(evt) {
      this.$emit('change', evt.target.id, evt.target.value);
    },
    showOption: function showOption(key) {
      return this.options[key] && (key != 'showOnlineStatus' || this.realm == 'Facebook');
    }
  }
};

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _ads = _interopRequireDefault(__webpack_require__(477));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
/* eslint-disable camelcase*/
var ssa_json = window.ssa_json;
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: [],
  data: function data() {
    return {
      store: _index.store,
      LoginState: _index.LoginState,
      GameState: _index.GameState,
      GameMode: _index.GameMode
    };
  },
  components: {},
  mounted: function mounted() {
    window.addEventListener('country_update', this.initAds);
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'gameState', 'gameMode'])), {}, {
    show: function show() {
      return this.gameState == _index.GameState.HOME || this.gameState == _index.GameState.GAMEOVER && this.gameMode != _index.GameMode.BATTLEROYALE && this.gameMode != _index.GameMode.TEAMRUSH;
    },
    isGameOver: function isGameOver() {
      return this.gameState == _index.GameState.GAMEOVER && this.gameMode != _index.GameMode.BATTLEROYALE;
    },
    deny: function deny() {
      return this.getCookie('cc_gdpr') === 'no'; // check if permition was given
    }
  }),
  methods: {
    getCookie: function getCookie(name) {
      var value = '; ' + document.cookie;
      var parts = value.split('; ' + name + '=');
      if (parts.length == 2) return parts.pop().split(';').shift();
    },
    initAds: function initAds() {}
  },
  watch: {
    gameState: function gameState(val) {}
  }
};

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  store: _index.store,
  props: ['hasPlayedTeams'],
  data: function data() {
    return {
      modesPerLine: 4,
      modes: [{
        id: ':ffa',
        label: 'page_gamemode_ffa',
        "class": 'ffa'
      }, {
        id: ':battleroyale',
        label: 'page_gamemode_battle_royale',
        "class": 'battleroyale'
      }, {
        id: ':teams',
        label: 'page_gamemode_teams',
        "class": 'teams'
      }, {
        id: ':experimental',
        label: 'page_gamemode_experimental',
        "class": 'experimental'
      }]
    };
  },
  components: {},
  mounted: function mounted() {},
  computed: _objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'gameMode'])),
  methods: {
    rowModes: function rowModes(modesPerLine, lineIndex) {
      return this.modes.slice((lineIndex - 1) * modesPerLine, lineIndex * modesPerLine);
    },
    selected: function selected(value) {
      return this.gameMode == value || this.gameMode == _index.GameMode.PARTY;
    },
    select: function select(value) {
      if (this.gameMode != _index.GameMode.PARTY) {
        window.agarApp.API.setGameMode(value);
      } else {
        _index.store.commit('game/modeUpdate', value);
      }
      window.document.dispatchEvent(new Event('focus_on_nick'));
      window.agarApp.API.playSound('sfxClick');
    }
  }
};

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: [],
  data: function data() {
    return {
      token: '',
      PartyState: _index.PartyState,
      GameMode: _index.GameMode,
      GameState: _index.GameState,
      error: null
    };
  },
  components: {},
  mounted: function mounted() {
    var _this = this;
    document.addEventListener('core_init_complete', function () {
      _this.checkToken();
    });
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n', 'gameState', 'gameMode', 'partyState'])), {}, {
    confirm: function confirm() {
      return _index.store.state.game.confirm;
    },
    region: function region() {
      return _index.store.state.game.region;
    },
    hashToken: function hashToken() {
      return '#' + this.token;
    },
    urlToken: function urlToken() {
      return window.document.domain + '/' + this.hashToken;
    },
    errorMessage: function errorMessage() {
      switch (this.error) {
        case 'party_full':
          return this.i18n.page_party_is_full_message;
        default:
          return this.i18n.page_party_join_error;
      }
    },
    shareText: function shareText() {
      if (this.partyState == _index.PartyState.JOINED) {
        return this.i18n.page_joined_party_instructions;
      } else if (this.gameState == _index.GameState.GAMEOVER) {
        return this.i18n.page_results_party_share_link;
      } else {
        return this.i18n.page_create_party_instructions;
      }
    }
  }),
  methods: {
    checkToken: function checkToken() {
      if (this.gameMode == _index.GameMode.PARTY) return;
      this.token = this.getPartyToken();
      agarApp.API.setPartyToken(this.token);
      if (this.token) {
        this.joinParty();
      }
    },
    createToken: function createToken() {
      agarApp.API.createPartyToken(this.onCreateSuccess, this.onCreateError);
    },
    createParty: function createParty() {
      _index.store.commit('party/partyUpdate', 'create');
      this.createToken();
    },
    onCreateSuccess: function onCreateSuccess(resp) {
      this.token = '';
      try {
        this.token = JSON.parse(resp).token;
        if (this.partyState == _index.PartyState.CREATING) {
          _index.store.commit('party/partyUpdate', 'created');
          this.joinParty();
        }
      } catch (e) {
        this.token = null;
        _index.store.commit('party/partyUpdate', 'error');
      }
    },
    onCreateError: function onCreateError() {
      _index.store.commit('party/partyUpdate', 'error');
    },
    playParty: function playParty() {
      if (this.gameMode != _index.GameMode.PARTY && this.gameState == _index.GameState.GAMEOVER) {
        _index.store.commit('game/modeUpdate', _index.GameMode.PARTY);
      } else {
        this.$emit('play');
      }
    },
    confirmPlayParty: function confirmPlayParty() {
      _index.store.commit('partyConfirmUpdate', true);
      this.joinParty();
    },
    enterCodeParty: function enterCodeParty() {
      _index.store.commit('party/partyUpdate', 'enter');
    },
    joinParty: function joinParty() {
      if (this.isValidToken()) {
        agarApp.API.joinParty(this.token, this.onJoinSuccess, this.onJoinError);
        _index.store.commit('party/partyUpdate', 'join');
      } else {
        _index.store.commit('party/partyUpdate', 'error');
      }
    },
    onJoinSuccess: function onJoinSuccess() {
      _index.store.commit('party/partyUpdate', 'code_ok');
      this.enterParty();
    },
    onJoinError: function onJoinError(reason) {
      // console.log('test: joined error!');
      this.error = reason;
      _index.store.commit('party/partyUpdate', reason);
    },
    exitParty: function exitParty() {
      // clear code
      _index.store.commit('party/partyUpdate', 'exit');
    },
    enterParty: function enterParty() {
      _index.store.commit('game/modeUpdate', _index.GameMode.PARTY);
      agarApp.API.setPartyToken(this.token);
      this.updateHistory(this.hashToken);
      if (this.gameState == _index.GameState.GAMEOVER) {
        this.$emit('play');
      }
    },
    updateHistory: function updateHistory(hash) {
      window.location = hash;
    },
    leaveParty: function leaveParty() {
      window.location.hash = '';
      _index.store.commit('partyConfirmUpdate', true);
      agarApp.API.setPartyToken('');
      agarApp.API.setGameMode(_index.store.state.game.nextGameMode);
    },
    cancelParty: function cancelParty() {
      _index.store.commit('partyConfirmUpdate', false);
    },
    getPartyToken: function getPartyToken() {
      if (window.location.hash && window.location.hash.length == 7) {
        return window.location.hash.substr(1);
      }
      return null;
    },
    isValidToken: function isValidToken() {
      var pToken = this.token;
      if (pToken.length > 0 && pToken.indexOf('#') >= 0) {
        var str = pToken.split('#')[1];
        pToken = str;
      }
      if (pToken.length == 7 && pToken.indexOf('M') == 0) {
        // open mobile party code warning dialog
        agarApp.API.showMobilePartyCodeDialog();
        return false;
      } else if (pToken.length != 6) {
        // not a party token
        return false;
      } else {
        return true;
      }
    },
    onClick: function onClick(callback) {
      agarApp.API.playSound('sfxClick');
      callback();
    }
  },
  watch: {
    urlToken: function urlToken(val) {
      this.$emit('update:token', val);
    },
    region: function region(newval, oldval) {
      // check if there is a valid region for the first time
      // and is not in a party already
      if (!oldval && newval && !this.token) {
        this.createToken();
      }
    }
  }
};

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
var _utils = _interopRequireDefault(__webpack_require__(26));
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: [],
  data: function data() {
    return {
      promo: '',
      loaded: false,
      banner: null,
      timer: null
    };
  },
  components: {},
  mounted: function mounted() {},
  computed: {
    login: function login() {
      return _index.store.state.game.login;
    },
    country: function country() {
      return _index.store.state.game.country;
    },
    userInfo: function userInfo() {
      return _index.store.state.user.userInfo;
    }
  },
  methods: {
    reload: function reload() {
      var promo = '';
      var nextBanner = '';
      if (this.login == _index.LoginState.IN && this.userInfo.hasLoggedIntoMobile) {
        // TODO: consider switching to Axios to load content
        nextBanner = '/banners/banners-loggedin' + promo + '.html';
      } else {
        nextBanner = '/banners/banners-loggedout' + promo + '.html';
      }
      if (this.banner != nextBanner) {
        this.loaded = false;
        this.banner = nextBanner;
        // load dynamic banners
        _utils["default"].load(nextBanner, this.loadComplete);
      }
    },
    loadComplete: function loadComplete(text) {
      var _this = this;
      _utils["default"].get('#mcbanners').innerHTML = text;
      if (this.timer) {
        clearInterval(this.timer);
      }
      this.timer = setTimeout(function () {
        _this.loaded = true;
      }, 500);
    }
  },
  watch: {
    login: 'reload',
    country: 'reload'
  }
};

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "#leagues-app {\n\ttop: 50%;\n    left: 50%;\n    position: absolute;\n\ttransform-origin: center top 0px;\n\tz-index: 1;\n\tdisplay: none;\n}\n\n#leagues-app > .disabler {\n\tz-index: null;\n}\n\n.container {\n\tposition: relative;\n\twidth: 800px;\n\theight: 80px;\n\tleft: 1px;\n\ttop: 1px;\n\tmargin-top: 10px;\n\tborder: 2px solid;\n\tborder-radius: 30px 5px 5px 30px;\n}\n\n.container.weekly {\n\twidth: 755px;\n}\n\n.container.myleague {\n\tborder-color: #8D241E;\n}\n\n.container.friends {\n\tborder-color: #4AB901;\n}\n\n.container.country {\n\tborder-color: #653D90;\n}\n\n.container.world {\n\tborder-color: #0546BE;\n}\n\n@media screen and (-webkit-min-device-pixel-ratio:0)\n  and (min-resolution:.001dpcm) {\n    .box {\n      border: 10px solid transparent; \n    }\n}\n  \n.box {\n\tposition: absolute;\n\ttop: -1px;\n    left: 0px;\n    bottom: -2px;\n\tborder-image-slice: 10 59 10 10; \n\tborder-image-repeat: repeat stretch;\n\tborder-image-width: 10px 59px 10px 10px;\n\twidth: 349px;\n\tmargin-left: -2px;\n\tmargin-top: -1px;\n}\n\n.box.weekly {\n\twidth: 520px;\n\t/* height: 62px; */\n}\n  \n.box.myleague {\n\tborder-image-source: url('/img/topbar-myleague.png');\n}\n\n.box.friends {\n\tborder-image-source: url('/img/topbar-friends.png');\n}\n\n.box.country {\n\tborder-image-source: url('/img/topbar-country.png');\n}\n\n.box.world {\n\tborder-image-source: url('/img/topbar-world.png');\n}\n\n.boxFill {\n\twidth: 300px;\n\theight: 100%;\n}\n\n.boxFill.myleague {\n\tbackground-color: #FF0100;\n}\n\n.boxFill.friends {\n\tbackground-color: #6EDB27;\n}\n\n.boxFill.country {\n\tbackground-color: #9153D3;\n}\n\n.boxFill.world {\n\tbackground-color: #1F6BE7;\n}\n\n.boxFill.weekly {\n\twidth: 476px;\n}\n\n.leagueName {\n\tposition: absolute;\n\ttop: 10px;\n\tleft: 110px;\n\tfont-size: 16pt;\n\tfont-weight: bold;\n\tcolor: white;\n}\n\n.text-border.mylegaue {\n\ttext-shadow: 1px 1px #8D241E, -1px -1px #8D241E, -1px 1px #8D241E, 1px -1px #8D241E;\n}\n\n.text-border.friends {\n\ttext-shadow: 1px 1px #4AB901, -1px -1px #4AB901, -1px 1px #4AB901, 1px -1px #4AB901;\n}\n\n.text-border.country {\n\ttext-shadow: 1px 1px #653D90, -1px -1px #653D90, -1px 1px #653D90, 1px -1px #653D90;\n}\n\n.text-border.world {\n\ttext-shadow: 1px 1px #0546BE, -1px -1px #0546BE, -1px 1px #0546BE, 1px -1px #0546BE;\n}\n\n  \n.bear {\n\t--league-border-color: #8B4A1F;\n}\n\n.wasp {\n\t--league-border-color: #CA8F01;\n}\n\n.crocodile {\n\t--league-border-color: #1B8B05;\n}\n\n.hunter {\n\t--league-border-color: #F62000;\n}\n\n.bat {\n\t--league-border-color: #A822C7;\n}\n\n.fly {\n\t--league-border-color: #8F7E3A;\n}\n\n.fox {\n\t--league-border-color: #F36101;\n}\n\n.kraken {\n\t--league-border-color: #029070;\n}\n\n.mammoth {\n\t--league-border-color: #7B6750;\n}\n\n.panther {\n\t--league-border-color: #4D4643;\n}\n\n.text-shadow {\n\ttext-shadow: -5px 0 10px var(--league-border-color), 0 -5px 10px var(--league-border-color), 5px 0 10px var(--league-border-color), 0 5px 10px var(--league-border-color);\n}\n\n.leagues-dialog {  \n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tborder-radius: 10px;\n\tbackground-color: #fff;\n\twidth: 810px;\n\theight: 570px;\n\tpadding: 40px;\n}\n\n.leagues-blocker {\n\tposition: fixed;\n    width: 5000px;\n    height: 5000px;\n    transform: translate(-50%, -50%);\n}\n\n.leagues-blocker.facebook {\n\tz-index: 2000;\n}\n\n#leagues-app h2,\n#leagues-app h1 {\n\tcolor: #656465;\n\tfont-size: 26pt;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\n#leagues-app h1 {\n\tmargin-top: -10px;\n}\n\n#leagues-app h2 {\n\tfont-size: 18pt;\n}\n\n#menu-leagues {\n\tdisplay: table; \n\ttable-layout: fixed;\n\twidth: 100%;\n\tmargin-top: 25px;\n}\n\n#menu-leagues .button-row{\n\tdisplay: table-row;\n}\n\n#menu-leagues .button-row .button-cell {\n\tdisplay: table-cell;\n\tpadding: 5px;\n}\n\n#menu-leagues .button-row .button-cell button {\n\twidth: 100%;\n\theight: 40px;\n\tfont-size: 14px;\n\tfont-weight: bold;\n}\n\n#menu-leagues button.left {\n\twhite-space: nowrap;\n\tmargin-left: 0px;\n}\n\n#menu-leagues button span {\n\tposition: relative;\n\tvertical-align: middle;\n\tleft: -5px;\n}\n\n.btn:focus {\n\toutline: none;\n}\n\n.btn-myleague:hover, \n.btn-myleague {\n\tborder-color: #90241B;\n\tbackground-color: #E93323;\n\tcolor:white;\n}\n\n.btn-myleague-selected:focus,\n.btn-myleague-selected:hover, \n.btn-myleague-selected {\n\tborder-color: #E93323;\n\tbackground-color: white;\n\tcolor: #E93323;\n}\n\n.btn-friends:hover,\n.btn-friends {\n\tborder-color: #76B83C;\n\tbackground-color: #88D74B;\n\tcolor: white;\n}\n\n.btn-friends-selected:focus,\n.btn-friends-selected:hover,\n.btn-friends-selected {\n\tborder-color: #76B83C;\n\tbackground-color: white;\n\tcolor: #76B83C;\n}\n\n.btn-country:hover,\n.btn-country {\n\tborder-color: #6F40B0;\n\tbackground-color: #8955CD;\n\tcolor: white;\n}\n\n.btn-country-selected:focus,\n.btn-country-selected:hover,\n.btn-country-selected {\n\tborder-color: #6F40B0;\n\tbackground-color: white;\n\tcolor: #6F40B0;\n}\n\n.btn-world:hover,\n.btn-world {\n\tborder-color: #2A56B9;\n\tbackground-color: #3669E0;\n\tcolor: white;\n}\n\n.btn-world-selected:focus,\n.btn-world-selected:hover,\n.btn-world-selected {\n\tborder-color: #3669E0;\n\tbackground-color: white;\n\tcolor: #3669E0;\n}\n\n.leagues-country-flag {\n\ttransform: matrix(0.7, 0, 0, 0.7, 0, 0);\n}\n\n.leagues-inner {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    padding: 25px;\n    z-index: 1500;\n}\n\n.leagues-inner-close {\n\tdisplay: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n\tmargin: 10px;\n\topacity: 0.5;\n}\n\n.leagues-inner-close:hover {\n\topacity: 1;\n}\n\n.menu-help {\n    display: flex;\n    width: 100%;\n    margin-top: 25px;\n    justify-content: center;\n}\n\n.menu-help button {\n    flex-grow: 1;\n\ttext-align: center; \n\theight: 42px;\n    margin-left: 15px;\n    margin-right: 15px;\n    margin: 0px 8px;\n}\n\n.menu-help button.left {\n\twhite-space: nowrap;\n}\n\n.btn-country-info:hover,\n.btn-country-info {\n\tborder-color: #623081;\n\tbackground-color: #9648D6;\n\tcolor: white;\n\twidth: 280px;\n}\n\n.btn-country-info.selected {\n\tborder-color: #9648D6;\n\tbackground-color: white;\n\tcolor: #9648D6;\n}\n\n.btn-world-info:hover,\n.btn-world-info {\n\tborder-color: #4364A5;\n\tbackground-color: #1F6BE7;\n\tcolor: white;\n\twidth: 280px;\n}\n\n.btn-world-info.selected {\n\tborder-color: #1F6BE7;\n\tbackground-color: white;\n\tcolor: #1F6BE7;\n}\n\n.btn-friends-info:hover,\n.btn-friends-info {\n\tborder-color: #6B9D42;\n\tbackground-color: #6CDA28;\n\tcolor: white;\n\twidth: 280px;\n}\n\n.btn-friends-info.selected {\n\tborder-color: #6CDA28;\n\tbackground-color: white;\n\tcolor: #6CDA28;\n}\n\n.help, .prizes {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n\tz-index: 1;\n}\n\n.drop-enter-active, .drop-leave-active {\n\ttransition: all .5s ease;\n}\n\n.drop-enter, .drop-leave-to {\n\ttransform: translateY(-100vh);\n    opacity: 0;\n}\n\n.drop-enter-to, .drop-leave {\n\ttransform: translateY(0vh);\n    opacity: 1;\n}", ""]);

// exports


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _MyLeague = _interopRequireDefault(__webpack_require__(495));
var _Friends = _interopRequireDefault(__webpack_require__(528));
var _Country = _interopRequireDefault(__webpack_require__(541));
var _World = _interopRequireDefault(__webpack_require__(550));
var _GettingAhead = _interopRequireDefault(__webpack_require__(556));
var _Winner = _interopRequireDefault(__webpack_require__(560));
var _Profile = _interopRequireDefault(__webpack_require__(564));
var _WeeklyResults = _interopRequireDefault(__webpack_require__(568));
var _Promotion = _interopRequireDefault(__webpack_require__(580));
var _InvitationReward = _interopRequireDefault(__webpack_require__(584));
var _utils = _interopRequireDefault(__webpack_require__(26));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
function cleanDisplayName(displayName) {
  var cutIndex = displayName.indexOf("_");
  displayName = cutIndex > 0 ? displayName.substr(0, cutIndex) : displayName;
  displayName = displayName.trim();
  cutIndex = displayName.search(/\s/);
  displayName = cutIndex > 0 ? displayName.substr(0, cutIndex) : displayName;
  return displayName;
}
function itemSetCleanDisplayName(item) {
  item.displayName = cleanDisplayName(item.displayName);
}
var _default = exports["default"] = {
  name: 'leagues',
  data: function data() {
    return {
      showMainMenu: false,
      showGettingAhead: false,
      showWinner: false,
      showProfile: false,
      showWeeklyResults: false,
      showPromotion: false,
      showError: false,
      showInvitationReward: false,
      invitationRewardMultiple: false,
      selectedArea: null,
      currentView: '',
      title: 'Leaderboards',
      leaderboards: null,
      lastWeekResults: null,
      user: null,
      userCountryCode: null,
      userWinnings: null,
      items: null,
      prizes: null,
      tiers: null,
      leagues: null,
      league: null,
      userTier: null,
      userLevel: null,
      leagueResetTime: null,
      passUpdates: [],
      passUsers: [],
      passLeague: null,
      profileAvatarUrl: null,
      profileDisplayName: null,
      profileUserId: null,
      profileTrophies: null,
      profileUserStats: null,
      profileCountryCode: null,
      profileLeague: null,
      profileLevel: null,
      invitationRewardFriend: null,
      invitationRewardAmount: null,
      isFacebook: false
    };
  },
  components: {
    'myleague': _MyLeague["default"],
    'friends': _Friends["default"],
    'country': _Country["default"],
    'world': _World["default"],
    'getting-ahead': _GettingAhead["default"],
    'winner': _Winner["default"],
    'profile': _Profile["default"],
    'weeklyresults': _WeeklyResults["default"],
    'promotion': _Promotion["default"],
    'invitation-reward': _InvitationReward["default"]
  },
  mounted: function mounted() {
    var self = this;

    // System ready
    window.document.addEventListener('configuration_loaded', function () {
      self.init();
    }, false);

    // Close dialog request
    window.document.addEventListener('dialogs_close', function () {
      self.close();
    }, false);
    window.document.addEventListener('open_leaderboards', function () {
      agarApp.API.maybeSendAnalyticsEvent('MainMenu', 'Leaderboards');
      self.open();
    }, false);
    window.document.addEventListener('open_invitation_reward', function (e) {
      if (e.detail.ids) {
        window.FB.api(e.detail.ids[0], 'GET', null, function (result) {
          self.invitationRewardFriend = result.name.split(' ')[0];
          self.invitationRewardMultiple = e.detail.ids.length > 1;
          self.invitationRewardAmount = e.detail.amount;
          self.showInvitationReward = true;
          self.showMainMenu = false;
          self.showWindow();
        });
      } else {
        self.invitationRewardFriend = 'A friend';
        self.invitationRewardAmount = e.detail.amount;
        self.showInvitationReward = true;
        self.showMainMenu = false;
        self.showWindow();
      }
    }, false);
    window.document.addEventListener('no_proper_leagues_response', function (e) {
      self.openMainMenu();
      self.showError = true;
    }, false);

    // Last week results request
    this.$on('request_lastweekresults', function (league, tier) {
      var leagues = league.split(' ');
      self.league = leagues[0];
      if (tier) {
        self.tier = tier;
      }
      self.fetchResults(false);
      self.showWeeklyResults = true;
    });

    // promotion
    this.$on('promotion_close', function () {
      self.hideWindow();
    });

    // prizes request
    this.$on('request_prizes', function () {
      self.fetchPrizes(self.league);
    });
    this.$on('results_close', function () {
      self.showWeeklyResults = false;
    });
    this.$on('show_profile', function (data) {
      var result = agarApp.API.getUserStats(data.userId);
      result.then(function (res) {
        self.profileAvatarUrl = data.realmInfo.avatarUrl;
        self.profileDisplayName = data.displayName;
        self.profileUserId = data.realmInfo.realmId;
        self.profileTrophies = res.lifetimeTrophies;
        self.profileCountryCode = data.countryCode;
        var user = self.user;
        var level = user.id == data.userId ? user.level : data.level;
        self.profileLevel = level;
        self.profileLeague = data.leagueName.toLowerCase();
        self.profileUserStats = self.parseStats(res.userStats);
        self.showProfile = true;
      });
    });
    this.$on('close_profile', function () {
      self.showProfile = false;
    });
    this.$on('close_invitation_rewards', function () {
      self.showInvitationReward = false;
    });
    this.$on('change_league', function (league) {
      switch (league) {
        case 'myleague':
          self.myleague();
          break;
        case 'friends':
          self.friends();
          break;
        case 'country':
          self.country();
          break;
        case 'world':
          self.world();
          break;
      }
      self.fetchPrizes(league, false);
    });
    this.$on('share', function (data) {
      agarApp.API.leaguesSocialStory(data.type, data.param, data.twitter, data.league);
    });
  },
  methods: {
    init: function init() {
      var _this = this;
      agarApp.API.leaguesModelInit(this.onModelReady);
      agarApp.testWinner = this.testWinner;
      window.document.addEventListener('leagues_init_complete', function (e) {
        _this.showError = false;
        _this.open();
      }, false);
    },
    onModelReady: function onModelReady(winnings) {
      var self = this;

      // get user data
      this.user = agarApp.API.getUserInfo();

      // check for guest
      /* if (this.user.isGuest) {
          this.hideMenuTimer();
          return;
      } */

      // for some reason, leaderboards data is not available
      if (this.user.userLeaguesInfo == null) {
        return;
      }
      this.showError = false;
      this.user.league = agarApp.API.getUserLeagues();
      var data = agarApp.API.getCachedDataLeague();
      this.userTier = this.user.league[2].leagueName;
      if (data) {
        this.userCountryCode = data.countryCode;
        this.userTier = data.leagueName;
        this.userLevel = data.level;
      }
      this.tiers = agarApp.API.getLeaguesTiers();

      // check leagues reset
      this.checkReset();

      // check winnings
      this.checkWinnings(winnings);

      // check getting ahead
      agarApp.API.getUserPassUpdates(this.listenUserPassUpdates);

      // Update timer
      // let timer = this.getMenuTimer();
      // this.showMenuTimer();

      setInterval(function () {
        self.updateResetTime();
        // timer.text(self.leagueResetTime);
      }, 1000);
    },
    /* getMenuTimer: function() {
        return document.querySelectorAll('#leaguesButton > .timer')[0];
    },
     showMenuTimer: function() {
        Utils.show(this.getMenuTimer());
    },
     hideMenuTimer: function() {
        Utils.hide(this.getMenuTimer());
    }, */

    checkWinnings: function checkWinnings(winnings) {
      // reset list
      this.userWinnings = [];

      // check user winnings
      if (winnings == null || winnings.world == null && winnings.country == null && winnings.league == null && winnings.friends == null) {
        return;
      }
      if (winnings.world) {
        this.userWinnings.unshift({
          league: 'world',
          user: winnings.world
        });
      }
      if (winnings.country) {
        this.userWinnings.unshift({
          league: 'country',
          user: winnings.country
        });
      }
      if (winnings.league) {
        this.userWinnings.unshift({
          league: 'league',
          user: winnings.league
        });
      }
      if (winnings.friends) {
        this.userWinnings.unshift({
          league: 'friends',
          user: winnings.friends
        });
      }
      if (this.userWinnings.length > 0) {
        this.showNextWinnings();
        this.fetchResults(false);
      } else {
        // show last week results
        this.showWeeklyResults = true;
        this.showWindow();
      }

      // check for tier promotion
      var latestTier = agarApp.API.getUserLatestTier().toLowerCase();
      if (this.userTier != null && this.userTier.toLowerCase() != latestTier) {
        this.showPromotionDialog();
      }

      // console.log('test: Winnings:', winnings);
    },
    showNextWinnings: function showNextWinnings() {
      var win = this.userWinnings.pop();
      if (win == null) {
        // no more winnings
        return;
      }

      // 1. Get prize -
      var userLeague = win.user.leagueName;
      var league = win.league == 'league' ? userLeague : win.league;
      var prize = agarApp.API.getLeaguesWinPrize(league, win.user.rank);
      if (prize == null) {
        // check next
        this.showNextWinnings();
        return;
      }

      // 2. Get prize product
      this.winnersLeague = win.league;
      this.winnersTier = win.user.leagueName;
      this.winnersPrizeAmount = prize.quantity;
      this.winnersPrizeType = prize.productId;
      this.winnersAvatarUrl = win.user.realmInfo.avatarUrl;
      this.winnersRank = win.user.rank;
      this.winnersTrophies = win.user.trophies;
      this.winnersCountry = win.user.countryCode;
      this.userTier = win.user.leagueName;

      // 3. Show popup
      var self = this;
      agarApp.API.openLeaguesWinnerDialog(function (dialog) {
        // open dialog
        // 4. Show pending request
        self.showWinnerWindow(dialog);
      }, function /* dialog*/
      () {
        // close dialog
        self.showNextWinnings();
      });
    },
    showPromotionDialog: function showPromotionDialog() {
      var self = this;
      agarApp.API.openLeaguesPromotion(function (dialog) {
        // open dialog
        self.userTier = agarApp.API.getUserLatestTier();
        agarApp.API.updateUserLatestLevel();
        self.showPromotion = true;
        self.showWindow();
        self.$once('promotion_close', function () {
          dialog.close();
        });
      }, function /* dialog*/
      () {
        // close dialog
        self.showPromotion = false;
      });
    },
    open: function open() {
      if (this.fetchUserInfo()) {
        this.openMainMenu();
        this.isFacebook = agarApp.API.isLoggedWithFacebook();
        if (!this.showError) {
          this.fetchResults(true);
        }
      } else if (this.user && this.user.isGuest) {
        agarApp.API.showGuestView();
      } else {
        this.openMainMenu();
        this.showError = true;
      }
    },
    openMainMenu: function openMainMenu() {
      this.showGettingAhead = false;
      this.showMainMenu = true;
      this.showWindow();

      // open first item of the menu
      this.myleague();
    },
    showWindow: function showWindow() {
      _utils["default"].show('#leagues-app');
    },
    showWinnerWindow: function showWinnerWindow(dialog) {
      this.showWinner = true;
      this.showMainMenu = false;
      this.showWindow();
      agarApp.API.playSound('sfxLeaguesPopupsIn');
      setTimeout(function () {
        agarApp.API.playSound('sfxLeaguesResultsPosition');
      }, 800);
      setTimeout(function () {
        agarApp.API.playParticleAnimation('particle/LeagueCompetitionResults.plist', 235, 520);
      }, 800);
      setTimeout(function () {
        agarApp.API.playSound('sfxLeaguesResultsPrize');
      }, 1800);
      setTimeout(function () {
        agarApp.API.playParticleAnimation('particle/LeagueCompetitionResults.plist', 660, 520);
      }, 1800);
      setTimeout(function () {
        agarApp.API.hideCanvas();
      }, 2250);

      // winner
      var self = this;
      this.$once('winner_close', function () {
        self.$off('winner_close');
        self.showWinner = false;
        self.hideWindow();
        dialog.close();
      });
    },
    hideWindow: function hideWindow() {
      this.showMainMenu = false;
      this.showWinner = false;
      this.showGettingAhead = false;
      this.showInvitationReward = false;
    },
    close: function close(/* event */
    ) {
      this.hideWindow();

      // clear data
      this.items = null;
    },
    /* MENU */
    myleague: function myleague() {
      this.selectView('myleague', this.userTier);
    },
    friends: function friends() {
      this.selectView('friends');
    },
    country: function country() {
      this.selectView('country', null, this.userCountryCode);
    },
    world: function world() {
      this.selectView('world');
    },
    // /////////////////

    selectView: function selectView(view /* , tier, country*/) {
      this.selectButton(view);
      if (this.showError) {
        return;
      }
      if (!this.leaderboards) {
        this.fetchResults(true);
      }
      if (this.leaderboards) {
        if (view == 'myleague') {
          this.items = this.leaderboards['league'];
        } else {
          this.items = this.leaderboards[view];
        }
      }
      this.league = view;
      this.currentView = view;
      this.fetchPrizes(view, true);
    },
    selectButton: function selectButton(area) {
      this.unselectButton();
      this.selectedArea = area;
      var style = 'btn-' + area;
      _utils["default"].addClass('#leagues-app .' + style, style + '-selected');
      _utils["default"].removeClass('#leagues-app .' + style, style);
    },
    unselectButton: function unselectButton() {
      if (this.selectedArea) {
        var style = 'btn-' + this.selectedArea;
        _utils["default"].addClass('#leagues-app .' + style + '-selected', style);
        _utils["default"].removeClass('#leagues-app .' + style + '-selected', style + '-selected');
      }
    },
    // Data fetching
    fetchUserInfo: function fetchUserInfo() {
      // model not available yte
      if (!agarApp.API || this.user == null) {
        return false;
      }
      if (this.user == null || this.user.isGuest) {
        return false;
      }
      this.leagues = this.user.league;
      return true;
    },
    fetchResults: function fetchResults(currentWeek) {
      // model not available yte
      if (!agarApp.API) {
        return;
      }
      var self = this;
      var result = agarApp.API.getLeaguesResults(currentWeek);
      result.then(function (res) {
        res.league.forEach(itemSetCleanDisplayName);
        res.friends.forEach(itemSetCleanDisplayName);
        res.country.forEach(itemSetCleanDisplayName);
        res.world.forEach(itemSetCleanDisplayName);
        if (currentWeek) {
          self.leaderboards = res;
          self.items = res.league;

          // check users data!
          if (self.userCountryCode == null) {
            for (var i = 0; i < self.items.length; i++) {
              if (self.items[i].userId == self.user.id) {
                var item = self.items[i];
                self.userCountryCode = item.countryCode;
                self.userTier = item.leagueName;
                self.userLevel = item.level;
                break;
              }
            }
          }
        } else {
          self.lastWeekResults = res;
        }
        self.fetchPrizes(self.league, currentWeek);
      });
    },
    fetchPrizes: function fetchPrizes(league, currentWeek) {
      var tier = this.userTier;
      var fetchLeague = league === 'myleague' ? tier : league;
      if (fetchLeague) {
        var recs;
        if (currentWeek) {
          recs = this.items;
        } else if (this.lastWeekResults) {
          recs = this.lastWeekResults[league];
        }

        // if no friends consider 100 friends for top prizes
        var total = recs && recs.length > 0 ? recs.length : 100;
        var result = agarApp.API.getLeaguesPrizes(fetchLeague, total);
        this.prizes = result;
      }
    },
    // Getting Ahead
    testPassUpdate: function testPassUpdate() {
      this.close();
      agarApp.API.testPassUpdate();
    },
    testWinner: function testWinner() {
      this.winnersLeague = 'league';
      this.winnersTier = 'fox';
      this.winnersPrizeAmount = 1;
      this.winnersPrizeType = 'coin';
      this.winnersAvatarUrl = '';
      this.winnersRank = 1;
      this.winnersTrophies = 1;
      this.winnersCountry = 'PT';
      this.showWinner = true;
      this.showMainMenu = false;
    },
    listenUserPassUpdates: function listenUserPassUpdates(update) {
      var self = this;

      // Store in memory if has highest priority according to: World->Country->League->Friends
      self.passUpdates.push(update);
      self.passUpdates.sort(function (a, b) {
        // Friends (4) should be last
        return a.leagueType % 4 - b.leagueType % 4;
      });
      var lastUpdate = self.passUpdates.pop();
      var topPlayer = lastUpdate.playerThatPassed;
      // var bottomPlayer = lastUpdate.playerThatWasPassed;

      // Check if user got ahead of other player
      if (topPlayer.userId == agarApp.API.getUserId()) {
        // Dialog
        // console.log("test: user getting ahead in league", update.leagueType);
        // Request to open dialog (Haxe)
        this.handleGettingAheadDialog(lastUpdate);
      } else {
        // Notification!
        // Request notification
        this.handleGettingAheadNotification(lastUpdate);
      }
    },
    handleGettingAheadDialog: function handleGettingAheadDialog(update) {
      var self = this;
      agarApp.API.openPassUpdateDialog(update.leagueType, update.playerThatPassed, update.playerThatWasPassed,
      // Open Dialog
      function (leagueType, topPlayer, bottomPlayer, dialog) {
        /* console.log("test: showing getting ahead in league",
        leagueType, this.passLeague); */

        // highlight top player
        topPlayer.active = true;
        var pass = self.getLeagueByType(leagueType, topPlayer);
        self.passLeague = pass;
        self.passUsers = [topPlayer, bottomPlayer];
        setTimeout(function () {
          self.showGettingAhead = true;
          self.showMainMenu = false;
          self.showWindow();
        }, 500);
        agarApp.API.playSound('sfxLeaguesPopupsIn');
        setTimeout(function () {
          agarApp.API.playSound('sfxLeaguesUserPassed');
        }, 1000);
        setTimeout(function () {
          agarApp.API.playParticleAnimation('particle/LeaguesGettingAhead.plist', 400, 500);
        }, 1500);
        setTimeout(function () {
          agarApp.API.hideCanvas();
        }, 2500);

        // listen for close
        self.$once('gettingahead_close', function () {
          dialog.close();
        });
      }, function /* dialog */
      () {
        // Close Dialog
        self.showGettingAhead = false;
        self.close();
        self.$off('gettingahead_close');
      });
    },
    handleGettingAheadNotification: function handleGettingAheadNotification(update) {
      var topPlayer = update.playerThatPassed;
      // var bottomPlayer = update.playerThatWasPassed;

      // Check if is facebook friend
      var isFriend = agarApp.API.isUserFriend(topPlayer.userId);
      // If is friend show complete name, otherwise only first name
      var firstName = topPlayer.displayName.split(' ')[0];
      var displayName = isFriend ? topPlayer.displayName : firstName;
      // Obtain notification message according to league
      var body = this.getNotificationBody(update.leagueType);
      var title = 'Agar.io';
      var message = body.replace('~name~;', displayName);
      agarApp.notifications.sendNotification(title, message);
    },
    getNotificationBody: function getNotificationBody(leagueType) {
      var body;
      switch (leagueType) {
        case 1:
          // world
          body = agarApp.i18n.get('world_leaderboard_notification_body');
          break;
        case 2:
          // Country
          body = agarApp.i18n.get('country_leaderboard_notification_body');
          break;
        case 3:
          // League
          body = agarApp.i18n.get('league_leaderboard_notification_body');
          break;
        case 4:
          // Friends
          body = agarApp.i18n.get('friend_leaderboard_notification_body');
          break;
        default:
      }
      return body;
    },
    getLeagueByType: function getLeagueByType(type, user) {
      switch (type) {
        case 1:
          return 'myleague ' + user.leagueName;
        case 2:
          return 'country ' + user.countryCode;
        case 3:
          return 'world';
        case 4:
          return 'friends';
        default:
          return null;
      }
    },
    checkReset: function checkReset() {
      if (agarApp.API.checkLeaguesResetTime()) {
        // If reset has happened, lets schedule notification
        agarApp.API.scheduleLeaguesResetNotification().then(function () {
          var title = 'Agar.io';
          var id = 'notification_reset_leagues';
          var description = agarApp.i18n.get(id);
          agarApp.notifications.sendNotification(title, description);
        });
      }
    },
    parseStats: function parseStats(result) {
      var avgMass = 0;
      if (result.gamesPlayed > 0) {
        avgMass = parseInt(result.allTimeScore.low / result.gamesPlayed);
      }
      var time = Math.floor(result.longestTimeAlive / 60) + 'm ' + result.longestTimeAlive % 60 + 's';
      var cells = result.mostCellsEaten;
      return [{
        text: 'Total games played',
        value: result.gamesPlayed
      }, {
        text: 'Total mass consumed',
        value: result.allTimeScore.low
      }, {
        text: 'Average mass reached',
        value: avgMass
      }, {
        text: 'Highest mass ever',
        value: result.highestMass
      }, {
        text: 'Longest survival time ever',
        value: time
      }, {
        text: 'Total player cells eaten',
        value: cells
      }];
    },
    updateResetTime: function updateResetTime() {
      var secs = agarApp.API.getLeaguesResetTime();
      if (secs < 0) {
        secs = 0;
      }
      var d = new Date(1970, 0, 1); // Epoch
      d.setSeconds(secs);
      var ret = '';
      if (d.getDate() > 1) {
        ret = d.getDate() - 1 + 'd ';
        ret += d.getHours() + 'h';
      } else if (d.getHours() > 0) {
        ret = d.getHours() + 'h ';
        ret += d.getMinutes() + 'm';
      } else {
        ret = d.getMinutes() + 'm ';
        ret += d.getSeconds() + 's';
      }
      this.leagueResetTime = ret;
    }
  },
  computed: {
    countryIconClass: function countryIconClass() {
      var country = this.userCountryCode;
      if (country === 'none') {
        country = 'DEFAULT';
      }
      return 'flag_' + country + ' sprite-flagsLeagues leagues-country-flag';
    },
    leagueTab: function leagueTab() {
      return agarApp.i18n.get('leagues_myleague_tab');
    },
    friendsTab: function friendsTab() {
      return agarApp.i18n.get('leagues_friends_tab');
    },
    countryTab: function countryTab() {
      return agarApp.i18n.get('leagues_country_tab');
    },
    worldTab: function worldTab() {
      return agarApp.i18n.get('leagues_world_tab');
    }
  },
  watch: {
    userLevel: function userLevel(val /* , old*/) {
      agarApp.API.updateUserTier(val);
    }
  }
};

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Header = _interopRequireDefault(__webpack_require__(55));
var _Prizes = _interopRequireDefault(__webpack_require__(56));
var _Table = _interopRequireDefault(__webpack_require__(47));
var _MyLeagueInfo = _interopRequireDefault(__webpack_require__(507));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'my-league',
  props: ['user', 'league', 'tier', 'country', 'items', 'lastWeekResults', 'prizes', 'time', 'tiers'],
  data: function data() {
    return {
      title: 'My League',
      showHelp: false,
      showPrizes: false
    };
  },
  components: {
    'leagueheader': _Header["default"],
    'datatable': _Table["default"],
    'prizes': _Prizes["default"],
    'help': _MyLeagueInfo["default"]
    // 'last': LastResults
  },
  mounted: function mounted() {
    var self = this;
    this.$on('help_close', function () {
      self.showHelp = false;
    });
    this.$on('help_open', function () {
      self.showHelp = true;
    });
    this.$on('results_open', function () {
      // request data!
      self.$parent.$emit('request_lastweekresults', self.league);
    });
    this.$on('prizes_open', function () {
      self.showPrizes = true;
    });
    this.$on('prizes_close', function () {
      self.showPrizes = false;
    });
    this.$on('show_profile', function (data) {
      self.$parent.$emit('show_profile', data);
    });
  },
  methods: {
    getPrize: function getPrize(index) {
      if (this.prizes && this.prizes.length > index) {
        return this.prizes[index].price;
      } else {
        return null;
      }
    }
  },
  computed: {
    prize1: function prize1() {
      return this.getPrize(0);
    },
    prize2: function prize2() {
      return this.getPrize(1);
    },
    prize3: function prize3() {
      return this.getPrize(2);
    },
    prizeCurrency: function prizeCurrency() {
      if (this.prizes && this.prizes.length > 0) {
        return this.prizes[0].currency;
      } else {
        return null;
      }
    },
    i18n: function i18n() {
      return window.agarApp.i18n;
    }
  }
};

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'Header',
  mounted: function mounted() {},
  props: ['league', 'tier', 'country', 'iconClass', 'timer', 'prize1', 'prize2', 'prize3', 'prizeCurrency', 'i18n'],
  data: function data() {
    return {};
  },
  methods: {
    more: function more(/* e */
    ) {
      this.$parent.$emit('prizes_open');
    },
    result: function result(/* e */
    ) {
      this.$parent.$emit('results_open');
    },
    help: function help(/* e */
    ) {
      this.$parent.$emit('help_open');
    }
  },
  computed: {
    leagueName: function leagueName() {
      if (this.league === 'myleague') {
        if (this.tier === null) {
          return '';
        }
        return this.tier + ' League';
      } else {
        return this.league;
      }
    },
    leagueIconClass: function leagueIconClass() {
      if (this.league == 'myleague' && this.tier) {
        return 'leaguestar-' + this.tier.toLowerCase() + ' sprite star';
      } else if (this.league == 'friends') {
        return 'icon-friends sprite friendIcon';
      } else if (this.league == 'country') {
        var flag = this.country;
        if (flag === 'none') {
          flag = 'DEFAULT';
        }
        return 'flag_' + flag + ' sprite-flagsLeagues countryIcon';
      } else if (this.league == 'world') {
        return 'icon-world sprite friendIcon';
      } else return '';
    },
    morePrizesLabel: function morePrizesLabel() {
      return this.i18n.get('leagues_more_prizes_button');
    },
    lastWeekResultsLabel: function lastWeekResultsLabel() {
      return this.i18n.get('leagues_last_week_results_button');
    },
    endsInLabel: function endsInLabel() {
      return this.i18n.get('leagues_ends_in').replace('%@', '');
    }
  }
};

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['league', 'tier', 'prizes', 'country'],
  mounted: function mounted() {},
  data: function data() {
    return {};
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('prizes_close');
    },
    getFontSize: function getFontSize(index) {
      switch (index) {
        case 0:
          return '32px';
        case 1:
          return '24px';
        default:
          return '24px';
      }
    }
  },
  computed: {
    titleLabel: function titleLabel() {
      if (this.league == 'myleague') {
        return agarApp.i18n.get('league_' + this.tier.toLowerCase());
      } else {
        return agarApp.i18n.get('league_' + this.league);
      }
    },
    leagueIconClass: function leagueIconClass() {
      if (this.league == 'myleague' && this.tier) {
        return 'leaguestar-' + this.tier.toLowerCase() + ' sprite star';
      } else if (this.league == 'country') {
        var flag = this.country;
        if (flag === 'none') {
          flag = 'DEFAULT';
        }
        return 'flag_' + flag + ' sprite-flagsLeagues flag';
      } else if (this.league == 'friends') {
        return 'icon-' + this.league + ' sprite friends';
      } else if (this.league == 'world') {
        return 'icon-' + this.league + ' sprite world';
      } else {
        return null;
      }
    }
  }
};

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'Table',
  props: ['i18n', 'items', 'user', 'friends', 'showInvitable', 'areFriendsPlaying', 'friendsHaveTrophies', 'hasInvitable'],
  data: function data() {
    return {
      msg: 'Leaderboard Entry',
      showFB: false,
      timeout: 0,
      maxTimeout: 3,
      interval: null
    };
  },
  mounted: function mounted() {
    var _this = this;
    this.interval = setInterval(function () {
      _this.timeout++;
      if (_this.timeout >= _this.maxTimeout) {
        clearTimeout(_this.interval);
      }
    }, 1000);
  },
  methods: {
    /* onScroll: function() {
        let self = this;
        let pos = Math.min(Math.round((($('#leagueTable').scrollTop() + $('#leagueTable').outerHeight() * 0.5)) /
            $('#leagueTable div').outerHeight()), 300);
        pos = Math.max(0, pos);
         let margin = 20;
        let min = Math.max(0, pos - margin);
        let max = Math.min(pos + margin, 300);
        let range = $('#leagueTable div').slice(min, max);
         // Show hide elements
        range.each(function() {
            let row = $(this);
            self.changeRowVisibility(row);
        });
    }, */

    rankIconClass: function rankIconClass(place) {
      if (place == 1) return 'leagueplace-gold sprite icon';else if (place == 2) return 'leagueplace-silver sprite icon';else if (place == 3) return 'leagueplace-bronze sprite icon';else return 'leagueplace-others sprite icon other';
    },
    leagueIconClass: function leagueIconClass(league) {
      return 'leaguestar-' + league.toLowerCase() + ' sprite icon';
    },
    flagIconClass: function flagIconClass(country) {
      if (country === 'none') {
        country = 'DEFAULT';
      }
      return 'flag_' + country + ' sprite-flagsLeagues icon';
    },
    isCurrentUser: function isCurrentUser(user) {
      return this.user && this.user.id == user.userId;
    },
    /* changeRowVisibility: function(row) {
        if (this.isElementVisible(row)) {
            row.children().attr('src', 'img/partymode-menu-icon.png');
        } else {
            row.children().attr('src', '');
        }
    },
     isElementVisible: function(row) {
        let elementTop = row.offset().top;
        let elementBottom = elementTop + row.outerHeight();
        let viewportTop = $('#leagueTable').offset().top;
        let viewportBottom = viewportTop + $('#leagueTable').height();
        return elementBottom > viewportTop && elementTop < viewportBottom;
    }, */

    showProfile: function showProfile(data) {
      this.$parent.$emit('show_profile', data);
    },
    showInviteFriends: function showInviteFriends(index) {
      return this.friends && (this.items.length == 0 || index == this.items.length - 1 && this.items.length < 10 || index > 0 && index % 10 == 0) && this.hasInvitable;
    },
    inviteFriends: function inviteFriends() {
      this.showFB = true;
      var self = this;
      window.FB.ui({
        method: 'apprequests',
        title: window.agarApp.i18n.get('fb_friends_invite_selector_title'),
        message: window.agarApp.i18n.get('retention_group_notification_summary'),
        data: 'invite'
      }, function () {
        self.showFB = false;
      });
    },
    bridgePosition: function bridgePosition(index) {
      // current position is more then 1 position ahead then previous
      return index > 0 && this.items[index].rank > this.items[index - 1].rank + 1;
    },
    getFontSize: function getFontSize(value) {
      var length = value.toString().length;
      length = length > 5 ? length - 5 : 0;
      return {
        'font-size': 35 - length * 5 + 'px',
        'margin-top': length * 5 + 'px'
      };
    }
  },
  computed: {
    orderedItems: function orderedItems() {
      if (this.items == null) {
        return [];
      }
      var orderedItems = this.items.concat();
      orderedItems.sort(function (a, b) {
        if (a.rank < b.rank) {
          return -1;
        }
        if (a.rank > b.rank) {
          return 1;
        }
        return 0;
      });
      return orderedItems;
    },
    rankHeaderLabel: function rankHeaderLabel() {
      return this.i18n.get('leagues_player_rank');
    },
    nameHeaderLabel: function nameHeaderLabel() {
      return this.i18n.get('leagues_player_name');
    },
    winningsHeaderLabel: function winningsHeaderLabel() {
      return this.i18n.get('leagues_player_weekly_winnings');
    },
    inviteFriendsLabel: function inviteFriendsLabel() {
      return this.i18n.get('invite_more_friends_label');
    },
    inviteFriendsButton: function inviteFriendsButton() {
      return this.i18n.get('invite_friends_button');
    },
    hasTrophies: function hasTrophies() {
      var _this2 = this;
      if (this.items) {
        if (this.items.length == 0 || this.user == null) {
          return !this.friends;
        } else {
          var find = this.items.filter(function (item) {
            return item.userId == _this2.user.id;
          });
          return !this.friends || find.length > 0;
        }
      }
      // wait for results
      return true;
    },
    messageLabel: function messageLabel() {
      var token = '';
      if (this.orderedItems.length === 0) {
        token = 'friends_tab_no_invitable_friends_have_winnings';
      } else if (!this.areFriendsPlaying) {
        token = 'friends_tab_no_friends_play';
      } else if (!this.friendsHaveTrophies) {
        token = 'friends_tab_no_friends_earned_trophies';
      } else if (!this.hasTrophies) {
        token = 'friends_tab_player_has_no_trophies';
      }
      var str = this.i18n.get(token);
      return str.replace('\\n', '<br/>');
    }
  },
  destroyed: function destroyed() {
    clearInterval(this.interval);
  }
};

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _MyLeagueInfoOverview = _interopRequireDefault(__webpack_require__(510));
var _MyLeagueInfoInfo = _interopRequireDefault(__webpack_require__(514));
var _MyLeagueInfoRules = _interopRequireDefault(__webpack_require__(518));
var _MyLeagueInfoTrophies = _interopRequireDefault(__webpack_require__(522));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var selectedbutton = null;
var agarApp = window.agarApp;
function selectButton(btn) {
  unselectButton();
  selectedbutton = btn;
  btn.classList.add('selected');
}
function unselectButton() {
  if (selectedbutton) {
    selectedbutton.classList.remove('selected');
  }
}
var _default = exports["default"] = {
  name: 'app',
  props: ['league', 'tier', 'tiers', 'prizes'],
  data: function data() {
    return {
      currentView: 'overview',
      title: 'Leagues Information'
    };
  },
  mounted: function mounted() {
    selectedbutton = document.querySelector('button.btn-myleague-info.selected');
  },
  components: {
    'overview': _MyLeagueInfoOverview["default"],
    'info': _MyLeagueInfoInfo["default"],
    'rules': _MyLeagueInfoRules["default"],
    'trophies': _MyLeagueInfoTrophies["default"]
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('help_close');
    },
    overview: function overview(event) {
      this.$data.currentView = 'overview';
      selectButton(event.target);
    },
    info: function info(event) {
      this.$data.currentView = 'info';
      selectButton(event.target);
    },
    rules: function rules(event) {
      this.$data.currentView = 'rules';
      selectButton(event.target);
    },
    trophies: function trophies(event) {
      this.$data.currentView = 'trophies';
      selectButton(event.target);
    }
  },
  computed: {
    rulesLabel: function rulesLabel() {
      return agarApp.i18n.get('leagues_info_rules');
    },
    trophiesLabel: function trophiesLabel() {
      return agarApp.i18n.get('leagues_info_trophies');
    },
    infoLabel: function infoLabel() {
      return agarApp.i18n.get('leagues_info_info');
    },
    overviewLabel: function overviewLabel() {
      return agarApp.i18n.get('leagues_info_overview');
    }
  }
};

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Overview',
  props: ['league', 'tier', 'tiers', 'prizes'],
  data: function data() {
    return {
      myleague: null
    };
  },
  methods: {
    getUserLeague: function getUserLeague() {
      if (this.myleague) {
        return this.myleague;
      }
      if (this.league) {
        this.myleague = this.tier.toLowerCase();
      }
      return this.myleague;
    },
    isUser: function isUser(item) {
      if (this.league) {
        return item.leagueName.toLowerCase() == this.getUserLeague();
      } else {
        return false;
      }
    },
    getLeagueClass: function getLeagueClass(item) {
      return 'leaguestar-' + item.leagueName.toLowerCase() + ' sprite star';
    },
    getTopPrice: function getTopPrice(item) {
      var prizes = agarApp.API.getLeaguesPrizes(item.leagueName);
      return prizes[0];
    }
  },
  computed: {
    levelLabel: function levelLabel() {
      return agarApp.i18n.get('leagues_info_level');
    },
    topPrizeLabel: function topPrizeLabel() {
      return agarApp.i18n.get('leagues_info_top_prize') + ': ';
    }
  }
};

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Info',
  data: function data() {
    return {
      title: 'Info',
      line1: agarApp.i18n.get('leagues_info_info_a'),
      line2: agarApp.i18n.get('leagues_info_info_b'),
      line3: agarApp.i18n.get('leagues_info_info_c'),
      line4: agarApp.i18n.get('leagues_info_info_d')
    };
  }
};

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Info',
  data: function data() {
    return {
      title: 'Info',
      line1: agarApp.i18n.get('leaderboard_help_text_a'),
      line2: agarApp.i18n.get('leagues_info_rules_c'),
      line3: agarApp.i18n.get('leagues_info_rules_d'),
      line4: agarApp.i18n.get('leagues_info_rules_e'),
      line5: agarApp.i18n.get('leaderboard_help_text_d')
    };
  }
};

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Trophies',
  data: function data() {
    return {
      line1: agarApp.i18n.get('leagues_info_trophies_a'),
      line2: agarApp.i18n.get('leagues_info_trophies_b')
    };
  }
};

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Header = _interopRequireDefault(__webpack_require__(55));
var _Table = _interopRequireDefault(__webpack_require__(47));
var _Prizes = _interopRequireDefault(__webpack_require__(56));
var _FriendsHelp = _interopRequireDefault(__webpack_require__(529));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'Friends',
  props: ['user', 'league', 'tier', 'items', 'lastWeekResults', 'prizes', 'time', 'tiers'],
  data: function data() {
    return {
      showPrizes: null,
      showHelp: null,
      showInvitable: true,
      friends: [],
      areFriendsPlaying: true,
      friendsHaveTrophies: true,
      totalFriends: null,
      invitableItems: null
    };
  },
  components: {
    'leagueheader': _Header["default"],
    'datatable': _Table["default"],
    'prizes': _Prizes["default"],
    'help': _FriendsHelp["default"]
  },
  mounted: function mounted() {
    var _this = this;
    window.FB.api('me/friends?fields=picture{url},name,id&limit=5000', 'GET', null, function (result) {
      _this.totalFriends = result.summary.total_count;
      _this.friends = [];
      for (var i = 0; i < result.data.length; i++) {
        var obj = {};
        obj.name = result.data[i].name;
        obj.picture = result.data[i].picture.data.url;
        obj.id = result.data[i].id;
        obj.active = i < 50;
        _this.friends.push(obj);
      }
      _this.areFriendsPlaying = _this.totalFriends > 0;
      if (_this.shouldShowInvitable()) {
        // Replace items with invitable friends
        _this.invitableItems = [];
        for (var _i = 0; _i < _this.friends.length; _i++) {
          var item = {
            displayName: _this.friends[_i].name,
            avatarUrl: _this.friends[_i].picture,
            countryCode: '',
            leagueName: '',
            level: '',
            rank: _i,
            realm: '',
            realmId: '',
            trophies: '',
            userId: _this.friends[_i].id
          };
          _this.invitableItems.push(item);
        }
        _this.showInvitable = true;
        return;
      }
      _this.showInvitable = false;
    });
    this.$on('help_close', function () {
      _this.showHelp = false;
    });
    this.$on('help_open', function () {
      _this.showHelp = true;
    });
    this.$on('prizes_open', function () {
      _this.showPrizes = true;
    });
    this.$on('prizes_close', function () {
      _this.showPrizes = false;
    });
    this.$on('show_profile', function (data) {
      _this.$parent.$emit('show_profile', data);
    });
    this.$on('results_open', function () {
      // request data!
      _this.$parent.$emit('request_lastweekresults', _this.league);
    });
  },
  methods: {
    getPrize: function getPrize(index) {
      if (this.prizes && this.prizes.length > index) {
        return this.prizes[index].price;
      } else {
        return null;
      }
    },
    shouldShowInvitable: function shouldShowInvitable() {
      // Checks if user has friends playing and if they have earned trophies. If not, display invitable friends
      if (this.items.length === 0 || this.items.length === 1 && this.items[0].userId === this.user.id) {
        // No friends or only you on the table
        this.friendsHaveTrophies = false;
      }
      return !this.friendsHaveTrophies || !this.areFriendsPlaying;
    }
  },
  computed: {
    prize1: function prize1() {
      return this.getPrize(0);
    },
    prize2: function prize2() {
      return this.getPrize(1);
    },
    prize3: function prize3() {
      return this.getPrize(2);
    },
    prizeCurrency: function prizeCurrency() {
      if (this.prizes && this.prizes.length > 0) {
        return this.prizes[0].currency;
      } else {
        return null;
      }
    },
    listItems: function listItems() {
      return this.showInvitable ? this.invitableItems : this.items;
    },
    i18n: function i18n() {
      return window.agarApp.i18n;
    }
  }
};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _FriendsHelpRules = _interopRequireDefault(__webpack_require__(532));
var _CountryWorldHelpTrophies = _interopRequireDefault(__webpack_require__(89));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var selectedbutton = null;
var agarApp = window.agarApp;
function selectButton(btn) {
  unselectButton();
  selectedbutton = btn;
  btn.classList.add('selected');
}
function unselectButton() {
  if (selectedbutton) {
    selectedbutton.classList.remove('selected');
  }
}
var _default = exports["default"] = {
  name: 'app',
  data: function data() {
    return {
      currentView: 'rules',
      title: 'Friends Information'
    };
  },
  mounted: function mounted() {
    selectedbutton = document.querySelector('button.btn-friends-info.selected');
  },
  components: {
    'rules': _FriendsHelpRules["default"],
    'trophies': _CountryWorldHelpTrophies["default"]
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('help_close');
    },
    rules: function rules(event) {
      this.$data.currentView = 'rules';
      selectButton(event.target);
    },
    trophies: function trophies(event) {
      this.$data.currentView = 'trophies';
      selectButton(event.target);
    }
  },
  computed: {
    rulesLabel: function rulesLabel() {
      return agarApp.i18n.get('leagues_info_rules');
    },
    trophiesLabel: function trophiesLabel() {
      return agarApp.i18n.get('leagues_info_trophies');
    }
  }
};

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Rules',
  data: function data() {
    return {
      line1: agarApp.i18n.get('leaderboard_help_text_a'),
      line2: agarApp.i18n.get('leaderboard_help_text_c'),
      line3: agarApp.i18n.get('leaderboard_help_text_d'),
      line4: agarApp.i18n.get('leaderboard_help_text_e')
    };
  }
};

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Trophies',
  data: function data() {
    return {
      line1: agarApp.i18n.get('leagues_info_trophies_a'),
      line2: agarApp.i18n.get('leagues_info_trophies_b')
    };
  }
};

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Header = _interopRequireDefault(__webpack_require__(55));
var _Table = _interopRequireDefault(__webpack_require__(47));
var _Prizes = _interopRequireDefault(__webpack_require__(56));
var _CountryHelp = _interopRequireDefault(__webpack_require__(542));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'country',
  props: ['user', 'league', 'tier', 'country', 'items', 'lastWeekResults', 'prizes', 'time', 'tiers'],
  data: function data() {
    return {
      showPrizes: null,
      showHelp: null
    };
  },
  components: {
    'leagueheader': _Header["default"],
    'datatable': _Table["default"],
    'prizes': _Prizes["default"],
    'help': _CountryHelp["default"]
  },
  mounted: function mounted() {
    var self = this;
    this.$on('help_close', function () {
      self.showHelp = false;
    });
    this.$on('help_open', function () {
      self.showHelp = true;
    });
    this.$on('prizes_open', function () {
      self.showPrizes = true;
    });
    this.$on('prizes_close', function () {
      self.showPrizes = false;
    });
    this.$on('show_profile', function (data) {
      self.$parent.$emit('show_profile', data);
    });
    this.$on('results_open', function () {
      // request data!
      self.$parent.$emit('request_lastweekresults', self.league);
    });
  },
  methods: {
    getPrize: function getPrize(index) {
      if (this.$props.prizes) {
        return this.$props.prizes[index].price;
      }
      return null;
    }
  },
  computed: {
    prize1: function prize1() {
      return this.getPrize(0);
    },
    prize2: function prize2() {
      return this.getPrize(1);
    },
    prize3: function prize3() {
      return this.getPrize(2);
    },
    prizeCurrency: function prizeCurrency() {
      if (this.prizes) {
        return this.prizes[0].currency;
      }
      return null;
    },
    i18n: function i18n() {
      return window.agarApp.i18n;
    }
  }
};

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _CountryWorldHelpRules = _interopRequireDefault(__webpack_require__(206));
var _CountryWorldHelpTrophies = _interopRequireDefault(__webpack_require__(89));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var selectedbutton = null;
var agarApp = window.agarApp;
function selectButton(btn) {
  unselectButton();
  selectedbutton = btn;
  btn.classList.add('selected');
}
function unselectButton() {
  if (selectedbutton) {
    selectedbutton.classList.remove('selected');
  }
}
var _default = exports["default"] = {
  name: 'app',
  data: function data() {
    return {
      currentView: 'rules',
      title: 'Country Information'
    };
  },
  mounted: function mounted() {
    selectedbutton = document.querySelector('button.btn-country-info.selected');
  },
  components: {
    'rules': _CountryWorldHelpRules["default"],
    'trophies': _CountryWorldHelpTrophies["default"]
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('help_close');
    },
    rules: function rules(event) {
      this.$data.currentView = 'rules';
      selectButton(event.target);
    },
    trophies: function trophies(event) {
      this.$data.currentView = 'trophies';
      selectButton(event.target);
    }
  },
  computed: {
    rulesLabel: function rulesLabel() {
      return agarApp.i18n.get('leagues_info_rules');
    },
    trophiesLabel: function trophiesLabel() {
      return agarApp.i18n.get('leagues_info_trophies');
    }
  }
};

/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue__ = __webpack_require__(207);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3e41b16e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpRules_vue__ = __webpack_require__(547);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(545)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-3e41b16e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryWorldHelpRules_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3e41b16e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpRules_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3e41b16e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryWorldHelpRules_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/country/CountryWorldHelpRules.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3e41b16e", Component.options)
  } else {
    hotAPI.reload("data-v-3e41b16e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'Rules',
  data: function data() {
    return {
      line1: agarApp.i18n.get('leaderboard_help_text_a'),
      line2: agarApp.i18n.get('leaderboard_help_text_c'),
      line3: agarApp.i18n.get('leaderboard_help_text_d')
    };
  }
};

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _Header = _interopRequireDefault(__webpack_require__(55));
var _Table = _interopRequireDefault(__webpack_require__(47));
var _Prizes = _interopRequireDefault(__webpack_require__(56));
var _WorldHelp = _interopRequireDefault(__webpack_require__(551));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'world',
  props: ['user', 'league', 'tier', 'items', 'lastWeekResults', 'prizes', 'time', 'tiers'],
  data: function data() {
    return {
      showPrizes: null,
      showHelp: null
    };
  },
  components: {
    'leagueheader': _Header["default"],
    'datatable': _Table["default"],
    'prizes': _Prizes["default"],
    'help': _WorldHelp["default"]
  },
  mounted: function mounted() {
    var self = this;
    this.$on('help_close', function () {
      self.showHelp = false;
    });
    this.$on('help_open', function () {
      self.showHelp = true;
    });
    this.$on('prizes_open', function () {
      self.showPrizes = true;
    });
    this.$on('prizes_close', function () {
      self.showPrizes = false;
    });
    this.$on('show_profile', function (data) {
      self.$parent.$emit('show_profile', data);
    });
    this.$on('results_open', function () {
      // request data!
      self.$parent.$emit('request_lastweekresults', self.league);
    });
  },
  methods: {
    getPrize: function getPrize(index) {
      if (this.prizes && this.prizes.length > index) {
        return this.prizes[index].price;
      } else {
        return null;
      }
    }
  },
  computed: {
    prize1: function prize1() {
      return this.getPrize(0);
    },
    prize2: function prize2() {
      return this.getPrize(1);
    },
    prize3: function prize3() {
      return this.getPrize(2);
    },
    prizeCurrency: function prizeCurrency() {
      if (this.prizes) {
        return this.prizes[0].currency;
      } else {
        return null;
      }
    },
    i18n: function i18n() {
      return window.agarApp.i18n;
    }
  }
};

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _CountryWorldHelpRules = _interopRequireDefault(__webpack_require__(206));
var _CountryWorldHelpTrophies = _interopRequireDefault(__webpack_require__(89));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var selectedbutton = null;
function selectButton(btn) {
  unselectButton();
  selectedbutton = btn;
  btn.classList.add('selected');
}
function unselectButton() {
  if (selectedbutton) {
    selectedbutton.classList.remove('selected');
  }
}
var _default = exports["default"] = {
  name: 'app',
  data: function data() {
    return {
      currentView: 'rules',
      title: 'World Information'
    };
  },
  mounted: function mounted() {
    selectedbutton = document.querySelector('button.btn-world-info.selected');
  },
  components: {
    'rules': _CountryWorldHelpRules["default"],
    'trophies': _CountryWorldHelpTrophies["default"]
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('help_close');
    },
    rules: function rules(event) {
      this.$data.currentView = 'rules';
      selectButton(event.target);
    },
    trophies: function trophies(event) {
      this.$data.currentView = 'trophies';
      selectButton(event.target);
    }
  },
  computed: {
    rulesLabel: function rulesLabel() {
      return window.agarApp.i18n.get('leagues_info_rules');
    },
    trophiesLabel: function trophiesLabel() {
      return window.agarApp.i18n.get('leagues_info_trophies');
    }
  }
};

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['league', 'items'],
  data: function data() {
    return {};
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('gettingahead_close');
    },
    rankIconClass: function rankIconClass(place) {
      if (place == 1) return 'leagueplace-gold sprite icon';else if (place == 2) return 'leagueplace-silver sprite icon';else if (place == 3) return 'leagueplace-bronze sprite icon';else return 'leagueplace-others sprite icon other';
    },
    leaguePlayerIconClass: function leaguePlayerIconClass(league) {
      return 'leaguestar-' + league.toLowerCase() + ' sprite icon';
    },
    leaderboardName: function leaderboardName(league) {
      if (league.indexOf('myleague') !== -1) return 'League';else if (league.indexOf('country') !== -1) return 'Country';else if (league.indexOf('friends') !== -1) return 'Friends';else return 'World';
    },
    share: function share(val) {
      this.$parent.$emit('share', {
        type: 'getting_ahead',
        param: this.items[1].displayName,
        twitter: val,
        league: this.league
      });
    }
  },
  computed: {
    titleLabel: function titleLabel() {
      return agarApp.i18n.get('leaderboard_notification_title');
    },
    rankHeaderLabel: function rankHeaderLabel() {
      return agarApp.i18n.get('getting_ahead_rank');
    },
    nameHeaderLabel: function nameHeaderLabel() {
      return agarApp.i18n.get('getting_ahead_name');
    },
    winningsHeaderLabel: function winningsHeaderLabel() {
      return agarApp.i18n.get('getting_ahead_weekly_winnings');
    },
    playerName: function playerName() {
      if (this.items.length > 1) {
        return this.items[1].displayName;
      } else {
        return null;
      }
    },
    leagueName: function leagueName() {
      if (this.league) {
        return this.league.split(' ')[0];
      } else {
        return null;
      }
    },
    leagueIconClass: function leagueIconClass() {
      if (this.league == null) {
        return '';
      }
      var leagues = this.league.split(' ');
      if (leagues[0] == 'myleague') {
        return 'leaguestar-' + leagues[1].toLowerCase() + ' sprite league-icon star';
      } else if (leagues[0] == 'country') {
        var country = leagues[1];
        if (country === 'none') {
          country = 'DEFAULT';
        }
        return 'flag_' + country + ' sprite-flagsLeagues league-icon flag';
      } else {
        return 'icon-' + leagues[0] + ' sprite league-icon other';
      }
    },
    subtitleLabel: function subtitleLabel() {
      return agarApp.i18n.get('getting_ahead_description_a') + ' <strong>' + this.playerName + '</strong> ' + agarApp.i18n.get('getting_ahead_description_c') + ' <strong>' + this.leaderboardName(this.league) + '</strong> ' + 'leaderboard';
    },
    bragLabel: function bragLabel() {
      return agarApp.i18n.get('getting_ahead_brag');
    },
    shareLabel: function shareLabel() {
      return agarApp.i18n.get('page_share');
    },
    isFacebook: function isFacebook() {
      return agarApp.API.isLoggedWithFacebook();
    }
  }
};

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['league', 'tier', 'prizeAmount', 'prizeType', 'avatarUrl', 'rank', 'trophies', 'countryCode'],
  mounted: function mounted() {
    this.winnersLeagueTitle = agarApp.i18n.get('league_winner_' + this.league);
  },
  computed: {
    leaderboardTitle: function leaderboardTitle() {
      switch (this.league) {
        case 'country':
          return agarApp.i18n.get('league_winner_country');
        case 'world':
          return agarApp.i18n.get('league_winner_world');
        case 'league':
          return agarApp.i18n.get('league_winner_my_league');
        case 'friends':
          return agarApp.i18n.get('league_friends_text');
      }
      return null;
    },
    winningsLabel: function winningsLabel() {
      return agarApp.i18n.get('winner_popup_weekly_winnings');
    },
    buttonLabel: function buttonLabel() {
      return agarApp.i18n.get('winner_popup_full_results');
    },
    shareLabel: function shareLabel() {
      return agarApp.i18n.get('page_share');
    },
    isFacebook: function isFacebook() {
      return agarApp.API.isLoggedWithFacebook();
    }
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('winner_close');
    },
    openFullResults: function openFullResults(/* event */
    ) {
      this.$parent.$emit('request_lastweekresults', this.league == 'league' ? 'myleague' : this.league, this.tier);
    },
    prizeLabel: function prizeLabel(rank) {
      var sufix = '';
      if (rank == 1) sufix = 'st';else if (rank == 2) sufix = 'nd';else if (rank == 3) sufix = 'rd';else sufix = 'th';
      return rank + sufix;
    },
    descriptionLabel: function descriptionLabel(rank) {
      var leaderboardName = this.league == 'league' ? this.tier : this.leaderboardTitle;
      leaderboardName = leaderboardName.replace('My ', '');
      var result = agarApp.i18n.get('winner_popup_description_a') + ' <strong>' + this.prizeLabel(rank) + ' ' + agarApp.i18n.get('winner_popup_description_b') + ' </strong>' + agarApp.i18n.get('winner_popup_description_c') + ' <strong>' + leaderboardName + '</strong>';
      if (leaderboardName.indexOf('League') === -1) result = result.concat(' leaderboard');
      return result;
    },
    prizeClass: function prizeClass(prizeType) {
      if (prizeType === 'coin') return 'Coins_L sprite-common icon animate-prize';else return 'DNA_L sprite-common icon animate-prize';
    },
    rankIconClass: function rankIconClass(place) {
      if (place == 1) return 'leagueplace-gold sprite icon animate-rank';else if (place == 2) return 'leagueplace-silver sprite icon animate-rank';else if (place == 3) return 'leagueplace-bronze sprite icon animate-rank';else return 'leagueplace-others sprite icon other';
    },
    leagueIconClass: function leagueIconClass(/* league */
    ) {
      if (this.tier) {
        return 'leaguestar-' + this.tier.toLowerCase() + ' sprite icon star';
      } else {
        return null;
      }
    },
    flagIconClass: function flagIconClass(country) {
      if (country === 'none') {
        country = 'DEFAULT';
      }
      return 'flag_' + country + ' sprite-flagsLeagues icon flag';
    },
    leaderboardIconClass: function leaderboardIconClass(league) {
      if (league === 'world') return 'icon-world sprite icon';else if (league === 'friends') return 'icon-friends sprite icon';else if (league === 'country') return this.flagIconClass(this.countryCode);else return this.leagueIconClass(league);
    },
    share: function share(val) {
      var position = this.rank;
      if (position == 1) position += 'st';else if (position == 2) position += 'nd';else if (position == 3) position += 'rd';else position += 'th';
      this.$parent.$emit('share', {
        type: 'winner',
        param: position,
        twitter: val,
        league: this.league
      });
    }
  }
};

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  data: function data() {
    return {};
  },
  props: ['profilePic', 'displayName', 'userId', 'trophies', 'country', 'league', 'level', 'stats'],
  methods: {
    close: function close() {
      this.$parent.$emit('close_profile');
    },
    flagClass: function flagClass() {
      var flag = this.country;
      if (flag === 'none') {
        flag = 'DEFAULT';
      }
      return 'flag_' + flag + ' sprite-flagsLeagues';
    },
    leagueClass: function leagueClass() {
      return 'rank-star progress-bar-star sprite leaguestar-' + this.league;
    }
  },
  computed: {
    titleLabel: function titleLabel() {
      return window.agarApp.i18n.get('menu_profile_title');
    },
    statsTitleLabel: function statsTitleLabel() {
      var str = window.agarApp.i18n.get('menu_profile_player_stats');
      str = str.substring(0, str.length - 1);
      return str;
    },
    idTitleLabel: function idTitleLabel() {
      return window.agarApp.i18n.get('user_id_display_label');
    },
    trophiesTitleLabel: function trophiesTitleLabel() {
      return window.agarApp.i18n.get('profile_trophies_collected');
    }
  }
};

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _HeaderResults = _interopRequireDefault(__webpack_require__(571));
var _ResultsEmpty = _interopRequireDefault(__webpack_require__(575));
var _Table = _interopRequireDefault(__webpack_require__(47));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'weekly-results',
  props: ['data', 'league', 'tier', 'userId', 'timer', 'prizes'],
  mounted: function mounted() {
    var self = this;
    this.$on('results_close', function () {
      self.$parent.$emit('results_close');
    });
    this.$on('show_profile', function (data) {
      self.$parent.$emit('show_profile', data);
    });
    this.updateList();
  },
  components: {
    'resultsheader': _HeaderResults["default"],
    'resultsempty': _ResultsEmpty["default"],
    'datatable': _Table["default"]
  },
  data: function data() {
    return {
      title: 'Weekly Results',
      leagues: null,
      selectedArea: null,
      playerName: null,
      playerRank: null,
      playerLevel: null,
      playerPhoto: null,
      playerTrophies: null,
      hasResults: false,
      hasLeagueResults: false
    };
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('results_close');
    },
    myleague: function myleague(/* event */
    ) {
      this.selectLeague('myleague');
    },
    friends: function friends(/* event */
    ) {
      this.selectLeague('friends');
    },
    country: function country(/* event */
    ) {
      this.selectLeague('country');
    },
    world: function world(/* event */
    ) {
      this.selectLeague('world');
    },
    selectLeague: function selectLeague(league) {
      this.$parent.$emit('change_league', league);
    },
    updateLeague: function updateLeague(league) {
      this.userLeague = league + ' ' + this.leagues[1];
      this.selectButton(league);
    },
    selectButton: function selectButton(area) {
      if (this.selectedArea == area) {
        return;
      }
      this.selectedArea = area;
    },
    updateList: function updateList() {
      this.leagues = this.league.split(' ');
      var league = this.leagues[0];
      this.updateLeague(league);
      if (this.data) {
        switch (league) {
          case 'myleague':
            this.items = this.data.league;
            break;
          case 'friends':
            this.items = this.data.friends;
            break;
          case 'country':
            this.items = this.data.country;
            break;
          case 'world':
            this.items = this.data.world;
            break;
        }
      }
      if (this.items == null) {
        return;
      }
      if (league == 'friends' && this.items.length == 0) {
        // get details based on other league
        this.getPlayerDetails(this.data.league);
        this.playerRank = ''; // clear rank
      } else {
        this.getPlayerDetails(this.items);
      }
      this.hasResults = this.data && this.data.league.length + this.data.friends.length + this.data.country.length + this.data.world.length > 0;
      this.hasLeagueResults = this.items && this.items.length > 0;
    },
    getPlayerDetails: function getPlayerDetails(items) {
      var _this = this;
      var search = items.filter(function (item) {
        return item.userId == _this.userId;
      });
      if (search && search.length > 0) {
        var user = search[0];
        this.playerRank = user.rank;
        this.playerLevel = user.level;
        this.playerTrophies = user.trophies;
        this.playerPhoto = user.realmInfo.avatarUrl;
        this.playerName = user.displayName;
        this.playerCountry = user.countryCode;
      }
    }
  },
  computed: {
    myleagueSelectedClass: function myleagueSelectedClass() {
      return this.selectedArea == 'myleague' ? 'btn-myleague-selected' : '';
    },
    friendsSelectedClass: function friendsSelectedClass() {
      return this.selectedArea == 'friends' ? 'btn-friends-selected' : '';
    },
    countrySelectedClass: function countrySelectedClass() {
      return this.selectedArea == 'country' ? ' btn-country-selected' : '';
    },
    worldSelectedClass: function worldSelectedClass() {
      return this.selectedArea == 'world' ? 'btn-world-selected' : '';
    },
    countryIconClass: function countryIconClass() {
      var country = this.playerCountry;
      if (country === 'none') {
        country = 'DEFAULT';
      }
      return 'flag_' + country + ' sprite-flagsLeagues leagues-country-flag';
    },
    leagueTab: function leagueTab() {
      return agarApp.i18n.get('leagues_myleague_tab');
    },
    leagueTabLabel: function leagueTabLabel() {
      return agarApp.i18n.get('leagues_myleague_tab');
    },
    friendsTabLabel: function friendsTabLabel() {
      return agarApp.i18n.get('leagues_friends_tab');
    },
    countryTabLabel: function countryTabLabel() {
      return agarApp.i18n.get('leagues_country_tab');
    },
    worldTabLabel: function worldTabLabel() {
      return agarApp.i18n.get('leagues_world_tab');
    },
    isFacebook: function isFacebook() {
      return agarApp.API.isLoggedWithFacebook();
    },
    prize1: function prize1() {
      return this.prizes && this.prizes.length > 0 ? this.prizes[0].price : 0;
    },
    prize2: function prize2() {
      return this.prizes && this.prizes.length > 0 ? this.prizes[1].price : 0;
    },
    prize3: function prize3() {
      return this.prizes && this.prizes.length > 0 ? this.prizes[2].price : 0;
    },
    prizeCurrency: function prizeCurrency() {
      return this.prizes && this.prizes.length > 0 ? this.prizes[0].currency : '';
    },
    playerPrize: function playerPrize() {
      if (this.prizes == null) {
        return null;
      }
      for (var i = 0; i < this.prizes.length; i++) {
        var prize = this.prizes[i];
        if (this.playerRank >= prize.positionFrom && this.playerRank <= prize.positionTo) {
          return prize.price;
        }
      }
      return null;
    },
    noFriendsLabel: function noFriendsLabel() {
      return agarApp.i18n.get('friends_tab_no_invitable_friends_have_winnings');
    },
    i18n: function i18n() {
      return window.agarApp.i18n;
    }
  },
  watch: {
    data: function data(/* val, old */
    ) {
      this.updateList();
    },
    league: function league(/* val, old */
    ) {
      this.updateList();
    }
  }
};

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  name: 'Header',
  mounted: function mounted() {},
  props: ['league', 'tier', 'userRank', 'userName', 'userPhoto', 'userLevel', 'userPrize', 'userTrophies', 'userCountry', 'timer', 'prize1', 'prize2', 'prize3', 'prizeCurrency', 'topPrizeClass'],
  data: function data() {
    return {};
  },
  computed: {
    leagueIconClass: function leagueIconClass() {
      if (this.tier) {
        return 'leaguestar-' + this.tier.toLowerCase() + ' sprite star ' + this.league;
      } else {
        return null;
      }
    },
    boardIconClass: function boardIconClass() {
      if (this.league == 'myleague' && this.tier) {
        return 'leaguestar-' + this.tier.toLowerCase() + ' sprite icon-star';
      } else if (this.league == 'friends') {
        return 'icon-friends sprite icon-friend';
      } else if (this.league == 'country') {
        var country = this.userCountry;
        if (country === 'none') {
          country = 'DEFAULT';
        }
        return 'flag_' + country + ' sprite-flagsLeagues icon-flag';
      } else if (this.league == 'world') {
        return 'icon-world sprite icon-friend';
      } else return '';
    }
  },
  methods: {
    getFontSize: function getFontSize(value) {
      var length = value ? value.toString().length : 0;
      length = length > 3 ? length - 3 : 0;
      return {
        'font-size': 35 - length * 5 + 'px'
      };
    }
  }
};

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('results_close');
    }
  },
  computed: {
    titleLabel: function titleLabel() {
      return agarApp.i18n.get('leagues_weekly_results');
    },
    messageLabel: function messageLabel() {
      return agarApp.i18n.get('leagues_web_no_results_content');
    }
  }
};

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['league', 'tier'],
  mounted: function mounted() {
    var anim = new window.SpineAnimation('LeagueStarAnimation-' + this.tier.toCamelCase(), 320, 150, true, false);
    var animCanvas = anim.getCanvas();
    var ctx = animCanvas.getContext('2d');
    ctx.scale(0.6, 0.6);
    anim.setOffset(260, 245);
    document.getElementsByClassName('league-star-animation')[0].appendChild(animCanvas);
    anim.play('animation', false, false);
  },
  methods: {
    close: function close(/* event */
    ) {
      this.$parent.$emit('promotion_close');
    },
    share: function share(val) {
      this.$parent.$emit('share', {
        type: 'promotion',
        param: this.leagueName,
        twitter: val,
        league: this.league
      });
    }
  },
  computed: {
    leagueIconClass: function leagueIconClass() {
      return 'leaguestar-' + this.tier.toLowerCase() + ' sprite star';
    },
    congratulationsLabel: function congratulationsLabel() {
      return agarApp.i18n.get('league_promotion_title');
    },
    passedLabel: function passedLabel() {
      return agarApp.i18n.get('league_promotion_inner_title');
    },
    shareLabel: function shareLabel() {
      return agarApp.i18n.get('page_share');
    },
    leagueName: function leagueName() {
      return this.tier ? this.tier.toCamelCase() + ' League' : null;
    },
    isFacebook: function isFacebook() {
      return agarApp.API.isLoggedWithFacebook();
    }
  }
};

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  props: ['name', 'amount', 'multiple'],
  methods: {
    close: function close() {
      this.$parent.$emit('close_invitation_rewards');
    },
    inviteFriends: function inviteFriends() {
      this.showFB = true;
      var self = this;
      window.FB.ui({
        method: 'apprequests',
        title: agarApp.i18n.get('fb_friends_invite_selector_title'),
        message: agarApp.i18n.get('retention_group_notification_summary'),
        data: 'invite'
      }, function () {
        self.showFB = false;
      });
    }
  },
  computed: {
    titleLabel: function titleLabel() {
      return agarApp.i18n.get('party_invite_accepted_reward_title');
    },
    subtitleLabel: function subtitleLabel() {
      var subtitle = '';
      if (this.multiple) {
        subtitle = agarApp.i18n.get('multiple_invites_accepted_reward_subtitle');
      } else {
        subtitle = agarApp.i18n.get('party_invite_accepted_reward_subtitle');
      }
      return subtitle.split('%@')[0] + this.name + subtitle.split('%@')[1];
    },
    descriptionLabel: function descriptionLabel() {
      return agarApp.i18n.get('party_invite_accepted_reward_description');
    },
    amountLabel: function amountLabel() {
      return this.amount;
    },
    buttonLabel: function buttonLabel() {
      return agarApp.i18n.get('party_invite_accepted_reward_button');
    }
  }
};

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _Results = _interopRequireDefault(__webpack_require__(219));
var _utils = _interopRequireDefault(__webpack_require__(26));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* eslint-disable no-useless-escape*/
var BattleState = {
  Init: 0,
  Lobby: 1,
  Starting: 2,
  Start: 3,
  Countdown: 4,
  Shrink: 5,
  Final: 6,
  Over: 7,
  Spectate: 8
};
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  name: 'battle',
  data: function data() {
    return {
      userPosition: 50,
      mass: 100,
      kills: 0,
      otherPositions: [],
      potion: null,
      fullslots: false,
      configurationLoaded: false,
      visible: false,
      login: 'guest',
      battleOver: true,
      battleInProgress: true,
      wasSpectating: false,
      battleState: null
    };
  },
  components: {
    'results': _Results["default"]
  },
  mounted: function mounted() {
    var _this = this;
    window.document.addEventListener('configuration_loaded', function () {
      _this.configurationLoaded = true;
    });
    window.document.addEventListener('login', function () {
      _this.login = agarApp.API.isLoggedWithFacebook() ? 'facebook' : agarApp.API.isLoggedWithGoogle() ? 'google' : 'guest';
    });
    window.document.addEventListener('battleroyale_results_open', function (e) {
      var self = _this;
      if (_this.gameState == _index.GameState.HOME) {
        return;
      }
      setTimeout(function () {
        self.open(e.detail);
      }, 3000);
    });
    window.document.addEventListener('potion_awarded', function (e) {
      if (e.detail && e.detail.fullslots) {
        _this.fullslots = true;
        _this.potion = null;
      } else {
        _this.fullslots = false;
        _this.potion = e.detail;
      }
    });
    window.document.addEventListener('match_state_update', function (e) {
      if (_this.visible) {
        _this.battleInProgress = e.detail.players > 1;
      } else if (e.detail.state == BattleState.Spectate && e.detail.players <= 1 && !_this.gameOver) {
        // Battle is over?
        _this.gameOver = true;
      }
      _this.battleState = e.detail.state;
      var self = _this;
      _this.$on('potion_update', function (e) {
        self.potion = e;
      });
    });
  },
  computed: _objectSpread({}, (0, _vuex.mapGetters)(['gameState'])),
  methods: {
    open: function open(detail) {
      var _this2 = this;
      agarApp.API.openMatchResultsDialog(function (dialog) {
        // open dialog
        _this2.userPosition = detail.userPosition;
        _this2.mass = detail.highestMass;
        _this2.kills = detail.kills;
        _this2.otherPositions = detail.otherPositions;
        _this2.wasSpectating = detail.isSpectating;
        if (_this2.configurationLoaded) {
          _this2.visible = true;
        }
        _this2.$once('match_results_close', function (openMainMenu) {
          _this2.potion = null;
          _this2.fullslots = false;
          _this2.close(openMainMenu);
          dialog.close();
        });
      }, function (dialog) {
        // close dialog
        if (_this2.visible) {
          _this2.close(true);
        }
      });
    },
    close: function close(openMainMenu) {
      this.$off('match_results_close');
      if (!this.visible) {
        return;
      }
      if (openMainMenu == null) openMainMenu = true;
      this.potion = null;
      this.fullslots = false;
      this.visible = false;
      if (openMainMenu) {
        // Home page
        window.document.dispatchEvent(new Event('show_main_menu'));
        agarApp.API.closeTopView();
      }
    }
  }
};

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78a32fed_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Results_vue__ = __webpack_require__(603);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(593)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Results_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78a32fed_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Results_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78a32fed_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Results_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/common/Results.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-78a32fed", Component.options)
  } else {
    hotAPI.reload("data-v-78a32fed", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
var _BattleStats = _interopRequireDefault(__webpack_require__(595));
var _TeamRushStats = _interopRequireDefault(__webpack_require__(599));
var _PotionSlot = _interopRequireDefault(__webpack_require__(180));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  store: _index.store,
  props: ['userPosition', 'mass', 'kills', 'otherPositions', 'potion', 'fullslots', 'login', 'battleInProgress', 'wasSpectating', 'redScore', 'blueScore', 'won'],
  data: function data() {
    return {};
  },
  components: {
    'battle-stats': _BattleStats["default"],
    'teamrush-stats': _TeamRushStats["default"],
    'potion': _PotionSlot["default"]
  },
  mounted: function mounted() {
    var _this = this;
    this.$on('match_results_close', function (openMainMenu) {
      _this.close(openMainMenu);
    });
    var self = this;
    this.$on('potion_update', function (e) {
      self.$parent.$emit('potion_update', e);
    });
  },
  computed: {
    titleText: function titleText() {
      if (this.hasUserWon()) {
        return window.agarApp.i18n.get('battle_results_won');
      } else {
        if (_index.store.state.game.mode === _index.GameMode.BATTLEROYALE) {
          return window.agarApp.i18n.get('battle_results_title');
        } else if (_index.store.state.game.mode === _index.GameMode.TEAMRUSH) {
          return window.agarApp.i18n.get('teams_match_results_title');
        }
      }
    }
  },
  methods: {
    close: function close(event) {
      this.$parent.$emit('match_results_close', event);
    },
    showBattleStats: function showBattleStats() {
      return _index.store.state.game.mode === _index.GameMode.BATTLEROYALE;
    },
    showTeamRushStats: function showTeamRushStats() {
      return _index.store.state.game.mode === _index.GameMode.TEAMRUSH;
    },
    hasUserWon: function hasUserWon() {
      return this.userPosition === 1 && _index.store.state.game.mode === _index.GameMode.BATTLEROYALE || this.won && _index.store.state.game.mode === _index.GameMode.TEAMRUSH;
    },
    canShowPotion: function canShowPotion() {
      return (this.potion || this.checkFullSlots() || this.won) && (_index.store.state.game.mode === _index.GameMode.BATTLEROYALE && !this.wasSpectating || _index.store.state.game.mode === _index.GameMode.TEAMRUSH || this.won) && this.login !== 'guest';
    },
    checkFullSlots: function checkFullSlots() {
      // *This will check full slots on the client, in case server sends wrong info
      var clientCheck = true;
      if (_index.store.state.user.potions.length < 3) {
        clientCheck = false;
      } else {
        for (var i = 0; i < _index.store.state.user.potions.length; i++) {
          if (_index.store.state.user.potions[i] == null) {
            clientCheck = false;
            break;
          }
        }
      }
      return (this.fullslots || clientCheck) && !this.potion && this.won;
    }
  }
};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = __webpack_require__(5);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'stats',
  props: ['userPosition', 'mass', 'kills', 'otherPositions', 'login', 'battleInProgress', 'wasSpectating'],
  data: function data() {
    return {
      items: []
    };
  },
  mounted: function mounted() {
    if (this.wasSpectating) {
      this.items = this.otherPositions.slice(0, 5);
    } else if (this.userPosition > 2) {
      this.items = this.otherPositions.slice(0, 3);
    } else {
      this.items = this.otherPositions.slice(0, 4);
    }
  },
  methods: {
    rankIconClass: function rankIconClass(place) {
      if (place == 1) return 'leagueplace-gold sprite icon';else if (place == 2) return 'leagueplace-silver sprite icon';else if (place == 3) return 'leagueplace-bronze sprite icon';else return 'leagueplace-others sprite icon other';
    },
    getName: function getName(name) {
      return name === '' ? agarApp.i18n.get('page_unnamed_cell') : name;
    },
    share: function share(realm) {
      agarApp.API.socialStory('ss_battleroyaleresults', {
        position: this.userPosition
      }, realm);
    },
    spectate: function spectate() {
      if (this.battleInProgress) {
        this.$parent.$emit('match_results_close', false);
        _index.store.commit('gameUpdate', _index.GameState.SPECTATE);
        agarApp.API.spectate();
        window.core.setFadeout(false);
      }
    }
  },
  computed: {
    positionText: function positionText() {
      return agarApp.i18n.get('battle_results_position');
    },
    massText: function massText() {
      return agarApp.i18n.get('battle_results_mass');
    },
    killsText: function killsText() {
      return agarApp.i18n.get('battle_results_kills');
    },
    shareText: function shareText() {
      return agarApp.i18n.get('page_share');
    },
    spectateText: function spectateText() {
      return agarApp.i18n.get('battle_results_spectate');
    },
    emptyText: function emptyText() {
      return agarApp.i18n.get('battle_results_empty');
    }
  }
};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'stats',
  props: ['redScore', 'blueScore', 'mass', 'kills', 'login'],
  data: function data() {
    return {};
  },
  mounted: function mounted() {},
  methods: {
    getName: function getName(name) {
      return name === '' ? agarApp.i18n.get('page_unnamed_cell') : name;
    },
    share: function share(realm) {
      agarApp.API.socialStory('ss_teamsresults', {
        score: this.mass
      }, realm);
    },
    getPieSegmentStyle: function getPieSegmentStyle(score, color) {
      var a = score > 50 ? '-100%' : '0%';
      var b = score > 50 ? '200%' : '100%';
      var deg = (score > 50 ? 100 - score : 0) / 100 * 360 + 'deg';
      var z = score > 50 ? 1 : 0;
      return 'height: 100%; position: absolute; transform-origin: 50% 100%; width: 100%; ' + '--webkit-clip-path: polygon(' + a + ' ' + a + ', ' + b + ' ' + a + ', ' + b + ' ' + b + ', ' + a + ' ' + b + '); ' + 'clip-path: polygon(' + a + ' ' + a + ', ' + b + ' ' + a + ', ' + b + ' ' + b + ', ' + a + ' ' + b + '); ' + 'transform: translate(0, -50%) rotate(90deg) rotate(' + deg + '); ' + 'z-index: ' + z + '; ' + 'background: ' + color + ';';
    },
    getPieSegmentStyleBefore: function getPieSegmentStyleBefore(score, color, left) {
      var a = score > 50 ? 50 : 0;
      if (this.redScore == this.blueScore) {
        a = left * 50;
      }
      return 'transform-origin: ' + (25 + a) + '% ' + (-75 + a) + '%; ' + 'transform: translate(0, 100%) rotate(90deg); ' + 'background: ' + color + '; ' + 'content: ""; height: 100%; position: absolute; width: 100%;';
    },
    play: function play() {
      window.document.dispatchEvent(new Event('play'));
      this.$parent.$emit('match_results_close', false);
      agarApp.API.playSound('sfxClick');
    }
  },
  computed: {
    massText: function massText() {
      return agarApp.i18n.get('teams_results_mass');
    },
    killsText: function killsText() {
      return agarApp.i18n.get('teams_results_kills');
    },
    shareText: function shareText() {
      return agarApp.i18n.get('page_share');
    },
    winnerText: function winnerText() {
      if (this.redScore > this.blueScore) {
        return agarApp.i18n.get('teams_winner_red');
      } else if (this.redScore < this.blueScore) {
        return agarApp.i18n.get('teams_winner_blue');
      }
      return agarApp.i18n.get('teams_winner_none');
    },
    playAgainText: function playAgainText() {
      return agarApp.i18n.get('teams_play_again');
    }
  }
};

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
var _index = __webpack_require__(5);
var _Results = _interopRequireDefault(__webpack_require__(219));
var _utils = _interopRequireDefault(__webpack_require__(26));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* eslint-disable no-useless-escape*/
var MatchState = {
  Init: 0,
  Lobby: 1,
  Starting: 2,
  Start: 3,
  Countdown: 4,
  Shrink: 5,
  Final: 6,
  Over: 7,
  Spectate: 8
};
var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  name: 'teamrush',
  data: function data() {
    return {
      redScore: 50,
      blueScore: 50,
      mass: 100,
      kills: 0,
      potion: null,
      fullslots: false,
      won: false,
      configurationLoaded: false,
      visible: false,
      login: 'guest',
      matchState: null
    };
  },
  components: {
    'results': _Results["default"]
  },
  mounted: function mounted() {
    var _this = this;
    window.document.addEventListener('configuration_loaded', function () {
      _this.configurationLoaded = true;
    });
    window.document.addEventListener('login', function () {
      _this.login = agarApp.API.isLoggedWithFacebook() ? 'facebook' : agarApp.API.isLoggedWithGoogle() ? 'google' : 'guest';
    });
    window.document.addEventListener('teamrush_results_open', function (e) {
      var self = _this;
      if (_this.gameState == _index.GameState.HOME) {
        return;
      }
      self.open(e.detail);
    });
    window.document.addEventListener('potion_awarded', function (e) {
      if (e.detail && e.detail.fullslots) {
        _this.fullslots = true;
        _this.potion = null;
      } else {
        _this.fullslots = false;
        _this.potion = e.detail;
      }
    });
    window.document.addEventListener('match_state_update', function (e) {
      _this.matchState = e.detail.state;
    });
    var self = this;
    this.$on('potion_update', function (e) {
      self.potion = e;
    });
  },
  computed: _objectSpread({}, (0, _vuex.mapGetters)(['gameState'])),
  methods: {
    open: function open(detail) {
      var _this2 = this;
      agarApp.API.openMatchResultsDialog(function (dialog) {
        // open dialog
        _this2.redScore = detail.redScore * 100;
        _this2.blueScore = detail.blueScore * 100;
        _this2.mass = detail.highestMass;
        _this2.kills = detail.kills;
        _this2.won = detail.won;
        if (_this2.configurationLoaded) {
          _this2.visible = true;
        }
        _this2.$once('match_results_close', function (openMainMenu) {
          _this2.potion = null;
          _this2.fullslots = false;
          _this2.close(openMainMenu);
          dialog.close();
        });
      }, function (dialog) {
        // close dialog
        if (_this2.visible) {
          _this2.close(true);
        }
      });
    },
    close: function close(openMainMenu) {
      this.$off('match_results_close');
      if (!this.visible) {
        return;
      }
      if (openMainMenu == null) openMainMenu = true;
      this.potion = null;
      this.fullslots = false;
      this.visible = false;
      if (openMainMenu) {
        // Home page
        window.document.dispatchEvent(new Event('show_main_menu'));
        agarApp.API.closeTopView();
      }
    }
  }
};

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _SpineAnimation = _interopRequireDefault(__webpack_require__(88));
var _index = __webpack_require__(5);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  store: _index.store,
  props: [],
  data: function data() {
    return {
      visible: false,
      type: '',
      amount: 0,
      name: '',
      assetUrl: '',
      borderColor: '',
      isBoostActive: false,
      boostType: '',
      potionAsset: '',
      errorMessage: '',
      callback: null,
      subtitleLabel: '',
      rewardImage: '',
      rewardLabel: '',
      potionWidth: 260,
      potionHeight: 220,
      potionScale: 0.35
    };
  },
  components: {
    'animation': _SpineAnimation["default"]
  },
  mounted: function mounted() {
    var _this = this;
    window.document.addEventListener('reward_links_response', function (e) {
      _this.open(e);
    });
  },
  computed: {
    titleLabel: function titleLabel() {
      return agarApp.i18n.get('reward_link_success_title');
    },
    buttonLabel: function buttonLabel() {
      if (this.type === 'coin' || this.type === 'dna') {
        return agarApp.i18n.get('reward_link_shop');
      } else if (this.type === 'potion') {
        return agarApp.i18n.get('reward_link_open_potion');
      } else if (this.type === 'boost' && !this.isBoostActive) {
        return agarApp.i18n.get('reward_activate_boost');
      } else {
        return agarApp.i18n.get('reward_link_play');
      }
    },
    noSkinEditorLabel: function noSkinEditorLabel() {
      return agarApp.i18n.get('reward_link_skin_editor_not_available');
    },
    border: function border() {
      return 'border-color: ' + this.borderColor;
    },
    errorTitle: function errorTitle() {
      return agarApp.i18n.get('reward_link_error_title');
    },
    loginButtonLabel: function loginButtonLabel() {
      return agarApp.i18n.get('reward_link_login');
    },
    potionOffsetX: function potionOffsetX() {
      return this.potionWidth * 0.5 / this.potionScale;
    },
    potionOffsetY: function potionOffsetY() {
      return (this.potionHeight * 0.5 + 60) / this.potionScale;
    }
  },
  methods: {
    open: function open(e) {
      var _this2 = this;
      agarApp.API.openRewardLinksDialog(function (dialog) {
        if (!_this2.isGuest()) {
          _this2.type = e.detail.type;
          _this2.callback = e.detail.callback;
          if (_this2.type === 'error') {
            _this2.errorMessage = e.detail.errorMessage;
          } else {
            _this2.amount = e.detail.amount;
            _this2.name = e.detail.name;
            if (_this2.type === 'skin') {
              _this2.assetUrl = e.detail.assetUrl;
              _this2.borderColor = e.detail.borderColor;
            } else if (_this2.type === 'boost') {
              _this2.boostType = e.detail.boostType;
              if (_this2.boostType === 'xp') {
                _this2.isBoostActive = _index.store.state.user.xpBoosts.timer > 0;
              } else {
                _this2.isBoostActive = _index.store.state.user.massBoosts.timer > 0;
              }
            } else if (_this2.type === 'potion') {
              _this2.potionAsset = e.detail.potionAsset;
            }
          }
          _this2.subtitleLabel = agarApp.i18n.get('reward_link_subtitle');
          if (_this2.type === 'coin') {
            _this2.rewardImage = 'sprite-common Coins_L';
          } else if (_this2.type === 'dna') {
            _this2.rewardImage = 'sprite-common DNA_L';
          } else if (_this2.type === 'boost') {
            _this2.rewardImage = 'sprite-main boost ' + _this2.boostType + 'boost-main';
          } else {
            _this2.rewardImage = '';
          }
          if (_this2.type === 'skin' || _this2.type === 'potion') {
            _this2.rewardLabel = _this2.name;
          } else {
            _this2.rewardLabel = _this2.amount + ' ' + _this2.name;
          }
        } else {
          _this2.subtitleLabel = agarApp.i18n.get('reward_link_subtitle_guest');
          _this2.rewardImage = 'sprite-main dailyquest-chestbudle';
          _this2.rewardLabel = agarApp.i18n.get('reward_link_guest');
        }
        _this2.visible = true;
      }, function (dialog) {
        if (_this2.visible) {
          _this2.close();
        }
      });
    },
    close: function close(showMenu) {
      if (!this.visible) {
        return;
      }
      this.visible = false;
      if (showMenu) {
        window.document.dispatchEvent(new Event('show_main_menu'));
      }
      agarApp.API.closeTopView();
      if (this.callback) {
        this.callback();
      }
    },
    onButtonClick: function onButtonClick(event) {
      var showMenu = true;
      if (this.type === 'coin' || this.type === 'dna') {
        agarApp.API.openShop();
      } else if (this.type === 'boost' && this.isBoostActive) {
        this.callback = null; // Ignore boost use because there's already one active
        window.document.dispatchEvent(new Event('play'));
        showMenu = false;
      } else if (this.type === 'boost') {
        this.callback(); // Use boost here instead of when closing
        this.callback = null;
        window.document.dispatchEvent(new Event('play'));
        showMenu = false;
      } else if (this.type !== 'potion') {
        window.document.dispatchEvent(new Event('play'));
        showMenu = false;
      }
      agarApp.API.playSound('sfxClick');
      this.close(showMenu);
    },
    facebookLogin: function facebookLogin() {
      agarApp.API.facebookLogin(function (result) {});
      agarApp.API.playSound('sfxClick');
      this.close();
    },
    googleLogin: function googleLogin() {
      document.dispatchEvent(new Event('google_selected'));
      agarApp.API.playSound('sfxClick');
      this.close();
    },
    isGuest: function isGuest() {
      return agarApp.API.isGuest();
    }
  }
};

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _drawManager = _interopRequireDefault(__webpack_require__(616));
var _storage = _interopRequireDefault(__webpack_require__(53));
var _storageKeys = _interopRequireDefault(__webpack_require__(33));
var _skinEditorColors = __webpack_require__(617);
var _PurchaseCompleteDialog = _interopRequireDefault(__webpack_require__(618));
var _SkinSaveDialog = _interopRequireDefault(__webpack_require__(622));
var _SpineAnimation = _interopRequireDefault(__webpack_require__(88));
var _CounterCircle = _interopRequireDefault(__webpack_require__(87));
var _ConfirmationDialog = _interopRequireDefault(__webpack_require__(626));
var _index = __webpack_require__(5);
var _plist = _interopRequireDefault(__webpack_require__(630));
var _vue = _interopRequireDefault(__webpack_require__(37));
var _upngJs = _interopRequireDefault(__webpack_require__(647));
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var agarApp = window.agarApp;
var _default = exports["default"] = {
  name: 'skin-editor',
  data: function data() {
    this.Colors = _skinEditorColors.Colors;
    this.UPNG = _upngJs["default"];
    return {
      UPNG: this.UPNG,
      visible: false,
      drawApp: null,
      canvas: null,
      isMouseDown: false,
      currentTool: {
        id: '',
        color: null
      },
      currentSize: 20,
      saveInterval: 10000,
      brushSizes: [],
      tools: [{
        id: 'brush',
        color: null
      }, {
        id: 'eraser',
        color: null
      }, {
        id: 'background',
        color: null
      }, {
        id: 'border',
        color: null
      }],
      Colors: this.Colors,
      colors: [{
        id: _skinEditorColors.Colors.GREEN,
        regular: '#69DD00',
        border: '#34B900',
        selected: false
      }, {
        id: _skinEditorColors.Colors.YELLOW,
        regular: '#FFCC00',
        border: '#E69D00',
        selected: false
      }, {
        id: _skinEditorColors.Colors.ORANGE,
        regular: '#FF7E00',
        border: '#E05A00',
        selected: false
      }, {
        id: _skinEditorColors.Colors.RED,
        regular: '#FF3D3D',
        border: '#D90909',
        selected: false
      }, {
        id: _skinEditorColors.Colors.PURPLE,
        regular: '#C000FF',
        border: '#9500C6',
        selected: false
      }, {
        id: _skinEditorColors.Colors.PINK,
        regular: '#FF3ED4',
        border: '#FF05B0',
        selected: false
      }, {
        id: _skinEditorColors.Colors.BLUE,
        regular: '#0078FA',
        border: '#0063D3',
        selected: false
      }, {
        id: _skinEditorColors.Colors.CYAN,
        regular: '#00DEFA',
        border: '#00B7DE',
        selected: false
      }, {
        id: _skinEditorColors.Colors.WHITE,
        regular: '#FFF',
        border: '#C3C3C3',
        selected: false
      }, {
        id: _skinEditorColors.Colors.BLACK,
        regular: '#2A2A2A',
        border: '#C3C3C3',
        selected: false
      }],
      showTutorial: false,
      currentTutorialPage: 0,
      lastTutorialPage: 6,
      canUndo: false,
      canRedo: false,
      canClear: false,
      autoSave: null,
      isHandVisible: false,
      hasShowedHand: false,
      showHandTimeout: false,
      clearConfirmationVisible: false,
      leaveConfirmationVisible: false,
      bus: new _vue["default"](),
      skinTokenId: '1_create_skin_token',
      skinVipTokenId: '1_create_skin_token_for_vip_weekly'
    };
  },
  components: {
    'PurchaseCompleteDialog': _PurchaseCompleteDialog["default"],
    'SkinSaveDialog': _SkinSaveDialog["default"],
    'animation': _SpineAnimation["default"],
    'counter': _CounterCircle["default"],
    'confirmation': _ConfirmationDialog["default"]
  },
  mounted: function mounted() {
    var _this = this;
    window.document.addEventListener('open_skin_editor', function (e) {
      _this.open(e);
    });
    window.document.addEventListener('close_skin_editor', function (e) {
      _this.close(e);
    });
    window.document.addEventListener('clear_skin_editor', function (e) {
      _this.clear();
    });
  },
  computed: {
    customSkinTokensTotalCount: function customSkinTokensTotalCount() {
      var isVIP = window.agarApp.API && window.agarApp.API.getUserInfo().hasVIPSubscription;
      var vipTokens = isVIP ? _index.store.state.user.customSkinVipTokensCount : 0;
      return _index.store.state.user.customSkinTokensCount + vipTokens;
    },
    customSkinTokensCount: function customSkinTokensCount() {
      return _index.store.state.user.customSkinTokensCount;
    },
    customSkinVipTokensCount: function customSkinVipTokensCount() {
      return _index.store.state.user.customSkinVipTokensCount;
    }
  },
  methods: {
    getConfigValue: function getConfigValue(key) {
      return agarApp.API.getCustomSkinsSetting(key);
    },
    getCustomSkinValue: function getCustomSkinValue() {
      return window.agarApp.API.getSoftPurchaseById(this.skinTokenId).currencyAmount;
    },
    getCustomSkinCurrency: function getCustomSkinCurrency() {
      return window.agarApp.API.getSoftPurchaseById(this.skinTokenId).currencyProductId;
    },
    onPurchasePlay: function onPurchasePlay() {
      this.bus.$emit('close');
      this.close();
      window.agarApp.API.closeAllViews();
      window.document.dispatchEvent(new Event('play'));
    },
    onPurchaseClose: function onPurchaseClose() {
      this.bus.$emit('hideSaveDialog');
      window.agarApp.API.closeAllViews();
      this.close();
      this.drawApp.unlock();
    },
    onPurchaseShare: function onPurchaseShare(realm) {
      window.agarApp.API.socialStory('ss_customskincreated', null, realm);
    },
    showSaveDialog: function showSaveDialog() {
      this.drawApp.lock();
      this.bus.$emit('showSaveDialog');
    },
    showCurrencyShopOfType: function showCurrencyShopOfType(currencyType) {
      this.saveSkinOnLocalStorage();
      _storage["default"].updateKey(_storageKeys["default"].PREVIOUS_PURCHASE_INTENTION_DIALOG, 'purchaseCustomSkin');
      window.agarApp.API.openShop(currencyType, {
        notEnough: true
      });
      this.close();
    },
    userCanAfford: function userCanAfford() {
      switch (this.getCustomSkinCurrency()) {
        case 'dna':
          if (window.agarApp.API.get_dna() < this.getCustomSkinValue()) {
            this.showCurrencyShopOfType('shopDNA');
            return false;
          } else {
            return true;
          }
        case 'coin':
          if (window.agarApp.API.get_coins() < this.getCustomSkinValue()) {
            this.showCurrencyShopOfType('shopCurrency');
            return false;
          } else {
            return true;
          }
        default:
          return false;
      }
    },
    compressImageBufferToPNG8: function compressImageBufferToPNG8(buffer) {
      var encodePNG = _upngJs["default"].encode([buffer], 512, 512, 16);
      var dData = new Uint8Array(encodePNG).reduce(function (data, _byte) {
        return data + String.fromCharCode(_byte);
      }, '');
      return btoa(dData);
    },
    onSaveConfirm: function onSaveConfirm(skinName) {
      var _this2 = this;
      var purchaseId;
      var purchase;
      var indexedSubscriptions = [];
      var vipSubscription = window.agarApp.API.getUserInfo().hasVIPSubscription;
      if (this.customSkinVipTokensCount && vipSubscription) {
        purchaseId = this.skinVipTokenId;
        indexedSubscriptions.push('vip_weekly');
      } else if (!this.customSkinTokensCount && this.userCanAfford()) {
        purchaseId = this.skinTokenId;
      }
      if (purchaseId) {
        purchase = window.agarApp.API.makePurchase(purchaseId, false, true);
        if (!purchase) {
          return;
        } else if (purchaseId == this.skinVipTokenId) {
          var walletVipToken = window.agarApp.API.getProductFromWallet('create_skin_token_for_vip_weekly');
          if (walletVipToken) {
            walletVipToken._balance--;
          }
        }
      }
      var skinMetaData = {
        name: skinName.replace(' ', '') == '' ? 'My Skin' : skinName,
        color: parseInt(this.getToolColorById('border').border.replace('#', '0x'), 16),
        indexedSubscriptions: indexedSubscriptions,
        creationDate: Math.round(Date.now() / 1000)
      };
      var finalBackgroundColor = this.getToolColorById('background').regular;
      this.drawApp.drawFinalImage(finalBackgroundColor).then(function (resolve) {
        var dta = _this2.drawApp.getImageData();
        var dMeta = _plist["default"].build(skinMetaData);
        var filteredProducts;
        window.agarApp.API.saveUserSkin(_this2.compressImageBufferToPNG8(dta.buffer), dMeta).then(function (response) {
          switch (response.result) {
            // eslint-disable-next-line no-case-declarations
            case 1:
              // success
              var products = response.productUpdates;
              var skinPath = window.EnvConfig.custom_skins_url;
              filteredProducts = products.filter(function (p) {
                return p.deltaAmount > 0;
              }).map(function (product) {
                return {
                  productId: product.userWalletItem.productId,
                  image: "".concat(skinPath).concat(product.userWalletItem.productId, ".png"),
                  skinName: '',
                  gamePlayInfo: {
                    cellColor: _this2.getToolColorById('border').border
                  }
                };
              });
              for (var i = 0; i < products.length; i++) {
                var product = products[i];
                if (product.deltaAmount < 0) {
                  if (product.userWalletItem.productId === 'create_skin_token') {
                    _index.store.commit('user/customSkinTokensCountUpdate', _this2.customSkinTokensCount - 1);
                  } else if (product.userWalletItem.productId === 'create_skin_token_for_vip_weekly') {
                    _index.store.commit('user/customSkinVipTokensCountUpdate', _this2.customSkinVipTokensCount - 1);
                  }
                }
              }
              window.agarApp.API.handleUserUpdates(products);
              window.document.dispatchEvent(new CustomEvent('update_token_counter', {
                'detail': _this2.customSkinTokensTotalCount
              }));
              window.agarApp.API.addCustomSkin(filteredProducts[0].productId, true, true);
              _this2.bus.$emit('update', {
                title: 'Skin Saved!',
                products: filteredProducts
              });
              _this2.drawApp.lock();
              break;
            case 2:
              // insufficient_funds
              break;
            case 3:
              // transient_error
              _this2.bus.$emit('error', {
                title: 'Transaction error',
                description: 'Please try again later'
              });
              break;
            default:
              break;
          }
        });
        _this2.drawApp.clearCanvas(true);
        _this2.name = '';
      });
    },
    onSaveCancel: function onSaveCancel() {
      this.drawApp.unlock();
    },
    init: function init() {
      var _this3 = this;
      this.canvas = document.getElementById('skin-editor-canvas');
      this.border = document.getElementById('skin-editor-border');
      this.drawApp = new _drawManager["default"](this.canvas, {
        actionLimit: this.getConfigValue('operationStackSize'),
        pointLimit: 100
      });
      this.drawApp.unlock();
      this.initColors();
      this.initBrushSizes();
      this.saveInterval = this.getConfigValue('autoSaveSkinInterval') || 15000;
      this.getToolById('brush').color = this.getColorById(_skinEditorColors.Colors.BLACK);
      this.getToolById('background').color = this.getColorById(_skinEditorColors.Colors.YELLOW);
      this.getToolById('border').color = this.getColorById(_skinEditorColors.Colors.ORANGE);
      this.selectTool('brush');
      this.drawApp.changeBackgroundColor(this.getToolColorById('background').regular);
      this.changeBorderColor(this.getToolColorById('border').border);
      this.changeSize(this.currentSize);
      this.showTutorial = !_storage["default"].getKey(_storageKeys["default"].HAS_SEEN_SKIN_EDITOR_TUTORIAL);
      this.changeTutorialPage();
      this.isHandVisible = false;
      if (!this.showTutorial) {
        this.playHandAnimation();
      }
      this.loadSkinFromLocalStorage();
      window.addEventListener('beforeunload', this.saveSkinOnLocalStorage);
      this.autoSave = setInterval(function () {
        _this3.saveSkinOnLocalStorage();
      }, this.saveInterval);

      /* this.animateBorder(this.canvas);
      this.animateBorder(this.border); */

      window.addEventListener('mousedown', this.mouseDown);
      window.addEventListener('mousemove', this.mouseMove);
    },
    initColors: function initColors() {
      var colors = agarApp.API.getCustomSkinsColors();
      for (var i = 0; i < colors.length; i++) {
        var color = colors[i];
        this.getColorById(i).regular = this.convertColor(color.regular);
        this.getColorById(i).border = this.convertColor(color.border);
      }
    },
    initBrushSizes: function initBrushSizes() {
      this.brushSizes = [];
      this.brushSizes.push({
        size: 30,
        uiTipSize: 30,
        uiTipMargin: 0
      });
      this.brushSizes.push({
        size: 20,
        uiTipSize: 20,
        uiTipMargin: 5
      });
      this.brushSizes.push({
        size: 10,
        uiTipSize: 10,
        uiTipMargin: 10
      });
      this.currentSize = this.brushSizes[1].size;
    },
    convertColor: function convertColor(color) {
      return this.rgbToHex(color.r, color.g, color.b);
    },
    colorToHex: function colorToHex(color) {
      var hexColor = color.toString(16);
      return hexColor.length == 1 ? "0".concat(hexColor) : hexColor;
    },
    rgbToHex: function rgbToHex(r, g, b) {
      return "#".concat(this.colorToHex(r)).concat(this.colorToHex(g)).concat(this.colorToHex(b));
    },
    getToolColorById: function getToolColorById(toolId) {
      var tool = this.getToolById(toolId);
      return tool.color || this.getColorById(_skinEditorColors.Colors.BLACK);
    },
    getToolById: function getToolById(toolId) {
      var tool = this.tools.filter(function (tool) {
        return tool.id == toolId;
      });
      return tool[0];
    },
    getColorById: function getColorById(colorId) {
      var colors = this.colors.filter(function (color) {
        return color.id == colorId;
      });
      return colors[0];
    },
    getSelectedColor: function getSelectedColor() {
      var colors = this.colors.filter(function (color) {
        return color.selected;
      });
      return colors[0];
    },
    selectTool: function selectTool(toolId) {
      this.currentTool = this.getToolById(toolId);
      if (this.currentTool.id !== 'eraser') {
        this.selectColor(this.currentTool.color);
      }
    },
    selectColor: function selectColor(selectedColor) {
      if (this.drawApp.isLocked) {
        return;
      }
      if (this.selectedColor) {
        this.selectedColor.selected = false;
      }
      if (this.currentTool.id === 'eraser') {
        this.currentTool = this.getToolById('brush');
      }
      this.selectedColor = selectedColor;
      this.currentTool.color = selectedColor;
      this.selectedColor.selected = true;
      this.changeColor(this.selectedColor);
    },
    mouseDown: function mouseDown(e) {
      if (!this.drawApp.isMouseOnCanvas() || e.button !== 0) {
        // Only allow left click
        return;
      }
      if (this.currentTool.id === 'background' || this.currentTool.id === 'border') {
        this.selectTool('brush');
      }
      this.drawApp.startDrawing(e, this.currentTool.id === 'eraser');
      this.isMouseDown = true;
      this.hideHandAnimation();
      document.addEventListener('mouseup', this.mouseUp);
    },
    mouseMove: function mouseMove(e) {
      this.drawApp.updateMousePosition(e);
      if (this.isMouseDown) {
        this.drawApp.draw(e, this.currentTool.id === 'eraser');
        this.hideHandAnimation();
      }
    },
    mouseUp: function mouseUp(e) {
      this.stopDrawing(e);
      this.isMouseDown = false;
      document.removeEventListener('mouseup', this.mouseUp);
    },
    mouseLeave: function mouseLeave(e) {
      // Save last position before going off-screen
      if (this.isMouseDown) {
        this.drawApp.draw(e, this.currentTool.id === 'eraser');
      }
      this.stopDrawing(e);
    },
    mouseEnter: function mouseEnter(e) {
      if (this.isMouseDown) {
        this.drawApp.startDrawing(e);
      }
    },
    stopDrawing: function stopDrawing(e) {
      this.drawApp.stopDrawing(e);
      this.updateButtonState();
    },
    undo: function undo() {
      this.drawApp.undo();
      this.updateButtonState();
    },
    redo: function redo() {
      this.drawApp.redo();
      this.updateButtonState();
    },
    clear: function clear() {
      this.drawApp.clearCanvas(true);
      this.updateButtonState();
    },
    onClear: function onClear() {
      window.document.dispatchEvent(new Event('clear_skin_editor'));
      this.closeClearConfirmation();
    },
    openClearConfirm: function openClearConfirm() {
      if (!this.drawApp.canClear()) {
        return;
      }
      this.clearConfirmationVisible = true;
      this.drawApp.lock();
    },
    closeClearConfirmation: function closeClearConfirmation() {
      this.clearConfirmationVisible = false;
      this.drawApp.unlock();
    },
    updateButtonState: function updateButtonState() {
      this.canUndo = this.drawApp.canUndo();
      this.canRedo = this.drawApp.canRedo();
      this.canClear = this.drawApp.canClear();
    },
    changeColor: function changeColor(color) {
      if (this.drawApp.isLocked) {
        return;
      }
      this.drawApp.changeColor(color.regular);
      if (this.currentTool.id === 'background') {
        this.drawApp.changeBackgroundColor(color.regular);
      } else if (this.currentTool.id === 'border') {
        this.changeBorderColor(color.border);
      }
    },
    changeBorderColor: function changeBorderColor(color) {
      if (this.drawApp.isLocked) {
        return;
      }
      this.border.style.backgroundColor = color;
    },
    changeSize: function changeSize(size) {
      if (this.drawApp.isLocked) {
        return;
      }
      this.currentSize = size;
      this.drawApp.changeSize(size);
    },
    animateBorder: function animateBorder(target) {
      var variance = 0.5;
      var keyframeCount = 10;
      var arcMaxTotalPoints = 10;
      var randArcPoints = Math.floor(Math.random() * arcMaxTotalPoints);
      var originalKeyframe = {
        clipPath: this.createBorderClipPath(variance, randArcPoints + arcMaxTotalPoints)
      };
      var keyframes = [];
      keyframes.push(originalKeyframe);
      for (var i = 0; i < keyframeCount; i++) {
        var _randArcPoints = Math.floor(Math.random() * arcMaxTotalPoints) + arcMaxTotalPoints;
        var path = this.createBorderClipPath(variance, _randArcPoints);
        keyframes.push({
          clipPath: path
        });
      }
      keyframes.push(originalKeyframe);
      var timing = {
        duration: 1000,
        iterations: Infinity
      };
      console.log(keyframes);
      target.animate(keyframes, timing);
    },
    createBorderClipPath: function createBorderClipPath(variance, arcTotalPoints) {
      var path = 'polygon(';
      var points = 100;
      for (var i = 0; i < points; i++) {
        var pts = Math.abs((arcTotalPoints * .5 - i % arcTotalPoints) / (arcTotalPoints * .5));
        var varianceMultiplier = variance * pts;
        var x = 50 * Math.cos(i * (2 * Math.PI / points)) + 50;
        var y = 50 * Math.sin(i * (2 * Math.PI / points)) + 50;
        x += Math.random() * 2 * varianceMultiplier - varianceMultiplier;
        y += Math.random() * 2 * varianceMultiplier - varianceMultiplier;
        path += x + '% ' + y + '%';
        if (i < points - 1) {
          path += ', ';
        } else {
          path += ')';
        }
      }
      return path;
    },
    open: function open(e) {
      var _this4 = this;
      agarApp.API.openSkinEditorDialog(function (dialog) {
        _this4.visible = true;
        _this4.$nextTick(function () {
          _this4.init();
          _this4.drawApp.render(true);
        });
      }, function (dialog) {
        if (_this4.visible) {
          _this4.close();
        }
      });
    },
    close: function close() {
      this.drawApp.reset();
      this.visible = false;
      this.isHandVisible = false;
      window.removeEventListener('mousedown', this.mouseDown);
      window.removeEventListener('mousemove', this.mouseMove);
      var topView = agarApp.API.getTopView();
      if (topView) {
        topView.allowDisableClose = true;
      }
      agarApp.API.closeTopView();
    },
    onLeave: function onLeave() {
      window.document.dispatchEvent(new Event('close_skin_editor'));
      this.closeLeaveConfirmation();
    },
    openLeaveConfirmation: function openLeaveConfirmation() {
      this.leaveConfirmationVisible = true;
      this.drawApp.lock();
    },
    closeLeaveConfirmation: function closeLeaveConfirmation() {
      this.leaveConfirmationVisible = false;
      this.drawApp.unlock();
    },
    changeTutorialPage: function changeTutorialPage() {
      if (!this.showTutorial) {
        return;
      }
      if (this.currentTutorialPage >= this.lastTutorialPage) {
        this.currentTutorialPage = 0; // Set to zero to avoid applying styles
        this.showTutorial = false;
        _storage["default"].updateKey(_storageKeys["default"].HAS_SEEN_SKIN_EDITOR_TUTORIAL, true);
        this.playHandAnimation();
        return;
      }
      this.currentTutorialPage++;
    },
    restartTutorial: function restartTutorial() {
      this.showTutorial = true;
    },
    saveSkinOnLocalStorage: function saveSkinOnLocalStorage() {
      if (!this.visible) {
        return;
      }
      var data = this.drawApp.canvasToDataURL();
      var background = this.getToolColorById('background').id;
      var border = this.getToolColorById('border').id;
      var obj = {
        data: data,
        background: background,
        border: border
      };
      _storage["default"].updateKey(_storageKeys["default"].SKIN_EDITOR_CACHE, obj);
    },
    loadSkinFromLocalStorage: function loadSkinFromLocalStorage() {
      var obj = _storage["default"].getKey(_storageKeys["default"].SKIN_EDITOR_CACHE);
      if (!obj) {
        return;
      }
      this.isHandVisible = false;
      this.changeBorderColor(this.getColorById(obj.border).border);
      this.getToolById('border').color = this.getColorById(obj.border);
      this.drawApp.changeBackgroundColor(this.getColorById(obj.background).regular);
      this.getToolById('background').color = this.getColorById(obj.background);
      this.drawApp.drawCanvasData(obj.data);
    },
    playHandAnimation: function playHandAnimation() {
      var _this5 = this;
      if (!this.hasShowedHand) {
        this.showHandTimeout = setTimeout(function () {
          _this5.isHandVisible = true;
        }, 5000);
      }
    },
    hideHandAnimation: function hideHandAnimation() {
      if (this.drawApp.isMouseOnCanvas()) {
        this.isHandVisible = false;
        this.hasShowedHand = true;
        window.clearTimeout(this.showHandTimeout);
      }
    },
    getFreeSkinsLabelText: function getFreeSkinsLabelText() {
      var text = 'You can create ' + this.customSkinTokensTotalCount + ' ';
      text += this.customSkinTokensTotalCount > 1 ? 'skins' : 'skin';
      text += ' for free!';
      return text;
    },
    i18n: function i18n(key) {
      return agarApp.i18n.get(key);
    }
  },
  watch: {
    showTutorial: function showTutorial(value) {
      if (value) {
        this.drawApp.lock();
      } else {
        this.drawApp.unlock();
      }
    }
  }
};

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _vuex = __webpack_require__(11);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: ['onPlay', 'onClose', 'onShare', 'bus'],
  data: function data() {
    return {
      visible: false,
      title: 'Hello World Title',
      description: '',
      type: '',
      products: [],
      isError: false
    };
  },
  mounted: function mounted() {
    this.bus.$on('update', this.update);
    this.bus.$on('close', this.clear);
    this.bus.$on('error', this.error);
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n'])), {}, {
    validProducts: function validProducts() {
      return this.products;
    },
    shareButtonLabel: function shareButtonLabel() {
      return window.agarApp.i18n.get('page_share');
    },
    buttonLabel: function buttonLabel() {
      return window.agarApp.i18n.get('reward_link_play');
    }
  }),
  methods: {
    share: function share(realm) {
      this.onShare(realm);
    },
    isGuest: function isGuest() {
      return window.agarApp.API.isGuest();
    },
    isSharable: function isSharable() {
      return !this.isError;
    },
    isPlayable: function isPlayable() {
      return !this.isError;
    },
    getProductName: function getProductName(product) {
      return product.skinName;
    },
    getProductImage: function getProductImage(product) {
      return product.image;
    },
    update: function update(data) {
      this.title = data.title;
      this.products = data.products;
      this.visible = this.products && this.products.length > 0;
    },
    clear: function clear() {
      this.title = '';
      this.description = '';
      this.products = [];
      this.isError = false;
    },
    error: function error(data) {
      this.title = data.title;
      this.description = data.description;
      this.isError = true;
      this.visible = this.isError;
    },
    getPurchaseCompleteTitle: function getPurchaseCompleteTitle() {
      return this.title;
    },
    getPurchaseCompleteDescription: function getPurchaseCompleteDescription() {
      return this.description;
    },
    onClickPlay: function onClickPlay() {
      this.onPlay();
    },
    onClickClose: function onClickClose() {
      this.visible = false;
      this.onClose();
    }
  }
};

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));
var _index = __webpack_require__(5);
var _vuex = __webpack_require__(11);
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: ['onConfirm', 'onCancel', 'bus'],
  data: function data() {
    return {
      visible: false,
      clicked: false,
      name: ''
    };
  },
  components: {},
  mounted: function mounted() {
    var _this = this;
    this.bus.$on('showSaveDialog', function () {
      _this.visible = true;
      _this.clicked = false;
      _this.name = '';
    });
    this.bus.$on('hideSaveDialog', function () {
      _this.visible = false;
    });
  },
  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['i18n'])), {}, {
    customSkinTokensCount: function customSkinTokensCount() {
      return _index.store.state.user.customSkinTokensCount;
    },
    customSkinVipTokensCount: function customSkinVipTokensCount() {
      return _index.store.state.user.customSkinVipTokensCount;
    }
  }),
  methods: {
    getMaxNameSize: function getMaxNameSize() {
      return window.agarApp.API.getCustomSkinsSetting('maxSkinNameSize') || 15;
    },
    getCustomSkinValue: function getCustomSkinValue() {
      return window.agarApp.API.getSoftPurchaseById('1_create_skin_token').currencyAmount;
    },
    getCustomSkinCurrency: function getCustomSkinCurrency() {
      return window.agarApp.API.getSoftPurchaseById('1_create_skin_token').currencyProductId;
    },
    getSaveTitle: function getSaveTitle() {
      var vipSubscription = window.agarApp.API.getUserInfo().hasVIPSubscription;
      if (this.customSkinVipTokensCount > 0 && vipSubscription) {
        return 'Save VIP Skin';
      } else if (this.customSkinTokensCount > 0) {
        return 'Save for Free';
      } else {
        return 'Save Skin';
      }
    },
    onClickConfirm: function onClickConfirm() {
      if (this.clicked) {
        return;
      }
      this.clicked = true;
      this.onConfirm(this.name);
    },
    onClickCancel: function onClickCancel() {
      this.visible = false;
      this.onCancel();
    }
  }
};

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = exports["default"] = {
  props: ['title', 'description', 'confirmLabel', 'cancelLabel', 'confirmCallback', 'cancelCallback']
};

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(230)
var ieee754 = __webpack_require__(632)
var isArray = __webpack_require__(633)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var conventions = __webpack_require__(57);

var find = conventions.find;
var NAMESPACE = conventions.NAMESPACE;

/**
 * A prerequisite for `[].filter`, to drop elements that are empty
 * @param {string} input
 * @returns {boolean}
 */
function notEmptyString (input) {
	return input !== ''
}
/**
 * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace
 * @see https://infra.spec.whatwg.org/#ascii-whitespace
 *
 * @param {string} input
 * @returns {string[]} (can be empty)
 */
function splitOnASCIIWhitespace(input) {
	// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE
	return input ? input.split(/[\t\n\f\r ]+/).filter(notEmptyString) : []
}

/**
 * Adds element as a key to current if it is not already present.
 *
 * @param {Record<string, boolean | undefined>} current
 * @param {string} element
 * @returns {Record<string, boolean | undefined>}
 */
function orderedSetReducer (current, element) {
	if (!current.hasOwnProperty(element)) {
		current[element] = true;
	}
	return current;
}

/**
 * @see https://infra.spec.whatwg.org/#ordered-set
 * @param {string} input
 * @returns {string[]}
 */
function toOrderedSet(input) {
	if (!input) return [];
	var list = splitOnASCIIWhitespace(input);
	return Object.keys(list.reduce(orderedSetReducer, {}))
}

/**
 * Uses `list.indexOf` to implement something like `Array.prototype.includes`,
 * which we can not rely on being available.
 *
 * @param {any[]} list
 * @returns {function(any): boolean}
 */
function arrayIncludes (list) {
	return function(element) {
		return list && list.indexOf(element) !== -1;
	}
}

function copy(src,dest){
	for(var p in src){
		if (Object.prototype.hasOwnProperty.call(src, p)) {
			dest[p] = src[p];
		}
	}
}

/**
^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
 */
function _extends(Class,Super){
	var pt = Class.prototype;
	if(!(pt instanceof Super)){
		function t(){};
		t.prototype = Super.prototype;
		t = new t();
		copy(pt,t);
		Class.prototype = pt = t;
	}
	if(pt.constructor != Class){
		if(typeof Class != 'function'){
			console.error("unknown Class:"+Class)
		}
		pt.constructor = Class
	}
}

// Node Types
var NodeType = {}
var ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;
var ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;
var TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;
var CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;
var ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;
var ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;
var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
var COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;
var DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;
var DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;
var DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;
var NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;

// ExceptionCode
var ExceptionCode = {}
var ExceptionMessage = {};
var INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]="Index size error"),1);
var DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]="DOMString size error"),2);
var HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]="Hierarchy request error"),3);
var WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]="Wrong document"),4);
var INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]="Invalid character"),5);
var NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]="No data allowed"),6);
var NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]="No modification allowed"),7);
var NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]="Not found"),8);
var NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]="Not supported"),9);
var INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]="Attribute in use"),10);
//level2
var INVALID_STATE_ERR        	= ExceptionCode.INVALID_STATE_ERR        	= ((ExceptionMessage[11]="Invalid state"),11);
var SYNTAX_ERR               	= ExceptionCode.SYNTAX_ERR               	= ((ExceptionMessage[12]="Syntax error"),12);
var INVALID_MODIFICATION_ERR 	= ExceptionCode.INVALID_MODIFICATION_ERR 	= ((ExceptionMessage[13]="Invalid modification"),13);
var NAMESPACE_ERR            	= ExceptionCode.NAMESPACE_ERR           	= ((ExceptionMessage[14]="Invalid namespace"),14);
var INVALID_ACCESS_ERR       	= ExceptionCode.INVALID_ACCESS_ERR      	= ((ExceptionMessage[15]="Invalid access"),15);

/**
 * DOM Level 2
 * Object DOMException
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
 * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
 */
function DOMException(code, message) {
	if(message instanceof Error){
		var error = message;
	}else{
		error = this;
		Error.call(this, ExceptionMessage[code]);
		this.message = ExceptionMessage[code];
		if(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
	}
	error.code = code;
	if(message) this.message = this.message + ": " + message;
	return error;
};
DOMException.prototype = Error.prototype;
copy(ExceptionCode,DOMException)

/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
 * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
 * The items in the NodeList are accessible via an integral index, starting from 0.
 */
function NodeList() {
};
NodeList.prototype = {
	/**
	 * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
	 * @standard level1
	 */
	length:0,
	/**
	 * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
	 * @standard level1
	 * @param index  unsigned long
	 *   Index into the collection.
	 * @return Node
	 * 	The node at the indexth position in the NodeList, or null if that is not a valid index.
	 */
	item: function(index) {
		return index >= 0 && index < this.length ? this[index] : null;
	},
	toString:function(isHTML,nodeFilter){
		for(var buf = [], i = 0;i<this.length;i++){
			serializeToString(this[i],buf,isHTML,nodeFilter);
		}
		return buf.join('');
	},
	/**
	 * @private
	 * @param {function (Node):boolean} predicate
	 * @returns {Node[]}
	 */
	filter: function (predicate) {
		return Array.prototype.filter.call(this, predicate);
	},
	/**
	 * @private
	 * @param {Node} item
	 * @returns {number}
	 */
	indexOf: function (item) {
		return Array.prototype.indexOf.call(this, item);
	},
};

function LiveNodeList(node,refresh){
	this._node = node;
	this._refresh = refresh
	_updateLiveList(this);
}
function _updateLiveList(list){
	var inc = list._node._inc || list._node.ownerDocument._inc;
	if (list._inc !== inc) {
		var ls = list._refresh(list._node);
		__set__(list,'length',ls.length);
		if (!list.$$length || ls.length < list.$$length) {
			for (var i = ls.length; i in list; i++) {
				if (Object.prototype.hasOwnProperty.call(list, i)) {
					delete list[i];
				}
			}
		}
		copy(ls,list);
		list._inc = inc;
	}
}
LiveNodeList.prototype.item = function(i){
	_updateLiveList(this);
	return this[i] || null;
}

_extends(LiveNodeList,NodeList);

/**
 * Objects implementing the NamedNodeMap interface are used
 * to represent collections of nodes that can be accessed by name.
 * Note that NamedNodeMap does not inherit from NodeList;
 * NamedNodeMaps are not maintained in any particular order.
 * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,
 * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,
 * and does not imply that the DOM specifies an order to these Nodes.
 * NamedNodeMap objects in the DOM are live.
 * used for attributes or DocumentType entities
 */
function NamedNodeMap() {
};

function _findNodeIndex(list,node){
	var i = list.length;
	while(i--){
		if(list[i] === node){return i}
	}
}

function _addNamedNode(el,list,newAttr,oldAttr){
	if(oldAttr){
		list[_findNodeIndex(list,oldAttr)] = newAttr;
	}else{
		list[list.length++] = newAttr;
	}
	if(el){
		newAttr.ownerElement = el;
		var doc = el.ownerDocument;
		if(doc){
			oldAttr && _onRemoveAttribute(doc,el,oldAttr);
			_onAddAttribute(doc,el,newAttr);
		}
	}
}
function _removeNamedNode(el,list,attr){
	//console.log('remove attr:'+attr)
	var i = _findNodeIndex(list,attr);
	if(i>=0){
		var lastIndex = list.length-1
		while(i<lastIndex){
			list[i] = list[++i]
		}
		list.length = lastIndex;
		if(el){
			var doc = el.ownerDocument;
			if(doc){
				_onRemoveAttribute(doc,el,attr);
				attr.ownerElement = null;
			}
		}
	}else{
		throw new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))
	}
}
NamedNodeMap.prototype = {
	length:0,
	item:NodeList.prototype.item,
	getNamedItem: function(key) {
//		if(key.indexOf(':')>0 || key == 'xmlns'){
//			return null;
//		}
		//console.log()
		var i = this.length;
		while(i--){
			var attr = this[i];
			//console.log(attr.nodeName,key)
			if(attr.nodeName == key){
				return attr;
			}
		}
	},
	setNamedItem: function(attr) {
		var el = attr.ownerElement;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		var oldAttr = this.getNamedItem(attr.nodeName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},
	/* returns Node */
	setNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
		var el = attr.ownerElement, oldAttr;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		oldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},

	/* returns Node */
	removeNamedItem: function(key) {
		var attr = this.getNamedItem(key);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;


	},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR

	//for level2
	removeNamedItemNS:function(namespaceURI,localName){
		var attr = this.getNamedItemNS(namespaceURI,localName);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;
	},
	getNamedItemNS: function(namespaceURI, localName) {
		var i = this.length;
		while(i--){
			var node = this[i];
			if(node.localName == localName && node.namespaceURI == namespaceURI){
				return node;
			}
		}
		return null;
	}
};

/**
 * The DOMImplementation interface represents an object providing methods
 * which are not dependent on any particular document.
 * Such an object is returned by the `Document.implementation` property.
 *
 * __The individual methods describe the differences compared to the specs.__
 *
 * @constructor
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN
 * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)
 * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core
 * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core
 * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard
 */
function DOMImplementation() {
}

DOMImplementation.prototype = {
	/**
	 * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.
	 * The different implementations fairly diverged in what kind of features were reported.
	 * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.
	 *
	 * @deprecated It is deprecated and modern browsers return true in all cases.
	 *
	 * @param {string} feature
	 * @param {string} [version]
	 * @returns {boolean} always true
	 *
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN
	 * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core
	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard
	 */
	hasFeature: function(feature, version) {
			return true;
	},
	/**
	 * Creates an XML Document object of the specified type with its document element.
	 *
	 * __It behaves slightly different from the description in the living standard__:
	 * - There is no interface/class `XMLDocument`, it returns a `Document` instance.
	 * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.
	 * - this implementation is not validating names or qualified names
	 *   (when parsing XML strings, the SAX parser takes care of that)
	 *
	 * @param {string|null} namespaceURI
	 * @param {string} qualifiedName
	 * @param {DocumentType=null} doctype
	 * @returns {Document}
	 *
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN
	 * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)
	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core
	 *
	 * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
	 * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
	 * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
	 */
	createDocument: function(namespaceURI,  qualifiedName, doctype){
		var doc = new Document();
		doc.implementation = this;
		doc.childNodes = new NodeList();
		doc.doctype = doctype || null;
		if (doctype){
			doc.appendChild(doctype);
		}
		if (qualifiedName){
			var root = doc.createElementNS(namespaceURI, qualifiedName);
			doc.appendChild(root);
		}
		return doc;
	},
	/**
	 * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.
	 *
	 * __This behavior is slightly different from the in the specs__:
	 * - this implementation is not validating names or qualified names
	 *   (when parsing XML strings, the SAX parser takes care of that)
	 *
	 * @param {string} qualifiedName
	 * @param {string} [publicId]
	 * @param {string} [systemId]
	 * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation
	 * 				  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`
	 *
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN
	 * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core
	 * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard
	 *
	 * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
	 * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
	 * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
	 */
	createDocumentType: function(qualifiedName, publicId, systemId){
		var node = new DocumentType();
		node.name = qualifiedName;
		node.nodeName = qualifiedName;
		node.publicId = publicId || '';
		node.systemId = systemId || '';

		return node;
	}
};


/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
 */

function Node() {
};

Node.prototype = {
	firstChild : null,
	lastChild : null,
	previousSibling : null,
	nextSibling : null,
	attributes : null,
	parentNode : null,
	childNodes : null,
	ownerDocument : null,
	nodeValue : null,
	namespaceURI : null,
	prefix : null,
	localName : null,
	// Modified in DOM Level 2:
	insertBefore:function(newChild, refChild){//raises
		return _insertBefore(this,newChild,refChild);
	},
	replaceChild:function(newChild, oldChild){//raises
		_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);
		if(oldChild){
			this.removeChild(oldChild);
		}
	},
	removeChild:function(oldChild){
		return _removeChild(this,oldChild);
	},
	appendChild:function(newChild){
		return this.insertBefore(newChild,null);
	},
	hasChildNodes:function(){
		return this.firstChild != null;
	},
	cloneNode:function(deep){
		return cloneNode(this.ownerDocument||this,this,deep);
	},
	// Modified in DOM Level 2:
	normalize:function(){
		var child = this.firstChild;
		while(child){
			var next = child.nextSibling;
			if(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){
				this.removeChild(next);
				child.appendData(next.data);
			}else{
				child.normalize();
				child = next;
			}
		}
	},
  	// Introduced in DOM Level 2:
	isSupported:function(feature, version){
		return this.ownerDocument.implementation.hasFeature(feature,version);
	},
    // Introduced in DOM Level 2:
    hasAttributes:function(){
    	return this.attributes.length>0;
    },
	/**
	 * Look up the prefix associated to the given namespace URI, starting from this node.
	 * **The default namespace declarations are ignored by this method.**
	 * See Namespace Prefix Lookup for details on the algorithm used by this method.
	 *
	 * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._
	 *
	 * @param {string | null} namespaceURI
	 * @returns {string | null}
	 * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
	 * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo
	 * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix
	 * @see https://github.com/xmldom/xmldom/issues/322
	 */
    lookupPrefix:function(namespaceURI){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			for(var n in map){
						if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {
							return n;
						}
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    lookupNamespaceURI:function(prefix){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			if(Object.prototype.hasOwnProperty.call(map, prefix)){
    				return map[prefix] ;
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    isDefaultNamespace:function(namespaceURI){
    	var prefix = this.lookupPrefix(namespaceURI);
    	return prefix == null;
    }
};


function _xmlEncoder(c){
	return c == '<' && '&lt;' ||
         c == '>' && '&gt;' ||
         c == '&' && '&amp;' ||
         c == '"' && '&quot;' ||
         '&#'+c.charCodeAt()+';'
}


copy(NodeType,Node);
copy(NodeType,Node.prototype);

/**
 * @param callback return true for continue,false for break
 * @return boolean true: break visit;
 */
function _visitNode(node,callback){
	if(callback(node)){
		return true;
	}
	if(node = node.firstChild){
		do{
			if(_visitNode(node,callback)){return true}
        }while(node=node.nextSibling)
    }
}



function Document(){
	this.ownerDocument = this;
}

function _onAddAttribute(doc,el,newAttr){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns === NAMESPACE.XMLNS){
		//update namespace
		el._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value
	}
}

function _onRemoveAttribute(doc,el,newAttr,remove){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns === NAMESPACE.XMLNS){
		//update namespace
		delete el._nsMap[newAttr.prefix?newAttr.localName:'']
	}
}

/**
 * Updates `el.childNodes`, updating the indexed items and it's `length`.
 * Passing `newChild` means it will be appended.
 * Otherwise it's assumed that an item has been removed,
 * and `el.firstNode` and it's `.nextSibling` are used
 * to walk the current list of child nodes.
 *
 * @param {Document} doc
 * @param {Node} el
 * @param {Node} [newChild]
 * @private
 */
function _onUpdateChild (doc, el, newChild) {
	if(doc && doc._inc){
		doc._inc++;
		//update childNodes
		var cs = el.childNodes;
		if (newChild) {
			cs[cs.length++] = newChild;
		} else {
			var child = el.firstChild;
			var i = 0;
			while (child) {
				cs[i++] = child;
				child = child.nextSibling;
			}
			cs.length = i;
			delete cs[cs.length];
		}
	}
}

/**
 * Removes the connections between `parentNode` and `child`
 * and any existing `child.previousSibling` or `child.nextSibling`.
 *
 * @see https://github.com/xmldom/xmldom/issues/135
 * @see https://github.com/xmldom/xmldom/issues/145
 *
 * @param {Node} parentNode
 * @param {Node} child
 * @returns {Node} the child that was removed.
 * @private
 */
function _removeChild (parentNode, child) {
	var previous = child.previousSibling;
	var next = child.nextSibling;
	if (previous) {
		previous.nextSibling = next;
	} else {
		parentNode.firstChild = next;
	}
	if (next) {
		next.previousSibling = previous;
	} else {
		parentNode.lastChild = previous;
	}
	child.parentNode = null;
	child.previousSibling = null;
	child.nextSibling = null;
	_onUpdateChild(parentNode.ownerDocument, parentNode);
	return child;
}

/**
 * Returns `true` if `node` can be a parent for insertion.
 * @param {Node} node
 * @returns {boolean}
 */
function hasValidParentNodeType(node) {
	return (
		node &&
		(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)
	);
}

/**
 * Returns `true` if `node` can be inserted according to it's `nodeType`.
 * @param {Node} node
 * @returns {boolean}
 */
function hasInsertableNodeType(node) {
	return (
		node &&
		(isElementNode(node) ||
			isTextNode(node) ||
			isDocTypeNode(node) ||
			node.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||
			node.nodeType === Node.COMMENT_NODE ||
			node.nodeType === Node.PROCESSING_INSTRUCTION_NODE)
	);
}

/**
 * Returns true if `node` is a DOCTYPE node
 * @param {Node} node
 * @returns {boolean}
 */
function isDocTypeNode(node) {
	return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;
}

/**
 * Returns true if the node is an element
 * @param {Node} node
 * @returns {boolean}
 */
function isElementNode(node) {
	return node && node.nodeType === Node.ELEMENT_NODE;
}
/**
 * Returns true if `node` is a text node
 * @param {Node} node
 * @returns {boolean}
 */
function isTextNode(node) {
	return node && node.nodeType === Node.TEXT_NODE;
}

/**
 * Check if en element node can be inserted before `child`, or at the end if child is falsy,
 * according to the presence and position of a doctype node on the same level.
 *
 * @param {Document} doc The document node
 * @param {Node} child the node that would become the nextSibling if the element would be inserted
 * @returns {boolean} `true` if an element can be inserted before child
 * @private
 * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 */
function isElementInsertionPossible(doc, child) {
	var parentChildNodes = doc.childNodes || [];
	if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {
		return false;
	}
	var docTypeNode = find(parentChildNodes, isDocTypeNode);
	return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));
}

/**
 * Check if en element node can be inserted before `child`, or at the end if child is falsy,
 * according to the presence and position of a doctype node on the same level.
 *
 * @param {Node} doc The document node
 * @param {Node} child the node that would become the nextSibling if the element would be inserted
 * @returns {boolean} `true` if an element can be inserted before child
 * @private
 * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 */
function isElementReplacementPossible(doc, child) {
	var parentChildNodes = doc.childNodes || [];

	function hasElementChildThatIsNotChild(node) {
		return isElementNode(node) && node !== child;
	}

	if (find(parentChildNodes, hasElementChildThatIsNotChild)) {
		return false;
	}
	var docTypeNode = find(parentChildNodes, isDocTypeNode);
	return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));
}

/**
 * @private
 * Steps 1-5 of the checks before inserting and before replacing a child are the same.
 *
 * @param {Node} parent the parent node to insert `node` into
 * @param {Node} node the node to insert
 * @param {Node=} child the node that should become the `nextSibling` of `node`
 * @returns {Node}
 * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
 * @throws DOMException if `child` is provided but is not a child of `parent`.
 * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 * @see https://dom.spec.whatwg.org/#concept-node-replace
 */
function assertPreInsertionValidity1to5(parent, node, child) {
	// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a "HierarchyRequestError" DOMException.
	if (!hasValidParentNodeType(parent)) {
		throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);
	}
	// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a "HierarchyRequestError" DOMException.
	// not implemented!
	// 3. If `child` is non-null and its parent is not `parent`, then throw a "NotFoundError" DOMException.
	if (child && child.parentNode !== parent) {
		throw new DOMException(NOT_FOUND_ERR, 'child not in parent');
	}
	if (
		// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a "HierarchyRequestError" DOMException.
		!hasInsertableNodeType(node) ||
		// 5. If either `node` is a Text node and `parent` is a document,
		// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0
		// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)
		// or `node` is a doctype and `parent` is not a document, then throw a "HierarchyRequestError" DOMException.
		(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)
	) {
		throw new DOMException(
			HIERARCHY_REQUEST_ERR,
			'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType
		);
	}
}

/**
 * @private
 * Step 6 of the checks before inserting and before replacing a child are different.
 *
 * @param {Document} parent the parent node to insert `node` into
 * @param {Node} node the node to insert
 * @param {Node | undefined} child the node that should become the `nextSibling` of `node`
 * @returns {Node}
 * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
 * @throws DOMException if `child` is provided but is not a child of `parent`.
 * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 * @see https://dom.spec.whatwg.org/#concept-node-replace
 */
function assertPreInsertionValidityInDocument(parent, node, child) {
	var parentChildNodes = parent.childNodes || [];
	var nodeChildNodes = node.childNodes || [];

	// DocumentFragment
	if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
		var nodeChildElements = nodeChildNodes.filter(isElementNode);
		// If node has more than one element child or has a Text node child.
		if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');
		}
		// Otherwise, if `node` has one element child and either `parent` has an element child,
		// `child` is a doctype, or `child` is non-null and a doctype is following `child`.
		if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');
		}
	}
	// Element
	if (isElementNode(node)) {
		// `parent` has an element child, `child` is a doctype,
		// or `child` is non-null and a doctype is following `child`.
		if (!isElementInsertionPossible(parent, child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');
		}
	}
	// DocumentType
	if (isDocTypeNode(node)) {
		// `parent` has a doctype child,
		if (find(parentChildNodes, isDocTypeNode)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');
		}
		var parentElementChild = find(parentChildNodes, isElementNode);
		// `child` is non-null and an element is preceding `child`,
		if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');
		}
		// or `child` is null and `parent` has an element child.
		if (!child && parentElementChild) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');
		}
	}
}

/**
 * @private
 * Step 6 of the checks before inserting and before replacing a child are different.
 *
 * @param {Document} parent the parent node to insert `node` into
 * @param {Node} node the node to insert
 * @param {Node | undefined} child the node that should become the `nextSibling` of `node`
 * @returns {Node}
 * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
 * @throws DOMException if `child` is provided but is not a child of `parent`.
 * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 * @see https://dom.spec.whatwg.org/#concept-node-replace
 */
function assertPreReplacementValidityInDocument(parent, node, child) {
	var parentChildNodes = parent.childNodes || [];
	var nodeChildNodes = node.childNodes || [];

	// DocumentFragment
	if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
		var nodeChildElements = nodeChildNodes.filter(isElementNode);
		// If `node` has more than one element child or has a Text node child.
		if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');
		}
		// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.
		if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');
		}
	}
	// Element
	if (isElementNode(node)) {
		// `parent` has an element child that is not `child` or a doctype is following `child`.
		if (!isElementReplacementPossible(parent, child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');
		}
	}
	// DocumentType
	if (isDocTypeNode(node)) {
		function hasDoctypeChildThatIsNotChild(node) {
			return isDocTypeNode(node) && node !== child;
		}

		// `parent` has a doctype child that is not `child`,
		if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');
		}
		var parentElementChild = find(parentChildNodes, isElementNode);
		// or an element is preceding `child`.
		if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {
			throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');
		}
	}
}

/**
 * @private
 * @param {Node} parent the parent node to insert `node` into
 * @param {Node} node the node to insert
 * @param {Node=} child the node that should become the `nextSibling` of `node`
 * @returns {Node}
 * @throws DOMException for several node combinations that would create a DOM that is not well-formed.
 * @throws DOMException if `child` is provided but is not a child of `parent`.
 * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
 */
function _insertBefore(parent, node, child, _inDocumentAssertion) {
	// To ensure pre-insertion validity of a node into a parent before a child, run these steps:
	assertPreInsertionValidity1to5(parent, node, child);

	// If parent is a document, and any of the statements below, switched on the interface node implements,
	// are true, then throw a "HierarchyRequestError" DOMException.
	if (parent.nodeType === Node.DOCUMENT_NODE) {
		(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);
	}

	var cp = node.parentNode;
	if(cp){
		cp.removeChild(node);//remove and update
	}
	if(node.nodeType === DOCUMENT_FRAGMENT_NODE){
		var newFirst = node.firstChild;
		if (newFirst == null) {
			return node;
		}
		var newLast = node.lastChild;
	}else{
		newFirst = newLast = node;
	}
	var pre = child ? child.previousSibling : parent.lastChild;

	newFirst.previousSibling = pre;
	newLast.nextSibling = child;


	if(pre){
		pre.nextSibling = newFirst;
	}else{
		parent.firstChild = newFirst;
	}
	if(child == null){
		parent.lastChild = newLast;
	}else{
		child.previousSibling = newLast;
	}
	do{
		newFirst.parentNode = parent;
	}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))
	_onUpdateChild(parent.ownerDocument||parent, parent);
	//console.log(parent.lastChild.nextSibling == null)
	if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {
		node.firstChild = node.lastChild = null;
	}
	return node;
}

/**
 * Appends `newChild` to `parentNode`.
 * If `newChild` is already connected to a `parentNode` it is first removed from it.
 *
 * @see https://github.com/xmldom/xmldom/issues/135
 * @see https://github.com/xmldom/xmldom/issues/145
 * @param {Node} parentNode
 * @param {Node} newChild
 * @returns {Node}
 * @private
 */
function _appendSingleChild (parentNode, newChild) {
	if (newChild.parentNode) {
		newChild.parentNode.removeChild(newChild);
	}
	newChild.parentNode = parentNode;
	newChild.previousSibling = parentNode.lastChild;
	newChild.nextSibling = null;
	if (newChild.previousSibling) {
		newChild.previousSibling.nextSibling = newChild;
	} else {
		parentNode.firstChild = newChild;
	}
	parentNode.lastChild = newChild;
	_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);
	return newChild;
}

Document.prototype = {
	//implementation : null,
	nodeName :  '#document',
	nodeType :  DOCUMENT_NODE,
	/**
	 * The DocumentType node of the document.
	 *
	 * @readonly
	 * @type DocumentType
	 */
	doctype :  null,
	documentElement :  null,
	_inc : 1,

	insertBefore :  function(newChild, refChild){//raises
		if(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){
			var child = newChild.firstChild;
			while(child){
				var next = child.nextSibling;
				this.insertBefore(child,refChild);
				child = next;
			}
			return newChild;
		}
		_insertBefore(this, newChild, refChild);
		newChild.ownerDocument = this;
		if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {
			this.documentElement = newChild;
		}

		return newChild;
	},
	removeChild :  function(oldChild){
		if(this.documentElement == oldChild){
			this.documentElement = null;
		}
		return _removeChild(this,oldChild);
	},
	replaceChild: function (newChild, oldChild) {
		//raises
		_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);
		newChild.ownerDocument = this;
		if (oldChild) {
			this.removeChild(oldChild);
		}
		if (isElementNode(newChild)) {
			this.documentElement = newChild;
		}
	},
	// Introduced in DOM Level 2:
	importNode : function(importedNode,deep){
		return importNode(this,importedNode,deep);
	},
	// Introduced in DOM Level 2:
	getElementById :	function(id){
		var rtv = null;
		_visitNode(this.documentElement,function(node){
			if(node.nodeType == ELEMENT_NODE){
				if(node.getAttribute('id') == id){
					rtv = node;
					return true;
				}
			}
		})
		return rtv;
	},

	/**
	 * The `getElementsByClassName` method of `Document` interface returns an array-like object
	 * of all child elements which have **all** of the given class name(s).
	 *
	 * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.
	 *
	 *
	 * Warning: This is a live LiveNodeList.
	 * Changes in the DOM will reflect in the array as the changes occur.
	 * If an element selected by this array no longer qualifies for the selector,
	 * it will automatically be removed. Be aware of this for iteration purposes.
	 *
	 * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace
	 *
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName
	 * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname
	 */
	getElementsByClassName: function(classNames) {
		var classNamesSet = toOrderedSet(classNames)
		return new LiveNodeList(this, function(base) {
			var ls = [];
			if (classNamesSet.length > 0) {
				_visitNode(base.documentElement, function(node) {
					if(node !== base && node.nodeType === ELEMENT_NODE) {
						var nodeClassNames = node.getAttribute('class')
						// can be null if the attribute does not exist
						if (nodeClassNames) {
							// before splitting and iterating just compare them for the most common case
							var matches = classNames === nodeClassNames;
							if (!matches) {
								var nodeClassNamesSet = toOrderedSet(nodeClassNames)
								matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))
							}
							if(matches) {
								ls.push(node);
							}
						}
					}
				});
			}
			return ls;
		});
	},

	//document factory method:
	createElement :	function(tagName){
		var node = new Element();
		node.ownerDocument = this;
		node.nodeName = tagName;
		node.tagName = tagName;
		node.localName = tagName;
		node.childNodes = new NodeList();
		var attrs	= node.attributes = new NamedNodeMap();
		attrs._ownerElement = node;
		return node;
	},
	createDocumentFragment :	function(){
		var node = new DocumentFragment();
		node.ownerDocument = this;
		node.childNodes = new NodeList();
		return node;
	},
	createTextNode :	function(data){
		var node = new Text();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createComment :	function(data){
		var node = new Comment();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createCDATASection :	function(data){
		var node = new CDATASection();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createProcessingInstruction :	function(target,data){
		var node = new ProcessingInstruction();
		node.ownerDocument = this;
		node.tagName = node.nodeName = node.target = target;
		node.nodeValue = node.data = data;
		return node;
	},
	createAttribute :	function(name){
		var node = new Attr();
		node.ownerDocument	= this;
		node.name = name;
		node.nodeName	= name;
		node.localName = name;
		node.specified = true;
		return node;
	},
	createEntityReference :	function(name){
		var node = new EntityReference();
		node.ownerDocument	= this;
		node.nodeName	= name;
		return node;
	},
	// Introduced in DOM Level 2:
	createElementNS :	function(namespaceURI,qualifiedName){
		var node = new Element();
		var pl = qualifiedName.split(':');
		var attrs	= node.attributes = new NamedNodeMap();
		node.childNodes = new NodeList();
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.tagName = qualifiedName;
		node.namespaceURI = namespaceURI;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		attrs._ownerElement = node;
		return node;
	},
	// Introduced in DOM Level 2:
	createAttributeNS :	function(namespaceURI,qualifiedName){
		var node = new Attr();
		var pl = qualifiedName.split(':');
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.name = qualifiedName;
		node.namespaceURI = namespaceURI;
		node.specified = true;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		return node;
	}
};
_extends(Document,Node);


function Element() {
	this._nsMap = {};
};
Element.prototype = {
	nodeType : ELEMENT_NODE,
	hasAttribute : function(name){
		return this.getAttributeNode(name)!=null;
	},
	getAttribute : function(name){
		var attr = this.getAttributeNode(name);
		return attr && attr.value || '';
	},
	getAttributeNode : function(name){
		return this.attributes.getNamedItem(name);
	},
	setAttribute : function(name, value){
		var attr = this.ownerDocument.createAttribute(name);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	removeAttribute : function(name){
		var attr = this.getAttributeNode(name)
		attr && this.removeAttributeNode(attr);
	},

	//four real opeartion method
	appendChild:function(newChild){
		if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
			return this.insertBefore(newChild,null);
		}else{
			return _appendSingleChild(this,newChild);
		}
	},
	setAttributeNode : function(newAttr){
		return this.attributes.setNamedItem(newAttr);
	},
	setAttributeNodeNS : function(newAttr){
		return this.attributes.setNamedItemNS(newAttr);
	},
	removeAttributeNode : function(oldAttr){
		//console.log(this == oldAttr.ownerElement)
		return this.attributes.removeNamedItem(oldAttr.nodeName);
	},
	//get real attribute name,and remove it by removeAttributeNode
	removeAttributeNS : function(namespaceURI, localName){
		var old = this.getAttributeNodeNS(namespaceURI, localName);
		old && this.removeAttributeNode(old);
	},

	hasAttributeNS : function(namespaceURI, localName){
		return this.getAttributeNodeNS(namespaceURI, localName)!=null;
	},
	getAttributeNS : function(namespaceURI, localName){
		var attr = this.getAttributeNodeNS(namespaceURI, localName);
		return attr && attr.value || '';
	},
	setAttributeNS : function(namespaceURI, qualifiedName, value){
		var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	getAttributeNodeNS : function(namespaceURI, localName){
		return this.attributes.getNamedItemNS(namespaceURI, localName);
	},

	getElementsByTagName : function(tagName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){
					ls.push(node);
				}
			});
			return ls;
		});
	},
	getElementsByTagNameNS : function(namespaceURI, localName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){
					ls.push(node);
				}
			});
			return ls;

		});
	}
};
Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;
Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;


_extends(Element,Node);
function Attr() {
};
Attr.prototype.nodeType = ATTRIBUTE_NODE;
_extends(Attr,Node);


function CharacterData() {
};
CharacterData.prototype = {
	data : '',
	substringData : function(offset, count) {
		return this.data.substring(offset, offset+count);
	},
	appendData: function(text) {
		text = this.data+text;
		this.nodeValue = this.data = text;
		this.length = text.length;
	},
	insertData: function(offset,text) {
		this.replaceData(offset,0,text);

	},
	appendChild:function(newChild){
		throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])
	},
	deleteData: function(offset, count) {
		this.replaceData(offset,count,"");
	},
	replaceData: function(offset, count, text) {
		var start = this.data.substring(0,offset);
		var end = this.data.substring(offset+count);
		text = start + text + end;
		this.nodeValue = this.data = text;
		this.length = text.length;
	}
}
_extends(CharacterData,Node);
function Text() {
};
Text.prototype = {
	nodeName : "#text",
	nodeType : TEXT_NODE,
	splitText : function(offset) {
		var text = this.data;
		var newText = text.substring(offset);
		text = text.substring(0, offset);
		this.data = this.nodeValue = text;
		this.length = text.length;
		var newNode = this.ownerDocument.createTextNode(newText);
		if(this.parentNode){
			this.parentNode.insertBefore(newNode, this.nextSibling);
		}
		return newNode;
	}
}
_extends(Text,CharacterData);
function Comment() {
};
Comment.prototype = {
	nodeName : "#comment",
	nodeType : COMMENT_NODE
}
_extends(Comment,CharacterData);

function CDATASection() {
};
CDATASection.prototype = {
	nodeName : "#cdata-section",
	nodeType : CDATA_SECTION_NODE
}
_extends(CDATASection,CharacterData);


function DocumentType() {
};
DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
_extends(DocumentType,Node);

function Notation() {
};
Notation.prototype.nodeType = NOTATION_NODE;
_extends(Notation,Node);

function Entity() {
};
Entity.prototype.nodeType = ENTITY_NODE;
_extends(Entity,Node);

function EntityReference() {
};
EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
_extends(EntityReference,Node);

function DocumentFragment() {
};
DocumentFragment.prototype.nodeName =	"#document-fragment";
DocumentFragment.prototype.nodeType =	DOCUMENT_FRAGMENT_NODE;
_extends(DocumentFragment,Node);


function ProcessingInstruction() {
}
ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
_extends(ProcessingInstruction,Node);
function XMLSerializer(){}
XMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){
	return nodeSerializeToString.call(node,isHtml,nodeFilter);
}
Node.prototype.toString = nodeSerializeToString;
function nodeSerializeToString(isHtml,nodeFilter){
	var buf = [];
	var refNode = this.nodeType == 9 && this.documentElement || this;
	var prefix = refNode.prefix;
	var uri = refNode.namespaceURI;

	if(uri && prefix == null){
		//console.log(prefix)
		var prefix = refNode.lookupPrefix(uri);
		if(prefix == null){
			//isHTML = true;
			var visibleNamespaces=[
			{namespace:uri,prefix:null}
			//{namespace:uri,prefix:''}
			]
		}
	}
	serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);
	//console.log('###',this.nodeType,uri,prefix,buf.join(''))
	return buf.join('');
}

function needNamespaceDefine(node, isHTML, visibleNamespaces) {
	var prefix = node.prefix || '';
	var uri = node.namespaceURI;
	// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,
	// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :
	// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.
	// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)
	// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :
	// > [...] Furthermore, the attribute value [...] must not be an empty string.
	// so serializing empty namespace value like xmlns:ds="" would produce an invalid XML document.
	if (!uri) {
		return false;
	}
	if (prefix === "xml" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {
		return false;
	}

	var i = visibleNamespaces.length
	while (i--) {
		var ns = visibleNamespaces[i];
		// get namespace prefix
		if (ns.prefix === prefix) {
			return ns.namespace !== uri;
		}
	}
	return true;
}
/**
 * Well-formed constraint: No < in Attribute Values
 * > The replacement text of any entity referred to directly or indirectly
 * > in an attribute value must not contain a <.
 * @see https://www.w3.org/TR/xml11/#CleanAttrVals
 * @see https://www.w3.org/TR/xml11/#NT-AttValue
 *
 * Literal whitespace other than space that appear in attribute values
 * are serialized as their entity references, so they will be preserved.
 * (In contrast to whitespace literals in the input which are normalized to spaces)
 * @see https://www.w3.org/TR/xml11/#AVNormalize
 * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes
 */
function addSerializedAttribute(buf, qualifiedName, value) {
	buf.push(' ', qualifiedName, '="', value.replace(/[<>&"\t\n\r]/g, _xmlEncoder), '"')
}

function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){
	if (!visibleNamespaces) {
		visibleNamespaces = [];
	}

	if(nodeFilter){
		node = nodeFilter(node);
		if(node){
			if(typeof node == 'string'){
				buf.push(node);
				return;
			}
		}else{
			return;
		}
		//buf.sort.apply(attrs, attributeSorter);
	}

	switch(node.nodeType){
	case ELEMENT_NODE:
		var attrs = node.attributes;
		var len = attrs.length;
		var child = node.firstChild;
		var nodeName = node.tagName;

		isHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML

		var prefixedNodeName = nodeName
		if (!isHTML && !node.prefix && node.namespaceURI) {
			var defaultNS
			// lookup current default ns from `xmlns` attribute
			for (var ai = 0; ai < attrs.length; ai++) {
				if (attrs.item(ai).name === 'xmlns') {
					defaultNS = attrs.item(ai).value
					break
				}
			}
			if (!defaultNS) {
				// lookup current default ns in visibleNamespaces
				for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {
					var namespace = visibleNamespaces[nsi]
					if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {
						defaultNS = namespace.namespace
						break
					}
				}
			}
			if (defaultNS !== node.namespaceURI) {
				for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {
					var namespace = visibleNamespaces[nsi]
					if (namespace.namespace === node.namespaceURI) {
						if (namespace.prefix) {
							prefixedNodeName = namespace.prefix + ':' + nodeName
						}
						break
					}
				}
			}
		}

		buf.push('<', prefixedNodeName);

		for(var i=0;i<len;i++){
			// add namespaces for attributes
			var attr = attrs.item(i);
			if (attr.prefix == 'xmlns') {
				visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });
			}else if(attr.nodeName == 'xmlns'){
				visibleNamespaces.push({ prefix: '', namespace: attr.value });
			}
		}

		for(var i=0;i<len;i++){
			var attr = attrs.item(i);
			if (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {
				var prefix = attr.prefix||'';
				var uri = attr.namespaceURI;
				addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : "xmlns", uri);
				visibleNamespaces.push({ prefix: prefix, namespace:uri });
			}
			serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);
		}

		// add namespace for current node
		if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {
			var prefix = node.prefix||'';
			var uri = node.namespaceURI;
			addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : "xmlns", uri);
			visibleNamespaces.push({ prefix: prefix, namespace:uri });
		}

		if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
			buf.push('>');
			//if is cdata child node
			if(isHTML && /^script$/i.test(nodeName)){
				while(child){
					if(child.data){
						buf.push(child.data);
					}else{
						serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
					}
					child = child.nextSibling;
				}
			}else
			{
				while(child){
					serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
					child = child.nextSibling;
				}
			}
			buf.push('</',prefixedNodeName,'>');
		}else{
			buf.push('/>');
		}
		// remove added visible namespaces
		//visibleNamespaces.length = startVisibleNamespaces;
		return;
	case DOCUMENT_NODE:
	case DOCUMENT_FRAGMENT_NODE:
		var child = node.firstChild;
		while(child){
			serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
			child = child.nextSibling;
		}
		return;
	case ATTRIBUTE_NODE:
		return addSerializedAttribute(buf, node.name, node.value);
	case TEXT_NODE:
		/**
		 * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,
		 * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.
		 * If they are needed elsewhere, they must be escaped using either numeric character references or the strings
		 * `&amp;` and `&lt;` respectively.
		 * The right angle bracket (>) may be represented using the string " &gt; ", and must, for compatibility,
		 * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,
		 * when that string is not marking the end of a CDATA section.
		 *
		 * In the content of elements, character data is any string of characters
		 * which does not contain the start-delimiter of any markup
		 * and does not include the CDATA-section-close delimiter, `]]>`.
		 *
		 * @see https://www.w3.org/TR/xml/#NT-CharData
		 * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node
		 */
		return buf.push(node.data
			.replace(/[<&>]/g,_xmlEncoder)
		);
	case CDATA_SECTION_NODE:
		return buf.push( '<![CDATA[',node.data,']]>');
	case COMMENT_NODE:
		return buf.push( "<!--",node.data,"-->");
	case DOCUMENT_TYPE_NODE:
		var pubid = node.publicId;
		var sysid = node.systemId;
		buf.push('<!DOCTYPE ',node.name);
		if(pubid){
			buf.push(' PUBLIC ', pubid);
			if (sysid && sysid!='.') {
				buf.push(' ', sysid);
			}
			buf.push('>');
		}else if(sysid && sysid!='.'){
			buf.push(' SYSTEM ', sysid, '>');
		}else{
			var sub = node.internalSubset;
			if(sub){
				buf.push(" [",sub,"]");
			}
			buf.push(">");
		}
		return;
	case PROCESSING_INSTRUCTION_NODE:
		return buf.push( "<?",node.target," ",node.data,"?>");
	case ENTITY_REFERENCE_NODE:
		return buf.push( '&',node.nodeName,';');
	//case ENTITY_NODE:
	//case NOTATION_NODE:
	default:
		buf.push('??',node.nodeName);
	}
}
function importNode(doc,node,deep){
	var node2;
	switch (node.nodeType) {
	case ELEMENT_NODE:
		node2 = node.cloneNode(false);
		node2.ownerDocument = doc;
		//var attrs = node2.attributes;
		//var len = attrs.length;
		//for(var i=0;i<len;i++){
			//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
		//}
	case DOCUMENT_FRAGMENT_NODE:
		break;
	case ATTRIBUTE_NODE:
		deep = true;
		break;
	//case ENTITY_REFERENCE_NODE:
	//case PROCESSING_INSTRUCTION_NODE:
	////case TEXT_NODE:
	//case CDATA_SECTION_NODE:
	//case COMMENT_NODE:
	//	deep = false;
	//	break;
	//case DOCUMENT_NODE:
	//case DOCUMENT_TYPE_NODE:
	//cannot be imported.
	//case ENTITY_NODE:
	//case NOTATION_NODE：
	//can not hit in level3
	//default:throw e;
	}
	if(!node2){
		node2 = node.cloneNode(false);//false
	}
	node2.ownerDocument = doc;
	node2.parentNode = null;
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(importNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}
//
//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
//					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
function cloneNode(doc,node,deep){
	var node2 = new node.constructor();
	for (var n in node) {
		if (Object.prototype.hasOwnProperty.call(node, n)) {
			var v = node[n];
			if (typeof v != "object") {
				if (v != node2[n]) {
					node2[n] = v;
				}
			}
		}
	}
	if(node.childNodes){
		node2.childNodes = new NodeList();
	}
	node2.ownerDocument = doc;
	switch (node2.nodeType) {
	case ELEMENT_NODE:
		var attrs	= node.attributes;
		var attrs2	= node2.attributes = new NamedNodeMap();
		var len = attrs.length
		attrs2._ownerElement = node2;
		for(var i=0;i<len;i++){
			node2.setAttributeNode(cloneNode(doc,attrs.item(i),true));
		}
		break;;
	case ATTRIBUTE_NODE:
		deep = true;
	}
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(cloneNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}

function __set__(object,key,value){
	object[key] = value
}
//do dynamic
try{
	if(Object.defineProperty){
		Object.defineProperty(LiveNodeList.prototype,'length',{
			get:function(){
				_updateLiveList(this);
				return this.$$length;
			}
		});

		Object.defineProperty(Node.prototype,'textContent',{
			get:function(){
				return getTextContent(this);
			},

			set:function(data){
				switch(this.nodeType){
				case ELEMENT_NODE:
				case DOCUMENT_FRAGMENT_NODE:
					while(this.firstChild){
						this.removeChild(this.firstChild);
					}
					if(data || String(data)){
						this.appendChild(this.ownerDocument.createTextNode(data));
					}
					break;

				default:
					this.data = data;
					this.value = data;
					this.nodeValue = data;
				}
			}
		})

		function getTextContent(node){
			switch(node.nodeType){
			case ELEMENT_NODE:
			case DOCUMENT_FRAGMENT_NODE:
				var buf = [];
				node = node.firstChild;
				while(node){
					if(node.nodeType!==7 && node.nodeType !==8){
						buf.push(getTextContent(node));
					}
					node = node.nextSibling;
				}
				return buf.join('');
			default:
				return node.nodeValue;
			}
		}

		__set__ = function(object,key,value){
			//console.log(value)
			object['$$'+key] = value
		}
	}
}catch(e){//ie8
}

//if(typeof require == 'function'){
	exports.DocumentType = DocumentType;
	exports.DOMException = DOMException;
	exports.DOMImplementation = DOMImplementation;
	exports.Element = Element;
	exports.Node = Node;
	exports.NodeList = NodeList;
	exports.XMLSerializer = XMLSerializer;
//}


/***/ }),
/* 232 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Implements the DOMImplementation interface
  var XMLDOMImplementation;

  module.exports = XMLDOMImplementation = class XMLDOMImplementation {
    // Tests if the DOM implementation implements a specific feature.

    // `feature` package name of the feature to test. In Level 1, the
    //           legal values are "HTML" and "XML" (case-insensitive).
    // `version` version number of the package name to test. 
    //           In Level 1, this is the string "1.0". If the version is 
    //           not specified, supporting any version of the feature will 
    //           cause the method to return true.
    hasFeature(feature, version) {
      return true;
    }

    // Creates a new document type declaration.

    // `qualifiedName` qualified name of the document type to be created
    // `publicId` public identifier of the external subset
    // `systemId` system identifier of the external subset
    createDocumentType(qualifiedName, publicId, systemId) {
      throw new Error("This DOM method is not implemented.");
    }

    // Creates a new document.

    // `namespaceURI` namespace URI of the document element to create
    // `qualifiedName` the qualified name of the document to be created
    // `doctype` the type of document to be created or null
    createDocument(namespaceURI, qualifiedName, doctype) {
      throw new Error("This DOM method is not implemented.");
    }

    // Creates a new HTML document.

    // `title` document title
    createHTMLDocument(title) {
      throw new Error("This DOM method is not implemented.");
    }

    // Returns a specialized object which implements the specialized APIs 
    // of the specified feature and version.

    // `feature` name of the feature requested.
    // `version` version number of the feature to test
    getFeature(feature, version) {
      throw new Error("This DOM method is not implemented.");
    }

  };

}).call(this);


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject;

  ({isPlainObject} = __webpack_require__(24));

  XMLDOMImplementation = __webpack_require__(232);

  XMLDOMConfiguration = __webpack_require__(640);

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  XMLStringifier = __webpack_require__(236);

  XMLStringWriter = __webpack_require__(103);

  // Represents an XML builder
  module.exports = XMLDocument = (function() {
    class XMLDocument extends XMLNode {
      // Initializes a new instance of `XMLDocument`

      // `options.keepNullNodes` whether nodes with null values will be kept
      //     or ignored: true or false
      // `options.keepNullAttributes` whether attributes with null values will be
      //     kept or ignored: true or false
      // `options.ignoreDecorators` whether decorator strings will be ignored when
      //     converting JS objects: true or false
      // `options.separateArrayItems` whether array items are created as separate
      //     nodes when passed as an object value: true or false
      // `options.noDoubleEncoding` whether existing html entities are encoded:
      //     true or false
      // `options.stringify` a set of functions to use for converting values to
      //     strings
      // `options.writer` the default XML writer to use for converting nodes to
      //     string. If the default writer is not set, the built-in XMLStringWriter
      //     will be used instead.
      constructor(options) {
        super(null);
        this.name = "#document";
        this.type = NodeType.Document;
        this.documentURI = null;
        this.domConfig = new XMLDOMConfiguration();
        options || (options = {});
        if (!options.writer) {
          options.writer = new XMLStringWriter();
        }
        this.options = options;
        this.stringify = new XMLStringifier(options);
      }

      // Ends the document and passes it to the given XML writer

      // `writer` is either an XML writer or a plain object to pass to the
      // constructor of the default XML writer. The default writer is assigned when
      // creating the XML document. Following flags are recognized by the
      // built-in XMLStringWriter:
      //   `writer.pretty` pretty prints the result
      //   `writer.indent` indentation for pretty print
      //   `writer.offset` how many indentations to add to every line for pretty print
      //   `writer.newline` newline sequence for pretty print
      end(writer) {
        var writerOptions;
        writerOptions = {};
        if (!writer) {
          writer = this.options.writer;
        } else if (isPlainObject(writer)) {
          writerOptions = writer;
          writer = this.options.writer;
        }
        return writer.document(this, writer.filterOptions(writerOptions));
      }

      // Converts the XML document to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.document(this, this.options.writer.filterOptions(options));
      }

      // DOM level 1 functions to be implemented later
      createElement(tagName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createDocumentFragment() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createTextNode(data) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createComment(data) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createCDATASection(data) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createProcessingInstruction(target, data) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createAttribute(name) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createEntityReference(name) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByTagName(tagname) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM level 2 functions to be implemented later
      importNode(importedNode, deep) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createElementNS(namespaceURI, qualifiedName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createAttributeNS(namespaceURI, qualifiedName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementsByTagNameNS(namespaceURI, localName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      getElementById(elementId) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM level 3 functions to be implemented later
      adoptNode(source) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      normalizeDocument() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      renameNode(node, namespaceURI, qualifiedName) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      // DOM level 4 functions to be implemented later
      getElementsByClassName(classNames) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createEvent(eventInterface) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createRange() {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createNodeIterator(root, whatToShow, filter) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

      createTreeWalker(root, whatToShow, filter) {
        throw new Error("This DOM method is not implemented." + this.debugInfo());
      }

    };

    // DOM level 1
    Object.defineProperty(XMLDocument.prototype, 'implementation', {
      value: new XMLDOMImplementation()
    });

    Object.defineProperty(XMLDocument.prototype, 'doctype', {
      get: function() {
        var child, i, len, ref;
        ref = this.children;
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          if (child.type === NodeType.DocType) {
            return child;
          }
        }
        return null;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'documentElement', {
      get: function() {
        return this.rootObject || null;
      }
    });

    // DOM level 3
    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {
      get: function() {
        return false;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {
      get: function() {
        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {
          return this.children[0].encoding;
        } else {
          return null;
        }
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {
      get: function() {
        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {
          return this.children[0].standalone === 'yes';
        } else {
          return false;
        }
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {
      get: function() {
        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {
          return this.children[0].version;
        } else {
          return "1.0";
        }
      }
    });

    // DOM level 4
    Object.defineProperty(XMLDocument.prototype, 'URL', {
      get: function() {
        return this.documentURI;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'origin', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'compatMode', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'characterSet', {
      get: function() {
        return null;
      }
    });

    Object.defineProperty(XMLDocument.prototype, 'contentType', {
      get: function() {
        return null;
      }
    });

    return XMLDocument;

  }).call(this);

}).call(this);


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLAttribute, XMLNode;

  NodeType = __webpack_require__(6);

  XMLNode = __webpack_require__(20);

  // Represents an attribute
  module.exports = XMLAttribute = (function() {
    class XMLAttribute {
      // Initializes a new instance of `XMLAttribute`

      // `parent` the parent node
      // `name` attribute target
      // `value` attribute value
      constructor(parent, name, value) {
        this.parent = parent;
        if (this.parent) {
          this.options = this.parent.options;
          this.stringify = this.parent.stringify;
        }
        if (name == null) {
          throw new Error("Missing attribute name. " + this.debugInfo(name));
        }
        this.name = this.stringify.name(name);
        this.value = this.stringify.attValue(value);
        this.type = NodeType.Attribute;
        // DOM level 3
        this.isId = false;
        this.schemaTypeInfo = null;
      }

      // Creates and returns a deep clone of `this`
      clone() {
        return Object.create(this);
      }

      // Converts the XML fragment to string

      // `options.pretty` pretty prints the result
      // `options.indent` indentation for pretty print
      // `options.offset` how many indentations to add to every line for pretty print
      // `options.newline` newline sequence for pretty print
      toString(options) {
        return this.options.writer.attribute(this, this.options.writer.filterOptions(options));
      }

      
      // Returns debug string for this node
      debugInfo(name) {
        name = name || this.name;
        if (name == null) {
          return "parent: <" + this.parent.name + ">";
        } else {
          return "attribute: {" + name + "}, parent: <" + this.parent.name + ">";
        }
      }

      isEqualNode(node) {
        if (node.namespaceURI !== this.namespaceURI) {
          return false;
        }
        if (node.prefix !== this.prefix) {
          return false;
        }
        if (node.localName !== this.localName) {
          return false;
        }
        if (node.value !== this.value) {
          return false;
        }
        return true;
      }

    };

    // DOM level 1
    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {
      get: function() {
        return this.type;
      }
    });

    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {
      get: function() {
        return this.parent;
      }
    });

    // DOM level 3
    Object.defineProperty(XMLAttribute.prototype, 'textContent', {
      get: function() {
        return this.value;
      },
      set: function(value) {
        return this.value = value || '';
      }
    });

    // DOM level 4
    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {
      get: function() {
        return '';
      }
    });

    Object.defineProperty(XMLAttribute.prototype, 'prefix', {
      get: function() {
        return '';
      }
    });

    Object.defineProperty(XMLAttribute.prototype, 'localName', {
      get: function() {
        return this.name;
      }
    });

    Object.defineProperty(XMLAttribute.prototype, 'specified', {
      get: function() {
        return true;
      }
    });

    return XMLAttribute;

  }).call(this);

}).call(this);


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, XMLDummy, XMLNode;

  XMLNode = __webpack_require__(20);

  NodeType = __webpack_require__(6);

  // Represents a  raw node
  module.exports = XMLDummy = class XMLDummy extends XMLNode {
    // Initializes a new instance of `XMLDummy`

    // `XMLDummy` is a special node representing a node with 
    // a null value. Dummy nodes are created while recursively
    // building the XML tree. Simply skipping null values doesn't
    // work because that would break the recursive chain.
    constructor(parent) {
      super(parent);
      this.type = NodeType.Dummy;
    }

    // Creates and returns a deep clone of `this`
    clone() {
      return Object.create(this);
    }

    // Converts the XML fragment to string

    // `options.pretty` pretty prints the result
    // `options.indent` indentation for pretty print
    // `options.offset` how many indentations to add to every line for pretty print
    // `options.newline` newline sequence for pretty print
    toString(options) {
      return '';
    }

  };

}).call(this);


/***/ }),
/* 236 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Converts values to strings
  var XMLStringifier,
    hasProp = {}.hasOwnProperty;

  module.exports = XMLStringifier = (function() {
    class XMLStringifier {
      // Initializes a new instance of `XMLStringifier`

      // `options.version` The version number string of the XML spec to validate against, e.g. 1.0
      // `options.noDoubleEncoding` whether existing html entities are encoded: true or false
      // `options.stringify` a set of functions to use for converting values to strings
      // `options.noValidation` whether values will be validated and escaped or returned as is
      // `options.invalidCharReplacement` a character to replace invalid characters and disable character validation
      constructor(options) {
        var key, ref, value;
        // Checks whether the given string contains legal characters
        // Fails with an exception on error

        // `str` the string to check
        this.assertLegalChar = this.assertLegalChar.bind(this);
        // Checks whether the given string contains legal characters for a name
        // Fails with an exception on error

        // `str` the string to check
        this.assertLegalName = this.assertLegalName.bind(this);
        options || (options = {});
        this.options = options;
        if (!this.options.version) {
          this.options.version = '1.0';
        }
        ref = options.stringify || {};
        for (key in ref) {
          if (!hasProp.call(ref, key)) continue;
          value = ref[key];
          this[key] = value;
        }
      }

      // Defaults
      name(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalName('' + val || '');
      }

      text(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar(this.textEscape('' + val || ''));
      }

      cdata(val) {
        if (this.options.noValidation) {
          return val;
        }
        val = '' + val || '';
        val = val.replace(']]>', ']]]]><![CDATA[>');
        return this.assertLegalChar(val);
      }

      comment(val) {
        if (this.options.noValidation) {
          return val;
        }
        val = '' + val || '';
        if (val.match(/--/)) {
          throw new Error("Comment text cannot contain double-hypen: " + val);
        }
        return this.assertLegalChar(val);
      }

      raw(val) {
        if (this.options.noValidation) {
          return val;
        }
        return '' + val || '';
      }

      attValue(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar(this.attEscape(val = '' + val || ''));
      }

      insTarget(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      insValue(val) {
        if (this.options.noValidation) {
          return val;
        }
        val = '' + val || '';
        if (val.match(/\?>/)) {
          throw new Error("Invalid processing instruction value: " + val);
        }
        return this.assertLegalChar(val);
      }

      xmlVersion(val) {
        if (this.options.noValidation) {
          return val;
        }
        val = '' + val || '';
        if (!val.match(/1\.[0-9]+/)) {
          throw new Error("Invalid version number: " + val);
        }
        return val;
      }

      xmlEncoding(val) {
        if (this.options.noValidation) {
          return val;
        }
        val = '' + val || '';
        if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {
          throw new Error("Invalid encoding: " + val);
        }
        return this.assertLegalChar(val);
      }

      xmlStandalone(val) {
        if (this.options.noValidation) {
          return val;
        }
        if (val) {
          return "yes";
        } else {
          return "no";
        }
      }

      dtdPubID(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdSysID(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdElementValue(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdAttType(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdAttDefault(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdEntityValue(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      dtdNData(val) {
        if (this.options.noValidation) {
          return val;
        }
        return this.assertLegalChar('' + val || '');
      }

      assertLegalChar(str) {
        var regex, res;
        if (this.options.noValidation) {
          return str;
        }
        if (this.options.version === '1.0') {
          // Valid characters from https://www.w3.org/TR/xml/#charsets
          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.
          // #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]
          // This ES5 compatible Regexp has been generated using the "regenerate" NPM module:
          //   let xml_10_InvalidChars = regenerate()
          //     .addRange(0x0000, 0x0008)
          //     .add(0x000B, 0x000C)
          //     .addRange(0x000E, 0x001F)
          //     .addRange(0xD800, 0xDFFF)
          //     .addRange(0xFFFE, 0xFFFF)
          regex = /[\0-\x08\x0B\f\x0E-\x1F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g;
          if (this.options.invalidCharReplacement !== void 0) {
            str = str.replace(regex, this.options.invalidCharReplacement);
          } else if (res = str.match(regex)) {
            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);
          }
        } else if (this.options.version === '1.1') {
          // Valid characters from https://www.w3.org/TR/xml11/#charsets
          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.
          // [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]
          // This ES5 compatible Regexp has been generated using the "regenerate" NPM module:
          //   let xml_11_InvalidChars = regenerate()
          //     .add(0x0000)
          //     .addRange(0xD800, 0xDFFF)
          //     .addRange(0xFFFE, 0xFFFF)
          regex = /[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g;
          if (this.options.invalidCharReplacement !== void 0) {
            str = str.replace(regex, this.options.invalidCharReplacement);
          } else if (res = str.match(regex)) {
            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);
          }
        }
        return str;
      }

      assertLegalName(str) {
        var regex;
        if (this.options.noValidation) {
          return str;
        }
        str = this.assertLegalChar(str);
        regex = /^([:A-Z_a-z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])([\x2D\.0-:A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*$/;
        if (!str.match(regex)) {
          throw new Error(`Invalid character in name: ${str}`);
        }
        return str;
      }

      // Escapes special characters in text

      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping

      // `str` the string to escape
      textEscape(str) {
        var ampregex;
        if (this.options.noValidation) {
          return str;
        }
        ampregex = this.options.noDoubleEncoding ? /(?!&(lt|gt|amp|apos|quot);)&/g : /&/g;
        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\r/g, '&#xD;');
      }

      // Escapes special characters in attribute values

      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping

      // `str` the string to escape
      attEscape(str) {
        var ampregex;
        if (this.options.noValidation) {
          return str;
        }
        ampregex = this.options.noDoubleEncoding ? /(?!&(lt|gt|amp|apos|quot);)&/g : /&/g;
        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/"/g, '&quot;').replace(/\t/g, '&#x9;').replace(/\n/g, '&#xA;').replace(/\r/g, '&#xD;');
      }

    };

    // strings to match while converting from JS objects
    XMLStringifier.prototype.convertAttKey = '@';

    XMLStringifier.prototype.convertPIKey = '?';

    XMLStringifier.prototype.convertTextKey = '#text';

    XMLStringifier.prototype.convertCDataKey = '#cdata';

    XMLStringifier.prototype.convertCommentKey = '#comment';

    XMLStringifier.prototype.convertRawKey = '#raw';

    return XMLStringifier;

  }).call(this);

}).call(this);


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,
    hasProp = {}.hasOwnProperty;

  ({assign} = __webpack_require__(24));

  NodeType = __webpack_require__(6);

  XMLDeclaration = __webpack_require__(94);

  XMLDocType = __webpack_require__(95);

  XMLCData = __webpack_require__(92);

  XMLComment = __webpack_require__(93);

  XMLElement = __webpack_require__(90);

  XMLRaw = __webpack_require__(100);

  XMLText = __webpack_require__(101);

  XMLProcessingInstruction = __webpack_require__(102);

  XMLDummy = __webpack_require__(235);

  XMLDTDAttList = __webpack_require__(96);

  XMLDTDElement = __webpack_require__(98);

  XMLDTDEntity = __webpack_require__(97);

  XMLDTDNotation = __webpack_require__(99);

  WriterState = __webpack_require__(59);

  // Base class for XML writers
  module.exports = XMLWriterBase = class XMLWriterBase {
    // Initializes a new instance of `XMLWriterBase`

    // `options.pretty` pretty prints the result
    // `options.indent` indentation string
    // `options.newline` newline sequence
    // `options.offset` a fixed number of indentations to add to every line
    // `options.width` maximum column width
    // `options.allowEmpty` do not self close empty element tags
    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF
    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements
    constructor(options) {
      var key, ref, value;
      options || (options = {});
      this.options = options;
      ref = options.writer || {};
      for (key in ref) {
        if (!hasProp.call(ref, key)) continue;
        value = ref[key];
        this["_" + key] = this[key];
        this[key] = value;
      }
    }

    // Filters writer options and provides defaults

    // `options` writer options
    filterOptions(options) {
      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;
      options || (options = {});
      options = assign({}, this.options, options);
      filteredOptions = {
        writer: this
      };
      filteredOptions.pretty = options.pretty || false;
      filteredOptions.allowEmpty = options.allowEmpty || false;
      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';
      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\n';
      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;
      filteredOptions.width = (ref3 = options.width) != null ? ref3 : 0;
      filteredOptions.dontPrettyTextNodes = (ref4 = (ref5 = options.dontPrettyTextNodes) != null ? ref5 : options.dontprettytextnodes) != null ? ref4 : 0;
      filteredOptions.spaceBeforeSlash = (ref6 = (ref7 = options.spaceBeforeSlash) != null ? ref7 : options.spacebeforeslash) != null ? ref6 : '';
      if (filteredOptions.spaceBeforeSlash === true) {
        filteredOptions.spaceBeforeSlash = ' ';
      }
      filteredOptions.suppressPrettyCount = 0;
      filteredOptions.user = {};
      filteredOptions.state = WriterState.None;
      return filteredOptions;
    }

    // Returns the indentation string for the current level

    // `node` current node
    // `options` writer options
    // `level` current indentation level
    indent(node, options, level) {
      var indentLevel;
      if (!options.pretty || options.suppressPrettyCount) {
        return '';
      } else if (options.pretty) {
        indentLevel = (level || 0) + options.offset + 1;
        if (indentLevel > 0) {
          return new Array(indentLevel).join(options.indent);
        }
      }
      return '';
    }

    // Returns the newline string

    // `node` current node
    // `options` writer options
    // `level` current indentation level
    endline(node, options, level) {
      if (!options.pretty || options.suppressPrettyCount) {
        return '';
      } else {
        return options.newline;
      }
    }

    attribute(att, options, level) {
      var r;
      this.openAttribute(att, options, level);
      if (options.pretty && options.width > 0) {
        r = att.name + '="' + att.value + '"';
      } else {
        r = ' ' + att.name + '="' + att.value + '"';
      }
      this.closeAttribute(att, options, level);
      return r;
    }

    cdata(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<![CDATA[';
      options.state = WriterState.InsideTag;
      r += node.value;
      options.state = WriterState.CloseTag;
      r += ']]>' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    comment(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<!-- ';
      options.state = WriterState.InsideTag;
      r += node.value;
      options.state = WriterState.CloseTag;
      r += ' -->' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    declaration(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<?xml';
      options.state = WriterState.InsideTag;
      r += ' version="' + node.version + '"';
      if (node.encoding != null) {
        r += ' encoding="' + node.encoding + '"';
      }
      if (node.standalone != null) {
        r += ' standalone="' + node.standalone + '"';
      }
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '?>';
      r += this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    docType(node, options, level) {
      var child, i, len1, r, ref;
      level || (level = 0);
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level);
      r += '<!DOCTYPE ' + node.root().name;
      // external identifier
      if (node.pubID && node.sysID) {
        r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
      } else if (node.sysID) {
        r += ' SYSTEM "' + node.sysID + '"';
      }
      // internal subset
      if (node.children.length > 0) {
        r += ' [';
        r += this.endline(node, options, level);
        options.state = WriterState.InsideTag;
        ref = node.children;
        for (i = 0, len1 = ref.length; i < len1; i++) {
          child = ref[i];
          r += this.writeChildNode(child, options, level + 1);
        }
        options.state = WriterState.CloseTag;
        r += ']';
      }
      // close tag
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '>';
      r += this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    element(node, options, level) {
      var att, attLen, child, childNodeCount, firstChildNode, i, j, len, len1, len2, name, prettySuppressed, r, ratt, ref, ref1, ref2, ref3, rline;
      level || (level = 0);
      prettySuppressed = false;
      // open tag
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<' + node.name;
      // attributes
      if (options.pretty && options.width > 0) {
        len = r.length;
        ref = node.attribs;
        for (name in ref) {
          if (!hasProp.call(ref, name)) continue;
          att = ref[name];
          ratt = this.attribute(att, options, level);
          attLen = ratt.length;
          if (len + attLen > options.width) {
            rline = this.indent(node, options, level + 1) + ratt;
            r += this.endline(node, options, level) + rline;
            len = rline.length;
          } else {
            rline = ' ' + ratt;
            r += rline;
            len += rline.length;
          }
        }
      } else {
        ref1 = node.attribs;
        for (name in ref1) {
          if (!hasProp.call(ref1, name)) continue;
          att = ref1[name];
          r += this.attribute(att, options, level);
        }
      }
      childNodeCount = node.children.length;
      firstChildNode = childNodeCount === 0 ? null : node.children[0];
      if (childNodeCount === 0 || node.children.every(function(e) {
        return (e.type === NodeType.Text || e.type === NodeType.Raw || e.type === NodeType.CData) && e.value === '';
      })) {
        // empty element
        if (options.allowEmpty) {
          r += '>';
          options.state = WriterState.CloseTag;
          r += '</' + node.name + '>' + this.endline(node, options, level);
        } else {
          options.state = WriterState.CloseTag;
          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);
        }
      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw || firstChildNode.type === NodeType.CData) && (firstChildNode.value != null)) {
        // do not indent text-only nodes
        r += '>';
        options.state = WriterState.InsideTag;
        options.suppressPrettyCount++;
        prettySuppressed = true;
        r += this.writeChildNode(firstChildNode, options, level + 1);
        options.suppressPrettyCount--;
        prettySuppressed = false;
        options.state = WriterState.CloseTag;
        r += '</' + node.name + '>' + this.endline(node, options, level);
      } else {
        // if ANY are a text node, then suppress pretty now
        if (options.dontPrettyTextNodes) {
          ref2 = node.children;
          for (i = 0, len1 = ref2.length; i < len1; i++) {
            child = ref2[i];
            if ((child.type === NodeType.Text || child.type === NodeType.Raw || child.type === NodeType.CData) && (child.value != null)) {
              options.suppressPrettyCount++;
              prettySuppressed = true;
              break;
            }
          }
        }
        // close the opening tag, after dealing with newline
        r += '>' + this.endline(node, options, level);
        options.state = WriterState.InsideTag;
        ref3 = node.children;
        // inner tags
        for (j = 0, len2 = ref3.length; j < len2; j++) {
          child = ref3[j];
          r += this.writeChildNode(child, options, level + 1);
        }
        // close tag
        options.state = WriterState.CloseTag;
        r += this.indent(node, options, level) + '</' + node.name + '>';
        if (prettySuppressed) {
          options.suppressPrettyCount--;
        }
        r += this.endline(node, options, level);
        options.state = WriterState.None;
      }
      this.closeNode(node, options, level);
      return r;
    }

    writeChildNode(node, options, level) {
      switch (node.type) {
        case NodeType.CData:
          return this.cdata(node, options, level);
        case NodeType.Comment:
          return this.comment(node, options, level);
        case NodeType.Element:
          return this.element(node, options, level);
        case NodeType.Raw:
          return this.raw(node, options, level);
        case NodeType.Text:
          return this.text(node, options, level);
        case NodeType.ProcessingInstruction:
          return this.processingInstruction(node, options, level);
        case NodeType.Dummy:
          return '';
        case NodeType.Declaration:
          return this.declaration(node, options, level);
        case NodeType.DocType:
          return this.docType(node, options, level);
        case NodeType.AttributeDeclaration:
          return this.dtdAttList(node, options, level);
        case NodeType.ElementDeclaration:
          return this.dtdElement(node, options, level);
        case NodeType.EntityDeclaration:
          return this.dtdEntity(node, options, level);
        case NodeType.NotationDeclaration:
          return this.dtdNotation(node, options, level);
        default:
          throw new Error("Unknown XML node type: " + node.constructor.name);
      }
    }

    processingInstruction(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<?';
      options.state = WriterState.InsideTag;
      r += node.target;
      if (node.value) {
        r += ' ' + node.value;
      }
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '?>';
      r += this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    raw(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level);
      options.state = WriterState.InsideTag;
      r += node.value;
      options.state = WriterState.CloseTag;
      r += this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    text(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level);
      options.state = WriterState.InsideTag;
      r += node.value;
      options.state = WriterState.CloseTag;
      r += this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    dtdAttList(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<!ATTLIST';
      options.state = WriterState.InsideTag;
      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;
      if (node.defaultValueType !== '#DEFAULT') {
        r += ' ' + node.defaultValueType;
      }
      if (node.defaultValue) {
        r += ' "' + node.defaultValue + '"';
      }
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    dtdElement(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<!ELEMENT';
      options.state = WriterState.InsideTag;
      r += ' ' + node.name + ' ' + node.value;
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    dtdEntity(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<!ENTITY';
      options.state = WriterState.InsideTag;
      if (node.pe) {
        r += ' %';
      }
      r += ' ' + node.name;
      if (node.value) {
        r += ' "' + node.value + '"';
      } else {
        if (node.pubID && node.sysID) {
          r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
        } else if (node.sysID) {
          r += ' SYSTEM "' + node.sysID + '"';
        }
        if (node.nData) {
          r += ' NDATA ' + node.nData;
        }
      }
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    dtdNotation(node, options, level) {
      var r;
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<!NOTATION';
      options.state = WriterState.InsideTag;
      r += ' ' + node.name;
      if (node.pubID && node.sysID) {
        r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
      } else if (node.pubID) {
        r += ' PUBLIC "' + node.pubID + '"';
      } else if (node.sysID) {
        r += ' SYSTEM "' + node.sysID + '"';
      }
      options.state = WriterState.CloseTag;
      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);
      options.state = WriterState.None;
      this.closeNode(node, options, level);
      return r;
    }

    openNode(node, options, level) {}

    closeNode(node, options, level) {}

    openAttribute(att, options, level) {}

    closeAttribute(att, options, level) {}

  };

}).call(this);


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// String encode/decode helpers



var utils = __webpack_require__(27);


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
var STR_APPLY_OK = true;
var STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }
try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new utils.Buf8(256);
for (var q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
exports.string2buf = function (str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new utils.Buf8(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper (used in 2 places)
function buf2binstring(buf, len) {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {
      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
    }
  }

  var result = '';
  for (var i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}


// Convert byte array to binary string
exports.buf2binstring = function (buf) {
  return buf2binstring(buf, buf.length);
};


// Convert binary string (typed, when possible)
exports.binstring2buf = function (str) {
  var buf = new utils.Buf8(str.length);
  for (var i = 0, len = buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
};


// convert array to string
exports.buf2string = function (buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  var utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
exports.utf8border = function (buf, max) {
  var pos;

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60),
    stackClear = __webpack_require__(669),
    stackDelete = __webpack_require__(670),
    stackGet = __webpack_require__(671),
    stackHas = __webpack_require__(672),
    stackSet = __webpack_require__(673);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 245 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(680),
    mapCacheDelete = __webpack_require__(687),
    mapCacheGet = __webpack_require__(689),
    mapCacheHas = __webpack_require__(690),
    mapCacheSet = __webpack_require__(691);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(692),
    arraySome = __webpack_require__(695),
    cacheHas = __webpack_require__(696);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(23);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(708),
    isArguments = __webpack_require__(250),
    isArray = __webpack_require__(64),
    isBuffer = __webpack_require__(108),
    isIndex = __webpack_require__(251),
    isTypedArray = __webpack_require__(109);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(709),
    isObjectLike = __webpack_require__(38);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 251 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 252 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 253 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(111),
    eq = __webpack_require__(48);

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(253);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 257 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(249),
    baseKeysIn = __webpack_require__(738),
    isArrayLike = __webpack_require__(65);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 259 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
var _index = _interopRequireDefault(__webpack_require__(407));
var _mcsdk = __webpack_require__(86);
var env = window.EnvConfig;
var agarApp = window.agarApp;
var EnvConfig = window.EnvConfig;

// Home Page
agarApp.home = new _index["default"](agarApp);
agarApp.MCSDK = new _mcsdk.MCSDK(window, env.goliathUrl, env.apiKey, env.checksumKey);

// TODO: This should be passed as parameter to supersonic
window.ssa_json['applicationKey'] = EnvConfig['supersonic_app_key'];

// SUPERSONIC ADS
(function (d, t) {
  var g = d.createElement(t);
  var s = d.getElementsByTagName(t)[0];
  g.async = true;
  g.src = ('https:' != location.protocol ? 'http://jsd.supersonicads.com' : 'https://a248.e.akamai.net/ssastatic.s3.amazonaws.com') + '/inlineDelivery/delivery.min.gz.js';
  s.parentNode.insertBefore(g, s);
})(document, 'script');

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;
var _vue = _interopRequireDefault(__webpack_require__(37));
var _Home = _interopRequireDefault(__webpack_require__(408));
var _vTooltip = _interopRequireDefault(__webpack_require__(659));
_vue["default"].use(_vTooltip["default"]);
function _default(agarApp) {
  return new _vue["default"]({
    el: '#home',
    render: function render(h) {
      return h(_Home["default"]);
    },
    components: {
      Home: _Home["default"]
    },
    template: '<Home/>'
  });
}

/***/ }),
/* 408 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_9c4d2b0c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__ = __webpack_require__(658);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(409)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-9c4d2b0c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_9c4d2b0c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_9c4d2b0c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/Home.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9c4d2b0c", Component.options)
  } else {
    hotAPI.reload("data-v-9c4d2b0c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(410);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("e59d5582", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-9c4d2b0c\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Home.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-9c4d2b0c\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Home.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.hidden[data-v-9c4d2b0c] {\n    display: none;\n}\n.text-muted[data-v-9c4d2b0c] {\n    display: block;\n    margin: 5px;\n    font-weight: bold;\n    color: #777777;\n}\n.partymode-info[data-v-9c4d2b0c] {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: 1000;\n    color: white;\n    font-size: 14px;\n}\n.partymode-info > div[data-v-9c4d2b0c] {\n    background-color: rgba(0,0,0,0.4);\n}\n.partymode-info > #label[data-v-9c4d2b0c] {\n    padding: 5px 5px 0px 5px;\n}\n.partymode-info > #code[data-v-9c4d2b0c] {\n    padding: 0px 5px 5px 5px;\n}\n.partymode-info > #code[data-v-9c4d2b0c] {\n    position: relative;\n    margin-bottom: 5px;\n}\n#fullSpectate[data-v-9c4d2b0c] {\n    width: 170px;\n    height: 30px;\n    position: relative;\n    background-color: white;\n    border-radius: 10px;\n    padding: 20px;\n    top: 20px;\n    right: 20px;\n    float: right;\n}\n#fullSpectate > .text[data-v-9c4d2b0c] {\n    position: relative;\n    float: left;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n#fullSpectate > .Close[data-v-9c4d2b0c] {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n    margin: 10px;\n    opacity: 0.5;\n}\n#fullSpectate > .Close[data-v-9c4d2b0c]:hover {\n    opacity: 1;\n}\n.offerwall-btn[data-v-9c4d2b0c] {\n    position: absolute;\n    right: 10px;\n    top: 4px;\n}\n#offerwallIframeWrapper[data-v-9c4d2b0c] {\n    width: 100%;\n    height: 100%;\n}\n.drop-enter-active[data-v-9c4d2b0c], .drop-leave-active[data-v-9c4d2b0c] {\n  transition: all .5s ease;\n}\n.drop-enter[data-v-9c4d2b0c], .drop-leave-to[data-v-9c4d2b0c] {\n  transform: translateY(-200px);\n}\n\n", ""]);

// exports


/***/ }),
/* 411 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = listToStyles;
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 412 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue__ = __webpack_require__(169);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8f543d2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ChangeLog_vue__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(413)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-8f543d2e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ChangeLog_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8f543d2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ChangeLog_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8f543d2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ChangeLog_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/ChangeLog.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8f543d2e", Component.options)
  } else {
    hotAPI.reload("data-v-8f543d2e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(414);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("7abd1e37", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-8f543d2e\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ChangeLog.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-8f543d2e\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ChangeLog.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#changelog[data-v-8f543d2e] {\n    padding: 15px 0 15px 15px;\n    color: #777;\n    border: 1px solid #777;\n    border-radius: 5px 0px 0px 5px;\n    bottom: 30px;\n    position: absolute;\n    right: 0px;\n    width: 450px;\n    z-index: 1000;\n    font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n    font-size: 14px;\n    background-color: #fff;\n}\n#changelog h4[data-v-8f543d2e] {\n    margin: 0;\n    display: inline-block;\n}\n#changelog h4 > span[data-v-8f543d2e] {\n    display: inline-block;\n    color: #53C802;\n}\n#changelog h4 > span[data-v-8f543d2e]:first-child {\n    width: 72px;\n}\n#changelog h3[data-v-8f543d2e] {\n    color: #53C802;\n    margin-top: 0;\n}\n#changelog .version + .version[data-v-8f543d2e] {\n    margin-top: 2px;\n}\n", ""]);

// exports


/***/ }),
/* 415 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5e0c88c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Collapse_vue__ = __webpack_require__(418);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(416)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-5e0c88c8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Collapse_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5e0c88c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Collapse_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5e0c88c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Collapse_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/Collapse.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5e0c88c8", Component.options)
  } else {
    hotAPI.reload("data-v-5e0c88c8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(417);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("77b59214", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-5e0c88c8\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Collapse.vue", function() {
     var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-5e0c88c8\",\"scoped\":true,\"sourceMap\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Collapse.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.collapse-item[data-v-5e0c88c8] {\n  background-color: #f6f6f6;\n  padding: 5px;\n  border-radius: 3px;\n  margin-right: 15px;\n}\n.collapse-header > i[data-v-5e0c88c8] {\n  position: relative;\n  top: -1px;\n  display: inline-block;\n  margin-left: 8px;\n  margin-bottom: 3px;\n  font-weight: 400;\n  font-size: 10px;\n  color: #53C802;\n}\n", ""]);

// exports


/***/ }),
/* 418 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "collapse collapse-item",
      class: { "is-active": _vm.active }
    },
    [
      _c(
        "div",
        {
          staticClass: "collapse-header touchable",
          attrs: {
            role: "tab",
            "aria-expanded": _vm.active ? "true" : "false"
          },
          on: {
            click: function($event) {
              $event.preventDefault()
              return _vm.toggle.apply(null, arguments)
            }
          }
        },
        [
          _vm._t("collapse-header"),
          _c("i", [_vm._v(_vm._s(_vm.active ? "▲" : "▼"))])
        ],
        2
      ),
      _vm._v(" "),
      _c("transition", { attrs: { name: "fade" } }, [
        _vm.active
          ? _c("div", { staticClass: "collapse-content" }, [
              _c(
                "div",
                { staticClass: "collapse-content-box" },
                [_vm._t("collapse-body")],
                2
              )
            ])
          : _vm._e()
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5e0c88c8", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "changelog" } },
    [
      _c("h3", [_vm._v("CHANGELOG")]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("14 Jun'21")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Remove recaptcha")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [_vm._v("Remove all recaptcha requests")])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("17 Jan'20")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Improved Recaptcha behaviour")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [_vm._v("Reduce recaptcha requests per game")])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("28 May'19")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Revamped Teams Mode")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [
            _vm._v("Help your team to be number 1 and get a mystery potion")
          ]),
          _vm._v(" "),
          _c("li", [_vm._v("All players with same colour are in your team")]),
          _vm._v(" "),
          _c("li", [_vm._v("Minimum 20 players per match")]),
          _vm._v(" "),
          _c("li", [_vm._v("You have 5 minutes to absorb the other team")])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("10 Aug'18")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Improved Main Menu UI")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [_vm._v("General reposition of all menus")]),
          _vm._v(" "),
          _c("li", [_vm._v("All game modes more visible")]),
          _vm._v(" "),
          _c("li", [_vm._v("Mystery Potions more accessible")])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("21 May'18")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" NEW Game Mode -  Battle Royale")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [
            _vm._v("Stay inside the safe area to survive as long as you can")
          ]),
          _vm._v(" "),
          _c("li", [_vm._v("Beware of the red area")]),
          _vm._v(" "),
          _c("li", [_vm._v("Be the last one standing and dominate the arena")])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("22 Feb'18")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Weekly Leaderboards")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [
            _vm._v(
              "Rise to the top and get amazing rewards in our BRAND NEW weekly leaderboards!"
            )
          ]),
          _vm._v(" "),
          _c("li", [
            _vm._v("Collect trophies and compete against other players!")
          ]),
          _vm._v(" "),
          _c("li", [
            _vm._v(
              "Check out all leaderboards available: Leagues, Friends, Country, Worldwide"
            )
          ])
        ])
      ]),
      _vm._v(" "),
      _c("collapse", { staticClass: "version" }, [
        _c(
          "h4",
          { attrs: { slot: "collapse-header" }, slot: "collapse-header" },
          [
            _c("span", [_vm._v("17 Nov'17")]),
            _c("span", [_vm._v("᛫")]),
            _vm._v(" Mystery Potions")
          ]
        ),
        _vm._v(" "),
        _c("ul", { attrs: { slot: "collapse-body" }, slot: "collapse-body" }, [
          _c("li", [
            _vm._v(
              "Earn Mystery Potions; eat your way to the top for the best prizes!"
            )
          ]),
          _vm._v(" "),
          _c("li", [
            _vm._v("Introducing Upgradable and ANIMATED Mystery Skins!")
          ]),
          _vm._v(" "),
          _c("li", [_vm._v("Quest for all new DNA to unlock amazing rewards!")])
        ])
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-8f543d2e", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_04522a78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Menu_vue__ = __webpack_require__(491);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(421)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-04522a78"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Menu_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_04522a78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Menu_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_04522a78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Menu_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/Menu.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-04522a78", Component.options)
  } else {
    hotAPI.reload("data-v-04522a78", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(422);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("6214935a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-04522a78\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Menu.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-04522a78\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Menu.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.i(__webpack_require__(423), "");

// module
exports.push([module.i, "\n.hidden[data-v-04522a78] {\n    display: none;\n}\n.fade-slow-enter-active[data-v-04522a78] {\n  transition: opacity .5s;\n  transition-delay: 2.5s;\n}\n.fade-fast-enter-active[data-v-04522a78] {\n  transition: opacity .5s;\n}\n.fade-slow-enter[data-v-04522a78] {\n  opacity: 0;\n}\n.fade-fast-enter[data-v-04522a78] {\n  opacity: 0;\n}\n\n", ""]);

// exports


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "#mainui-app {\n    display: block;\n    position: fixed;\n    width: 985px;\n    height: 600px;\n    top: 45%;\n    left: 50%;\n    z-index: 0;\n    color: #343434;\n    transform: translate(-50%, -50%);\n}\n\n#mainui-grid {\n    display: flex;\n    column-count: 3;\n    justify-content: space-between;\n}\n\n#mainui-grid > div {\n    display: inline-block;\n    width: 325px;\n}\n\n#mainui-ads, #agar-io_300x250, #mainui-features, #mainui-modes, #mainui-offers, #mainui-party, #mainui-play, #mainui-promo, #mainui-user{\n    background-color: #fff;\n    border-radius: 10px;\n    margin: 5px 0px;\n    width: 325px;\n}\n\n#mainui-user, #mainui-modes {\n    height: 180px;\n}\n\n#mainui-offers, #mainui-party {\n    height: 117px;\n}\n\n#mainui-features, #mainui-promo {\n    height: 288px;\n}\n\n#mainui-play {\n    height: 302px;\n}\n\n#mainui-ads, #agar-io_300x250 {\n    /* height: 288px; */\n}\n\n.promo-badge-frame {\n    max-width: 170px;\n    max-height: 60px;\n    margin-right: -20px;\n}\n\n.checkbox {\n    padding-left: 20px;\n}\n\n.checkbox label {\n    display: inline-block;\n    vertical-align: middle;\n    position: relative;\n    padding-left: 5px;\n}\n\n.checkbox label::before {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    width: 12px;\n    height: 12px;\n    left: 0;\n    margin-left: -20px;\n    border: 1px solid #cccccc;\n    border-radius: 3px;\n    background-color: #fff;\n    -webkit-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;\n    -o-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;\n    transition: border 0.15s ease-in-out, color 0.15s ease-in-out;\n}\n\n.checkbox label::after {\n    display: inline-block;\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    left: 0;\n    top: 0;\n    margin-left: -20px;\n    padding-left: 3px;\n    padding-top: 1px;\n    font-size: 11px;\n    color: #555555;\n}\n\n.checkbox input[type=\"checkbox\"],\n.checkbox input[type=\"radio\"] {\n    opacity: 0;\n    z-index: 1;\n    cursor: pointer;\n}\n\n.checkbox input[type=\"checkbox\"]:focus+label::before,\n.checkbox input[type=\"radio\"]:focus+label::before {\n    outline: thin dotted;\n    outline: 5px auto -webkit-focus-ring-color;\n    outline-offset: -2px;\n}\n\n.checkbox input[type=\"checkbox\"]:disabled,\n.checkbox input[type=\"radio\"]:disabled {\n    cursor: not-allowed;\n}\n\n.checkbox input[type=\"checkbox\"]:disabled+label,\n.checkbox input[type=\"radio\"]:disabled+label {\n    opacity: 0.65;\n}\n\n.checkbox input[type=\"checkbox\"]:disabled+label::before,\n.checkbox input[type=\"radio\"]:disabled+label::before {\n    background-color: #eeeeee;\n    cursor: not-allowed;\n}\n\n.checkbox.checkbox-circle label::before {\n    border-radius: 50%;\n}\n\n.checkbox.checkbox-inline {\n    margin-top: 0;\n}\n\n.checkbox-info input[type=\"checkbox\"]:checked+label::before,\n.checkbox-info input[type=\"radio\"]:checked+label::before {\n    background-color: #0347C6;\n    border-color: #0347C6;\n}\n\n.checkbox-info input[type=\"checkbox\"]:checked+label::after,\n.checkbox-info input[type=\"radio\"]:checked+label::after {\n    color: #fff;\n}\n\ninput[type=\"checkbox\"] .styled:checked+label::before,\ninput[type=\"radio\"] .styled:checked+label::before {\n    color: #fff;\n}\n\ninput[type=\"checkbox\"] .styled:checked+label::after,\ninput[type=\"radio\"] .styled:checked+label::after {\n    color: #fff;\n}\n\n.checkbox input[type=checkbox]:focus + label::before,\n.checkbox input[type=radio]:focus + label::before {\n    outline: none;\n}\n\n.btn-danger {\n    color: #fff;\n    background-color: #E42118;\n    border-color: #E42118;\n  }\n  .btn-danger:hover,\n  .btn-danger:focus,\n  .btn-danger.focus,\n  .btn-danger:active,\n  .btn-danger.active,\n  .open > .dropdown-toggle.btn-danger {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #c9302c;\n  }\n  \n  .btn-warning {\n    color: #fff;\n    background-color: #f0ad4e;\n    border-color: #eea236;\n  }\n  .btn-warning:hover,\n  .btn-warning:focus,\n  .btn-warning.focus,\n  .btn-warning:active,\n  .btn-warning.active,\n  .open > .dropdown-toggle.btn-warning {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #d58512;\n  }\n\n.particle {\n    opacity: 1;\n    position: absolute;\n    background-image: url('/img/star.png');   \n    background-size: contain;\n    overflow: visible;\n}\n\n.tooltip {\n    display: block !important;\n    z-index: 10000;\n}\n\n.tooltip .tooltip-inner {\n    background: black;\n    color: white;\n    padding: 5px 10px 4px;\n    font-size: 12px;\n}\n\n.tooltip .tooltip-arrow {\n    width: 0;\n    height: 0;\n    border-style: solid;\n    position: absolute;\n    margin: 5px;\n    border-color: black;\n    z-index: 1;\n}\n\n.tooltip[x-placement^=\"top\"] {\n    margin-bottom: 5px;\n}\n   \n.tooltip[x-placement^=\"top\"] .tooltip-arrow {\n    border-width: 5px 5px 0 5px;\n    border-left-color: transparent !important;\n    border-right-color: transparent !important;\n    border-bottom-color: transparent !important;\n    bottom: -5px;\n    left: calc(50% - 5px);\n    margin-top: 0;\n    margin-bottom: 0;\n}\n   \n.tooltip[x-placement^=\"bottom\"] {\n    margin-top: 5px;\n}\n   \n.tooltip[x-placement^=\"bottom\"] .tooltip-arrow {\n    border-width: 0 5px 5px 5px;\n    border-left-color: transparent !important;\n    border-right-color: transparent !important;\n    border-top-color: transparent !important;\n    top: -5px;\n    left: calc(50% - 5px);\n    margin-top: 0;\n    margin-bottom: 0;\n}\n   \n.tooltip[x-placement^=\"right\"] {\n    margin-left: 5px;\n}\n   \n.tooltip[x-placement^=\"right\"] .tooltip-arrow {\n    border-width: 5px 5px 5px 0;\n    border-left-color: transparent !important;\n    border-top-color: transparent !important;\n    border-bottom-color: transparent !important;\n    left: -5px;\n    top: calc(50% - 5px);\n    margin-left: 0;\n    margin-right: 0;\n}\n   \n.tooltip[x-placement^=\"left\"] {\n    margin-right: 5px;\n}\n   \n.tooltip[x-placement^=\"left\"] .tooltip-arrow {\n    border-width: 5px 0 5px 5px;\n    border-top-color: transparent !important;\n    border-right-color: transparent !important;\n    border-bottom-color: transparent !important;\n    right: -5px;\n    top: calc(50% - 5px);\n    margin-left: 0;\n    margin-right: 0;\n}\n   \n.tooltip.popover .popover-inner {\n    background: #f9f9f9;\n    color: black;\n    padding: 24px;\n    border-radius: 5px;\n    box-shadow: 0 5px 30px rgba(black, .1);\n}\n   \n.tooltip.popover .popover-arrow {\n    border-color: #f9f9f9;\n}\n   \n.tooltip[aria-hidden='true'] {\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity .15s, visibility .15s;\n}\n   \n.tooltip[aria-hidden='false'] {\n    visibility: visible;\n    opacity: 1;\n    transition: opacity .15s;\n}\n", ""]);

// exports


/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f15430e2_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_User_vue__ = __webpack_require__(442);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(425)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-f15430e2"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_User_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f15430e2_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_User_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f15430e2_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_User_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/User.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f15430e2", Component.options)
  } else {
    hotAPI.reload("data-v-f15430e2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(426);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("aa9a9612", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-f15430e2\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./User.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-f15430e2\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./User.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.user-container[data-v-f15430e2] {\n    position: relative;\n    padding: 20px;\n}\n.user-picture[data-v-f15430e2] {\n    cursor: pointer;\n    float: left;\n    display: block;\n    width: 56px;\n    height: 56px;\n    border-radius: 5px;\n    border: 2px solid #CCC;\n    margin-right: 6px;\n}\n.user-name[data-v-f15430e2]{\n    vertical-align: middle;\n    margin-top: 5px;\n    text-align: left;\n    font-weight: bold;\n    overflow: hidden;\n    font-size: 22px;\n    letter-spacing: -0.4px;\n    max-width: 210px;\n    text-overflow: ellipsis;\n    text-wrap: nowrap;\n}\n.user-name[data-v-f15430e2]:empty:before {\n/* height reservation using\n* 0 width non-breaking space */\n    content: \"\\200B\";\n}\n#coinWallet[data-v-f15430e2], #dnaWallet[data-v-f15430e2]{\n    left: 70px;\n    cursor: pointer;\n}\n#xpButton[data-v-f15430e2]{\n    top: 20px;\n}\n#massButton[data-v-f15430e2]{\n    top: 92px;\n}\n#xpButton[data-v-f15430e2], #massButton[data-v-f15430e2]{\n    position: absolute;\n    left: 244px;\n    cursor: pointer;\n}\n#progressBar[data-v-f15430e2]{\n    position: relative;\n    padding-top: 8px;\n    max-width: 210px;\n    max-height: 44px;\n}\n", ""]);

// exports


/***/ }),
/* 427 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6f579221_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BoostButton_vue__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(428)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6f579221"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BoostButton_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6f579221_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BoostButton_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6f579221_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BoostButton_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/BoostButton.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6f579221", Component.options)
  } else {
    hotAPI.reload("data-v-6f579221", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(429);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("fd5743c8", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-6f579221\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BoostButton.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-6f579221\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BoostButton.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.i(__webpack_require__(54), "");

// module
exports.push([module.i, "\n.boost-button[data-v-6f579221] {\n    cursor: pointer;\n    padding: 4px;\n    max-width: 66px;\n    max-height: 48px;\n}\n.boost-image[data-v-6f579221] {\n    display: block;\n    margin: auto;\n    transform: scale(0.35);\n    top: -40px;\n    left: -50px;\n    position: relative;\n}\n.circle[data-v-6f579221] {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n}\n.timer[data-v-6f579221] {\n    color: Red;\n    font-weight: bold;\n    display: inline-block;\n    text-align: center;\n    font-size: 12px;\n    min-height: 12px;\n    width: 100%;\n    position: absolute;\n    top: 50px;\n    left: -10px;\n}\n", ""]);

// exports


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(431);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("475600a8", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-fb660a50\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CounterCircle.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-fb660a50\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CounterCircle.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.circle[data-v-fb660a50]{\n    border-radius: 50%;\n    color: #FFF;\n    text-align: center;\n    width: 20px;\n    height: 20px;\n    font-size: 12px;\n    line-height: 20px;\n}\n.circle.grey[data-v-fb660a50]{\n    border: 2px solid #616161;\n    background: #a5a5a5;\n}\n.circle.red[data-v-fb660a50]{\n    border: 2px solid #d9140d;\n    background: #FF0000;\n}\n.circle.green[data-v-fb660a50]{\n    border: 2px solid #55b300;\n    background: #69dd00;\n}\n.circle > span[data-v-fb660a50]{\n    cursor: pointer;\n    color: #FFF;\n    text-shadow: 0px 0px 3px #000000,\n        -1px 0px 0px #000000,\n        1px 0px 0px #000000,\n        0px 1px 0px #000000,\n        0px -1px 0px #000000,\n        -1px -1px 0px #000000,\n        1px 1px 0px #000000,\n        -1px 1px 0px #000000,\n        1px -1px 0px #000000;\n    font-family: 'Ubuntu', sans-serif;\n    margin: -2px;\n}\n", ""]);

// exports


/***/ }),
/* 432 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "circle", class: _vm.getNotificationColor }, [
    _c("span", [_vm._v(_vm._s(_vm.getAmount))])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-fb660a50", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 433 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "boost-button",
      attrs: { id: _vm.getId },
      on: { click: _vm.onClick }
    },
    [
      _c("span", {
        staticClass: "boost-image sprite-main",
        class: _vm.getImage
      }),
      _vm._v(" "),
      _vm.getTime() > 0
        ? _c("span", { staticClass: "timer" }, [_vm._v(_vm._s(_vm.getTimer))])
        : _vm._e(),
      _vm._v(" "),
      _c("counter", { attrs: { amount: _vm.getAmount, time: _vm.getTime() } })
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6f579221", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 434 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_622e2517_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CurrencyCounter_vue__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(435)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-622e2517"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CurrencyCounter_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_622e2517_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CurrencyCounter_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_622e2517_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CurrencyCounter_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/CurrencyCounter.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-622e2517", Component.options)
  } else {
    hotAPI.reload("data-v-622e2517", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(436);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("2f8878b6", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-622e2517\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CurrencyCounter.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-622e2517\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CurrencyCounter.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.currency-container[data-v-622e2517] {\n    width: 130px;\n    border: 2px solid #54c800;\n    height: 23px;\n    margin-bottom: 4px;\n    border-radius: 5px;\n    position: relative;\n    cursor: pointer;\n}\n.plus[data-v-622e2517] {\n    width: 25px;\n    top: 0;\n    right: 0;\n    background: #54c800;\n    height: 100%;\n    border-radius: 2px;\n    position: absolute;\n    text-align: center;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n}\n.plus > span[data-v-622e2517] {\n    color: #fff;\n    font-size: 25px;\n    text-align: center;\n    display: block;\n    line-height: 25px;\n}\n.label[data-v-622e2517] {\n    position: absolute;\n    text-align: right;\n    line-height: 24px;\n    width: 77px;\n    font-size: 13px;\n    right: 53px;\n    color: #000;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.icon[data-v-622e2517] {\n    position: absolute;\n    top: 2px;\n    right: 28px;\n}\n.icon.dna-small-icon[data-v-622e2517] {\n    left: 78px;\n    top: -2px;\n    transform: scale(0.8);\n}\n", ""]);

// exports


/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "currency-container",
      attrs: { id: _vm.getId },
      on: { click: _vm.onClick }
    },
    [
      _c("span", { staticClass: "label" }, [_vm._v(_vm._s(_vm.getAmount))]),
      _vm._v(" "),
      _c("span", { staticClass: "icon sprite-main", class: _vm.getIcon }),
      _vm._v(" "),
      _vm._m(0)
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "plus" }, [_c("span", [_vm._v("+")])])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-622e2517", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81196132_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_XpBar_vue__ = __webpack_require__(441);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(439)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-81196132"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_XpBar_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81196132_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_XpBar_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81196132_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_XpBar_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/XpBar.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-81196132", Component.options)
  } else {
    hotAPI.reload("data-v-81196132", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(440);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("7639f5f9", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-81196132\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./XpBar.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-81196132\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./XpBar.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.progress-bar-container[data-v-81196132] {\n    position: relative;\n    height: 30px;\n    border: 2px solid #54c800;\n    border-radius: 5px;\n    width: 182px;\n    text-align: center;\n}\n.progress-bar[data-v-81196132] {\n    position: absolute;\n    top: 0px;\n    background-color: #54c800;\n    border-radius: 0px 4px 4px 0px;\n    transition: none;\n    height: 100%;\n}\n.progress-bar-text[data-v-81196132] {\n    position: absolute;\n    left: 0px;\n    width: 100%;\n    font-size: 14.5px;\n    font-weight: bold;\n    font-style: normal;\n    font-stretch: normal;\n    cursor: default;\n    text-align: center;\n    line-height: 32px;\n    color: #343434;\n}\n.progress-bar-star[data-v-81196132]{\n    position: relative;\n    top: -32px;\n    right: -130px;\n    transform: matrix(0.4, 0.0, 0.0, 0.4, 0, 0);\n    animation-duration: 1s;\n    animation-delay: 0s;\n    animation-iteration-count: 1;\n    cursor: default;\n    color: #FFF;\n    text-align: center;\n    line-height: 55px;\n    font-size: 12pt;\n    text-shadow:\n        0px 0px 3px #000000,\n        -1px 0px 0px #000000,\n        1px 0px 0px #000000,\n        0px 1px 0px #000000,\n        0px -1px 0px #000000,\n        -1px -1px 0px #000000,\n        1px 1px 0px #000000,\n        -1px 1px 0px #000000,\n        1px -1px 0px #000000;\n    font-family: 'Ubuntu', sans-serif;\n}\n.progress-bar-star.sprite[data-v-81196132]{\n    transform: matrix(0.25, 0.0, 0.0, 0.25, 0, 0);\n    top: -92px;\n    right: -108px;\n}\n", ""]);

// exports


/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "progressBar" } }, [
    _c("div", { staticClass: "progress-bar-container" }, [
      _c("div", {
        staticClass: "progress-bar",
        style: { width: (_vm.currentXp / _vm.totalXp) * 100 + "%" }
      }),
      _vm._v(" "),
      _c("span", { staticClass: "progress-bar-text" }, [
        _vm._v(_vm._s(_vm.currentXp) + "/" + _vm._s(_vm.totalXp) + " XP")
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "progress-bar-border" }),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "progress-bar-star sprite", class: _vm.getLevelStar },
      [_c("span", [_vm._v(_vm._s(_vm.level))])]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-81196132", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "mainui-user" } }, [
    _c(
      "div",
      { staticClass: "user-container" },
      [
        _c("img", {
          staticClass: "user-picture",
          attrs: { src: _vm.avatarUrl },
          on: { click: _vm.onProfilePictureClick }
        }),
        _vm._v(" "),
        _c("currency", { attrs: { type: "dna", amount: _vm.dna } }),
        _vm._v(" "),
        _c("currency", { attrs: { type: "coin", amount: _vm.coins } }),
        _vm._v(" "),
        _c("div", { staticClass: "user-name" }, [_vm._v(_vm._s(_vm.userName))]),
        _vm._v(" "),
        _c("xp"),
        _vm._v(" "),
        _c("boost", { attrs: { type: "xp" } }),
        _vm._v(" "),
        _c("boost", { attrs: { type: "mass" } })
      ],
      1
    )
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-f15430e2", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1791274a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Offers_vue__ = __webpack_require__(451);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(444)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1791274a"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Offers_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1791274a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Offers_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1791274a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Offers_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Offers.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1791274a", Component.options)
  } else {
    hotAPI.reload("data-v-1791274a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(445);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("559015cb", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-1791274a\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Offers.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-1791274a\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Offers.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.offers-container[data-v-1791274a] {\n    position: relative;\n    padding: 10px 20px;\n}\n.button-container[data-v-1791274a] {\n    position: relative;\n    text-align: center;\n    width: 100%;\n    margin-top: 15px;\n}\n.title[data-v-1791274a] {\n    text-align: center;\n    font-size: 20.8px;\n    font-weight: bold;\n    letter-spacing: -0.4px;\n}\n.free-coins-button[data-v-1791274a] {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.free-coins-button > button[data-v-1791274a] {\n    width: 130px;\n    height: 45px;\n    display: block;\n    color: #fff;\n    background-color: #54c800;\n    border-color: #54c800;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    padding-left: 40px;\n}\n.free-coins-button > button.wait[data-v-1791274a] {\n    background-color: #f03737;\n    border-color: #f03737;\n}\n.free-coins-button > button[data-v-1791274a]:hover {\n    background-color: #347F01;\n}\n.free-coins-button > button.wait[data-v-1791274a]:hover {\n    background-color: #c30f11;\n}\n.free-coins-button > button[data-v-1791274a]:focus {\n    outline:none;\n}\n.promo-badge-container[data-v-1791274a] {\n    position: absolute;\n    top: 0;\n    right: 0;\n}\n.promo-badge-container > button[data-v-1791274a] {\n    background: none;\n    border: none;\n    user-select: none;\n    width: 140px;\n    height: 50px;\n}\n.promo-badge-container > button[data-v-1791274a]:focus {\n    outline:none;\n}\n.Coins-S[data-v-1791274a] {\n    position: absolute;\n    transform: matrix(0.3, 0.0, 0.0, 0.3, -80, -40);\n}\n.wait > .Coins-S[data-v-1791274a] {\n    position: absolute;\n    transform: matrix(0.3, 0.0, 0.0, 0.3, -80, -32);\n}\n.coin-shop > button[data-v-1791274a] {\n    width: 130px;\n    height: 45px;\n    display: block;\n    color: #fff;\n    background-color: #54c800;\n    border-color: #54c800;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    padding-left: 40px;\n}\n.coin-shop > button[data-v-1791274a]:hover {\n    background-color: #347F01;\n}\n.coin-shop > button[data-v-1791274a]:focus {\n    outline:none;\n}\n.badge-loading[data-v-1791274a] {\n    background-color: #f5f5f5;\n    width: 140px;\n    height: 45px;\n    line-height: 50px;\n    font-weight: bold;\n    font-size: 14.8px;\n    color: #7d7d7d;\n}\n.badge-loading[data-v-1791274a] {\n    background-color: #f5f5f5;\n    width: 140px;\n    height: 45px;\n    line-height: 50px;\n    font-weight: bold;\n    font-size: 14.8px;\n    color: #7d7d7d;\n}\n.fade-enter-active[data-v-1791274a], .fade-leave-active[data-v-1791274a] {\n  transition: opacity .5s;\n}\n.fade-enter[data-v-1791274a], .fade-leave-to[data-v-1791274a] /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n", ""]);

// exports


/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_619a1171_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PromoButton_vue__ = __webpack_require__(450);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(447)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-619a1171"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PromoButton_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_619a1171_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PromoButton_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_619a1171_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PromoButton_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/promos/PromoButton.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-619a1171", Component.options)
  } else {
    hotAPI.reload("data-v-619a1171", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(448);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("e930c36a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-619a1171\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PromoButton.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-619a1171\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PromoButton.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(21));
var _createClass2 = _interopRequireDefault(__webpack_require__(22));
var ImageNode = /*#__PURE__*/function () {
  function ImageNode(config) {
    (0, _classCallCheck2["default"])(this, ImageNode);
    this.config = config;
    if (config == null || config.type == null) {
      return;
    }
    this.x = 0;
    this.y = 0;
    this.width = 0;
    this.height = 0;
    this.file = '';
    switch (config.type) {
      case 'Sprite':
        this.getSprite();
        break;
      case 'HorizontalStretchFrame':
        this.getHorizontalStretchFrame();
        break;
      default:
        // TODO: Only for debug mode
        // console.log('test: not sprite!');
        break;
    }
  }
  return (0, _createClass2["default"])(ImageNode, [{
    key: "getSprite",
    value: function getSprite() {
      if (this.isAtlas()) {
        var atlas = window.agarApp.API.getTextureAtlas(this.config.plistFilename);
        if (atlas) {
          var textureInfo = window.agarApp.API.getTextureAtlasInfo(atlas, this.config.frameName);
          this.file = atlas._textureFile;
          if (textureInfo) {
            this.x = textureInfo.region.x;
            this.y = textureInfo.region.y;
            this.width = textureInfo.region.width;
            this.height = textureInfo.region.height;
          }
          // console.log('test: atlas info', atlas, textureInfo);
        }
      }
    }
  }, {
    key: "getHorizontalStretchFrame",
    value: function getHorizontalStretchFrame() {
      if (this.isAtlas()) {
        var atlas = window.agarApp.API.getTextureAtlas(this.config.plistFilename);
        if (atlas) {
          var textureInfo = window.agarApp.API.getTextureAtlasInfo(atlas, this.config.frameName);
          this.file = window.agarApp.API.getTextureAtlasImage(atlas, this.config.frameName);
          if (textureInfo) {
            this.x = textureInfo.region.x;
            this.y = textureInfo.region.y;
          }
          this.width = this.config.maxWidth;
          this.height = this.config.maxHeight;
          // console.log('test: atlas info', atlas, textureInfo);
        }
      }
    }
  }, {
    key: "isAtlas",
    value: function isAtlas() {
      return this.config.plistFilename != null && this.config.frameName != null || this.config.imageData != null && this.config.imageData.plistFilename != null && this.config.imageData.frameName != null;
    }
  }]);
}();
var _default = exports["default"] = ImageNode;

/***/ }),
/* 450 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { style: _vm.frameStyle, attrs: { id: _vm.name } },
    [
      _c("div", { style: _vm.bgStyle }),
      _vm._v(" "),
      _vm._l(_vm.config.buttonIconImages, function(icon, index) {
        return _c(
          "div",
          { key: "icon_" + index, style: _vm.getImageStyle(icon) },
          [_c("div", { style: _vm.getIconStyle(icon) })]
        )
      }),
      _vm._v(" "),
      _vm._l(_vm.config.buttonTextLabels, function(label, index) {
        return _c(
          "div",
          { key: "label_" + index, style: _vm.getLabelStyle(label) },
          [
            _c("div", {
              ref: "label_" + index,
              refInFor: true,
              style: _vm.getTextStyle(index, label),
              domProps: { innerHTML: _vm._s(_vm.getLabelText(label)) }
            })
          ]
        )
      }),
      _vm._v(" "),
      _vm.config.timerConfiguration
        ? _c(
            "div",
            { style: _vm.getLabelStyle(_vm.config.timerConfiguration) },
            [
              _c("div", {
                ref: "timer",
                style: [
                  _vm.getTimerStyle(_vm.config.timerConfiguration),
                  _vm.timerStyle
                ],
                domProps: { innerHTML: _vm._s(_vm.timerText) }
              })
            ]
          )
        : _vm._e()
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-619a1171", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "mainui-offers" } }, [
    _c("div", { staticClass: "offers-container" }, [
      _c("div", { staticClass: "title" }, [_vm._v("Offers")]),
      _vm._v(" "),
      _c("div", { staticClass: "button-container" }, [
        _c("div", { staticClass: "free-coins-button" }, [
          _c(
            "button",
            {
              class: { wait: _vm.freeCoinsTimeLeft > 0 },
              attrs: { id: "freeCoins" },
              on: { click: _vm.onFreeCoinsClick }
            },
            [
              _c("span", { staticClass: "sprite-main Coins-S" }),
              _vm._v(" "),
              _vm.freeCoinsTimeLeft == 0
                ? _c("span", {
                    domProps: {
                      innerHTML: _vm._s(_vm.i18n.page_menu_main_free_coins)
                    }
                  })
                : _c("span", {
                    domProps: {
                      innerHTML: _vm._s(_vm.getFreeCoinsWaitingLabel())
                    }
                  })
            ]
          )
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "promo-badge-container" },
          [
            _c("transition", { attrs: { name: "fade" } }, [
              _vm.promoConfig
                ? _c(
                    "button",
                    { on: { click: _vm.onPromoClick } },
                    [
                      _c("badge", {
                        attrs: {
                          id: _vm.promoId,
                          config: _vm.promoConfig,
                          delegate: _vm.promoDelegate,
                          system: _vm.promoSystem
                        }
                      })
                    ],
                    1
                  )
                : _vm._e()
            ]),
            _vm._v(" "),
            _vm.promoId == 0 && _vm.canShowCoinShop
              ? _c("div", { staticClass: "coin-shop" }, [
                  _c(
                    "button",
                    {
                      attrs: { id: "coinShop" },
                      on: { click: _vm.onCoinShopClick }
                    },
                    [
                      _c("span", { staticClass: "sprite-main Coins-S" }),
                      _vm._v(" "),
                      _c("span", [_vm._v("Coins")])
                    ]
                  )
                ])
              : _vm.promoId == 0
              ? _c("div", { staticClass: "badge-loading" }, [
                  _vm._v("Loading...")
                ])
              : _vm._e()
          ],
          1
        )
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-1791274a", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34cb2101_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Features_vue__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(453)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-34cb2101"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Features_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34cb2101_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Features_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_34cb2101_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Features_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Features.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-34cb2101", Component.options)
  } else {
    hotAPI.reload("data-v-34cb2101", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(454);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("75d9b9e7", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-34cb2101\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Features.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-34cb2101\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Features.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#mainui-features[data-v-34cb2101]{\n    position: relative;\n}\n.features-container[data-v-34cb2101] {\n    position: relative;\n    padding: 20px;\n}\n.buttons-container[data-v-34cb2101]{\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n}\n.feature-button[data-v-34cb2101]{\n    width: 68px;\n    height: 55px;\n    border-radius: 4.3px;\n    color: #FFF;\n    text-align: center;\n    cursor: pointer;\n    background: #00d3ff;\n}\n.feature-button.large[data-v-34cb2101] {\n    width: 93px;\n}\n.feature-button[data-v-34cb2101]:hover{\n    background-color: #3F89B6;\n}\n.feature-button .label[data-v-34cb2101]{\n    position: relative;\n    bottom: -35px;\n    width: 100%;\n    font-size: 10.5px;\n    letter-spacing: -0.2px;\n}\n.feature-button.gifting > .label[data-v-34cb2101] {\n    top: 3px;\n    left: 20px;\n}\n.feature-button > img[data-v-34cb2101]{\n    width: 50%;\n    height: 50%;\n}\n.feature-button > .circle[data-v-34cb2101] {\n    position: relative;\n    top: -25px;\n    right: -52px;\n}\n.feature-button.large > .circle[data-v-34cb2101] {\n    position: relative;\n    top: -25px;\n    right: -75px;\n}\n.feature-button.quests > .circle[data-v-34cb2101] {\n    top: -70px;\n}\n.feature-button.shop > .circle[data-v-34cb2101] {\n    top: -74px;\n}\n.feature-button.shop.large > .circle[data-v-34cb2101] {\n    top: -25px;\n}\n.feature-button.quests.large > .circle[data-v-34cb2101] {\n    top: -25px;\n}\n.feature-button.gifting > .circle[data-v-34cb2101] {\n    top: -60px;\n}\n.potions-container[data-v-34cb2101]{\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    height: 175px;\n    width: 285px;\n    margin: -5px 20px 0 20px;\n}\n#potion-slot[data-v-34cb2101]{\n    width: 31%;\n    height: 100%;\n    display: inline-block;\n    margin: 1px;\n}\n.help-button[data-v-34cb2101]{\n    position: absolute;\n    transform: matrix(0.25, 0, 0, 0.25, 0, 0);\n    cursor: pointer;\n    right: -20px;\n    bottom: -25px;\n}\n.Icon-Store[data-v-34cb2101] {\n    transform: matrix(0.65, 0, 0, 0.65, -2, -17);\n}\n.Icon-Gifting[data-v-34cb2101] {\n    transform: matrix(0.65, 0, 0, 0.65, -13, -3);\n}\n.Icon-DailyQuests[data-v-34cb2101] {\n    transform: matrix(0.6, 0, 0, 0.6, 0, -17);\n}\n.Icon-Leaderboards[data-v-34cb2101] {\n    transform: matrix(0.6, 0, 0, 0.6, 0, -17);\n}\n.feature-button.large > .Icon-Store[data-v-34cb2101] {\n    position: absolute;\n    transform: matrix(0.65, 0, 0, 0.65, -37, 0);\n}\n.feature-button.large > .Icon-DailyQuests[data-v-34cb2101] {\n    position: absolute;\n    transform: matrix(0.65, 0, 0, 0.65, -43, 0);\n}\n.feature-button.large > .Icon-DailyQuests.notification[data-v-34cb2101] {\n    position: absolute;\n    transform: matrix(0.65, 0, 0, 0.65, -53, 0);\n}\n", ""]);

// exports


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(456);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("22af45ee", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-55506716\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PotionSlot.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-55506716\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PotionSlot.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.potion-slot-wraper[data-v-55506716]{\n    height: 100%;\n    position: relative;\n}\n.potion-slot-container[data-v-55506716] {\n    position: relative;\n    background-color: #F5F5F5;\n    border-radius: 10px;\n    height: 74%;\n    overflow: hidden;\n}\n.potion-slot-shape[data-v-55506716] {\n    width: 100%;\n    height: 5%;\n}\n.mini .potion-slot-shape[data-v-55506716] {\n    height: 15%;\n}\n.potion-slot-shape.blue[data-v-55506716] {\n    background-color: #56C0E1;\n    color: #FFF;\n}\n.potion-slot-shape.orange[data-v-55506716] {\n    background-color: #FE7800;\n    color: #FFF;\n}\n.potion-slot-shape.grey[data-v-55506716] {\n    background-color: #E8E7E8;\n    color: #666;\n}\n.potion-slot-shape.none[data-v-55506716] {\n    display: none;\n}\n.potion-slot-shape[data-v-55506716] {\n    position: relative;\n    padding: 5% 0% 10% 0%;\n    font-size: 17px;\n    font-weight: bold;\n    text-align: center;\n    clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 50% 100%, 0% 80%);\n    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 50% 100%, 0% 80%);\n}\n.mini .potion-slot-shape[data-v-55506716] {\n    font-size: 11px;\n    padding: 5% 0% 5% 0%;\n    min-height: 12px;\n    line-height: 10px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n}\n.potion-slot-upper-text[data-v-55506716] {\n    font-size: 20px;\n    font-weight: bold;\n    text-align: center;\n    position: relative;\n    top: 3.75%;\n}\n.mini .potion-slot-upper-text[data-v-55506716] {\n    font-size: 10px;\n    left: -4px;\n    top: 3%;\n}\n.potion-slot-middle-text[data-v-55506716] {\n    text-align: center;\n    position: relative;\n    font-size: 20px;\n    font-weight: bold;\n    word-wrap: break-word;\n    width: 30%;\n    top: 20%;\n    margin: 0 auto;\n}\n.mini .potion-slot-middle-text[data-v-55506716] {\n    font-size: 13.8px;\n    width: 50%;\n    color: #7d7d7d;\n    font-weight: bold;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: 1.09;\n    letter-spacing: -0.3px;\n}\n.potion-slot-lower-text[data-v-55506716] {\n    font-size: 20px;\n    font-weight: bold;\n    text-align: center;\n    width: 100%;\n    bottom: 5%;\n    position: absolute;\n}\n.potion-slot-animation[data-v-55506716] {\n    position: absolute;\n    top: 35%;\n}\n.mini .potion-slot-animation[data-v-55506716] {\n    top: 24%;\n    position: absolute;\n    width: 100%;\n    height: 75%;\n    transform-origin: center;\n    z-index: 1;\n    overflow: hidden;\n}\n.mini .bigger[data-v-55506716] {\n    font-size: 12px !important;\n}\n.potion-slot-button[data-v-55506716] {\n    width: 100%;\n    height: 40px;\n    border-radius: 5px;\n    color: #FFF;\n    font-size: 15px;\n    font-weight: bold;\n    text-align: center;\n    line-height: 40px;\n    margin-top: 5%;\n    cursor: pointer;\n    position: relative;\n}\n.potion-slot-button.blue[data-v-55506716] {\n    background-color: #56C0E1;\n}\n.potion-slot-button.green[data-v-55506716] {\n    background-color: #54c800;\n}\n.potion-slot-button.blue[data-v-55506716]:hover {\n    background-color: #497D92;\n    color: #FFF;\n}\n.potion-slot-button.green[data-v-55506716]:hover {\n    background-color: #347F01;\n    color: #FFF;\n}\n.clock-grey[data-v-55506716] {\n    position: relative;\n    top: 3.75%;\n    left: 38%;\n    float: left;\n}\n.mini .clock-grey[data-v-55506716] {\n    transform: matrix(0.4, 0, 0, 0.4, -7, -6);\n}\n.clock-white[data-v-55506716] {\n    position: absolute;\n    top: 8px;\n    left: 67px;\n    font-size: 17px;\n}\n.mini .clock-white[data-v-55506716] {\n    transform: matrix(0.4, 0, 0, 0.4, -62, -4);\n}\n.locket[data-v-55506716] {\n    position: relative;\n    transform: translate(1300%, -120%);\n}\n.mini .locket[data-v-55506716] {\n    position: absolute;\n    transform: matrix(0.4, 0, 0, 0.4, 55, -2);\n}\n.potion-slot-button div[data-v-55506716] {\n    position: relative;\n    margin-top: -27px;\n}\n.cover-up[data-v-55506716]{\n    background-color: #f6f5f6;\n    width: 15%;\n    height: 20%;\n    display:  block;\n    position:  absolute;\n    top: 30%;\n    z-index: 1;\n}\n.mini .cover-up[data-v-55506716]{\n    background-color: #f6f5f6;\n    width: 15%;\n    height: 20%;\n    display: block;\n    position: absolute;\n    top: 24%;\n}\n.potion-slot-button[data-v-55506716] {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.mini .potion-slot-button[data-v-55506716] {\n    font-size: 12px;\n    height: 18%;\n}\n.potion-slot-button-icon[data-v-55506716] {\n    transform: matrix(0.6,0,0,0.6,-6,9);\n}\n.mini .potion-slot-lower-text[data-v-55506716] {\n    font-size: 11px;\n    letter-spacing: -0.5px;\n}\n.mini .price[data-v-55506716] {\n    width: 100%;\n}\n.price-value[data-v-55506716] {\n    display: inline-block;\n    width: 50%;\n    text-align: right;\n    font-size: 15px;\n}\n.mini .price-value[data-v-55506716] {\n    font-size: 12px;\n}\n.full-slots[data-v-55506716] {\n    position: relative;\n    top: 50px;\n}\n.full-slots > .icon[data-v-55506716] {\n    text-align: center;\n    margin: 30px;\n}\n.full-slots > .potion-slot-upper-text[data-v-55506716] {\n    top: auto;\n}\n.full-slots > .potion-slot-lower-text[data-v-55506716] {\n    bottom: -70px;\n}\n.loading[data-v-55506716] {\n    width: 100%;\n    height: 100%;\n    line-height: 100%;\n    text-align: center;\n    vertical-align: middle;\n    margin: 0 auto;\n    padding-top: 70%;\n    font-size: 28px;\n    font-weight: bold;\n}\n.stamp .potion-slot-animation[data-v-55506716]{\n    transform-origin: center;\n    animation: stamp-data-v-55506716 0.5s linear;\n}\n@keyframes stamp-data-v-55506716 {\n0% { transform: scale(3);\n}\n100% { transform: scale(1);\n}\n}\n", ""]);

// exports


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(458);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("cb35e774", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SpineAnimation.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SpineAnimation.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 459 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { ref: "animation" })
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-575582a5", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { class: { mini: _vm.mini }, attrs: { id: "potion-slot" } },
    [
      _vm.loading
        ? _c("div", { staticClass: "loading" }, [_vm._v("Loading...")])
        : _vm.fullslots
        ? _c("div", [_vm._m(0)])
        : _c("div", { staticClass: "potion-slot-wraper" }, [
            _c(
              "div",
              { staticClass: "potion-slot-container" },
              [
                _c(
                  "div",
                  {
                    staticClass: "potion-slot-shape",
                    class: _vm.getColorClass
                  },
                  [
                    _vm.state === "BREWING"
                      ? _c("span", { staticClass: "clock-white sprite-main" })
                      : _vm._e(),
                    _vm._v(
                      "\n                " +
                        _vm._s(_vm.getShapeText) +
                        "\n            "
                    )
                  ]
                ),
                _vm._v(" "),
                _vm.state === "AVAILABLE"
                  ? _c("span", { staticClass: "clock-grey sprite-main" })
                  : _vm._e(),
                _vm._v(" "),
                _vm.state === "AVAILABLE"
                  ? _c("div", { staticClass: "potion-slot-upper-text" }, [
                      _vm._v(_vm._s(_vm.hours) + "H")
                    ])
                  : _vm.state === "BATTLE_FULL"
                  ? _c("div", { staticClass: "potion-slot-upper-text" }, [
                      _vm._v(_vm._s(_vm.upperText))
                    ])
                  : _vm._e(),
                _vm._v(" "),
                _vm.state !== "EMPTY"
                  ? _c("animation", {
                      class: "potion-slot-animation",
                      attrs: {
                        assetName: _vm.potion.asset,
                        animName: _vm.getAnimation,
                        width: 260,
                        height: 220,
                        offsetX: 310,
                        offsetY: 450,
                        scaleX: _vm.mini ? 0.15 : 0.4,
                        scaleY: _vm.mini ? 0.15 : 0.4
                      }
                    })
                  : _vm._e(),
                _vm._v(" "),
                _vm.state === "BREWING"
                  ? _c("div", { staticClass: "cover-up" })
                  : _vm._e(),
                _vm._v(" "),
                _vm.state === "EMPTY"
                  ? _c("div", { staticClass: "potion-slot-middle-text" }, [
                      _vm._v("Empty Slot")
                    ])
                  : _vm._e(),
                _vm._v(" "),
                _vm.state !== "EMPTY"
                  ? _c("div", { staticClass: "potion-slot-lower-text" }, [
                      _vm._v(_vm._s(_vm.potion.name))
                    ])
                  : _vm._e()
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "btn potion-slot-button",
                class: [_vm.getButtonColorClass, _vm.getTextClass],
                on: { click: _vm.onButtonClick }
              },
              [
                _c("span", {
                  staticClass: "label",
                  domProps: { innerHTML: _vm._s(_vm.getButtonText) }
                }),
                _vm._v(" "),
                _vm.isSkippable
                  ? _c("div", { staticClass: "price" }, [
                      _c("span", {
                        staticClass: "price-value",
                        domProps: { innerHTML: _vm._s(_vm.potion.skipPrice) }
                      }),
                      _vm._v(" "),
                      _c("span", {
                        staticClass:
                          "dna-small-icon sprite-main potion-slot-button-icon price-icon"
                      })
                    ])
                  : _vm._e()
              ]
            )
          ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "full-slots" }, [
      _c("div", { staticClass: "potion-slot-upper-text" }, [
        _vm._v("Slots are full")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "icon" }, [
        _c("span", { staticClass: "flask-alert sprite-main" })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "potion-slot-lower-text" }, [
        _vm._v("Clear a potion slot to earn more.")
      ])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-55506716", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 461 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81050990_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_AlertCircle_vue__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(462)
}
/* script */
var __vue_script__ = null
/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-81050990"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __vue_script__,
  __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81050990_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_AlertCircle_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_template_compiler_index_id_data_v_81050990_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_AlertCircle_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/AlertCircle.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-81050990", Component.options)
  } else {
    hotAPI.reload("data-v-81050990", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(463);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("1418f1fe", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-81050990\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AlertCircle.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-81050990\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AlertCircle.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.circle[data-v-81050990]{\n    border-radius: 50%;\n    color: #FFF;\n    text-align: center;\n    width: 20px;\n    height: 20px;\n    font-size: 12px;\n    line-height: 20px;\n    border: 2px solid #d9140d;\n    background: #FF0000;\n}\n.circle > span[data-v-81050990]{\n    cursor: pointer;\n    color: #FFF;\n    text-shadow: 0px 0px 3px #000000,\n        -1px 0px 0px #000000,\n        1px 0px 0px #000000,\n        0px 1px 0px #000000,\n        0px -1px 0px #000000,\n        -1px -1px 0px #000000,\n        1px 1px 0px #000000,\n        -1px 1px 0px #000000,\n        1px -1px 0px #000000;\n    font-family: 'Ubuntu', sans-serif;\n    margin: -2px;\n}\n", ""]);

// exports


/***/ }),
/* 464 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "circle" }, [_c("span", [_vm._v("!")])])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-81050990", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 465 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "mainui-features" } }, [
    _c("div", { staticClass: "features-container" }, [
      _c("div", { staticClass: "buttons-container" }, [
        _c(
          "div",
          {
            staticClass: "feature-button shop",
            class: { large: _vm.inGoogleRealm },
            on: { click: _vm.onShopClick }
          },
          [
            _c("span", {
              staticClass: "label",
              domProps: { innerHTML: _vm._s(_vm.i18n.menu_main_shop) }
            }),
            _vm._v(" "),
            _c("span", { staticClass: "sprite-main Icon-Store" }),
            _vm._v(" "),
            _vm.mysterySkinNotificationCount || _vm.customSkinTokensTotalCount
              ? _c("counter", {
                  attrs: {
                    amount:
                      _vm.customSkinTokensTotalCount +
                      _vm.mysterySkinNotificationCount,
                    time: 0
                  }
                })
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "feature-button leaderboards",
            class: { large: _vm.inGoogleRealm },
            on: { click: _vm.onLeaderboardsClick }
          },
          [
            _c("span", {
              staticClass: "label",
              domProps: { innerHTML: _vm._s(_vm.i18n.page_menu_main_leagues) }
            }),
            _vm._v(" "),
            _c("span", { staticClass: "sprite-main Icon-Leaderboards" })
          ]
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "feature-button quests",
            class: { large: _vm.inGoogleRealm },
            on: { click: _vm.onQuestsClick }
          },
          [
            _c("span", { staticClass: "label" }, [
              _vm._v(_vm._s(_vm.getQuestsLabel))
            ]),
            _vm._v(" "),
            _c("span", {
              staticClass: "sprite-main Icon-DailyQuests",
              class: {
                notification: _vm.inGoogleRealm && _vm.showQuestNotification
              }
            }),
            _vm._v(" "),
            _vm.showQuestNotification
              ? _c("alert", { staticClass: "animated pulse infinite" })
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        !_vm.inGoogleRealm
          ? _c(
              "div",
              {
                staticClass: "feature-button gifting",
                on: { click: _vm.onGiftingClick }
              },
              [
                _c("span", {
                  staticClass: "label",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_menu_main_gifts) }
                }),
                _vm._v(" "),
                _c("span", { staticClass: "sprite-main Icon-Gifting" }),
                _vm._v(" "),
                _vm.giftCount > 0
                  ? _c("counter", { attrs: { amount: _vm.giftCount, time: 0 } })
                  : _vm._e()
              ],
              1
            )
          : _vm._e()
      ])
    ]),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "potions-container" },
      [
        _c("potion", {
          class: ["left", { stamp: _vm.stampAnimations[0] }],
          attrs: { potion: _vm.getLeftPotion, fullslots: false, mini: true }
        }),
        _vm._v(" "),
        _c("potion", {
          class: ["middle", { stamp: _vm.stampAnimations[1] }],
          attrs: { potion: _vm.getMiddlePotion, fullslots: false, mini: true }
        }),
        _vm._v(" "),
        _c("potion", {
          class: ["right", { stamp: _vm.stampAnimations[2] }],
          attrs: { potion: _vm.getRightPotion, fullslots: false, mini: true }
        })
      ],
      1
    ),
    _vm._v(" "),
    _c("div", { staticClass: "help-button", on: { click: _vm.onHelpClick } }, [
      _c("span", { staticClass: "hint-button sprite-main" })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-34cb2101", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 466 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0733aa78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Play_vue__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(467)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0733aa78"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Play_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0733aa78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Play_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0733aa78_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Play_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Play.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0733aa78", Component.options)
  } else {
    hotAPI.reload("data-v-0733aa78", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(468);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("3fd2e23d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0733aa78\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Play.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0733aa78\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Play.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.play-container[data-v-0733aa78] {\n    position: relative;\n    padding: 10px;\n}\n#mainui-play[data-v-0733aa78] {\n    position: relative;\n    margin-bottom: 0px;\n}\n.moveToTop[data-v-0733aa78] {\n    z-index: 1;\n}\n#mainPanel[data-v-0733aa78] {\n    display: inline-block;\n    text-align: center;\n    width: 100%;\n}\n#settingsButton[data-v-0733aa78] {\n    float: left;\n    background-color: #FFF;\n    top: 5px;\n    position: relative;\n    opacity: 0.8;\n}\n#settingsButton[data-v-0733aa78] :hover {\n    cursor: pointer;\n    opacity: 0.5;\n}\n#socialButtons[data-v-0733aa78] {\n   float: right;\n   width: 115px;\n   height: 48px;\n   text-align: right;\n   top: 5px;\n   position: relative;\n}\n#socialButtons > iframe[data-v-0733aa78] {\n    top: 2px;\n    left: -120px;\n    display: block;\n    position: absolute;\n    width: 120px;\n    height: 20px;\n}\n#socialStats[data-v-0733aa78] {\n    position: absolute;\n    bottom: 55px;\n    left: 0px;\n    right: 0px;\n}\n#googleShare[data-v-0733aa78] {\n    width: 49%;\n    float: left;\n    display: none;\n}\n#fbShare[data-v-0733aa78] {\n    position: relative;\n    width: 49%;\n    height: 34px;\n    float: left;\n}\n#twShare[data-v-0733aa78] {\n    position: relative;\n    width: 49%;\n    float: right;\n}\n#title[data-v-0733aa78] {\n    font-size: 55.8px;\n    font-weight: bold;\n    margin-left: auto;\n    margin-right: auto;\n    width: 200px;\n    margin-top: 50px;\n}\n#title.guest[data-v-0733aa78] {\n    font-size: 35pt;\n    margin-top: 40px;\n}\n#skinLabel[data-v-0733aa78] {\n    position: absolute;\n    top: 19px;\n    left: 9px;\n    cursor: pointer;\n    font-size: 13px;\n    color: #000;\n}\n#skinButton[data-v-0733aa78] {\n    position: relative;\n    cursor: pointer;\n    left: 25px;\n}\n#skinButton > .skinWrapper[data-v-0733aa78] {\n    position: absolute;\n    width: 46px;\n    height: 46px;\n    overflow: hidden;\n    -webkit-mask-image: -webkit-radial-gradient(white, black);\n    border: 3px solid rgb(131, 131, 131);\n}\n.circle.tiny[data-v-0733aa78] {\n    position: absolute;\n    left: -3px;\n    top: -3px;\n    width: 18px;\n    height: 18px;\n}\n.plus-text[data-v-0733aa78] {\n    font-size: 21px;\n    line-height: 24px;\n    top: -3px;\n    position: relative;\n}\n.skinWrapper > img[data-v-0733aa78] {\n    width: auto;\n    height: auto;\n    object-fit: cover;\n    object-position: 0% top;\n    position: relative;\n    left: -2px;\n    top: -2px;\n}\n#playnick[data-v-0733aa78] {\n    position: relative;\n}\n#nick[data-v-0733aa78] {\n    position: relative;\n    left: 80px;\n    top: 10px;\n    width: 180px;\n    height: 28px;\n    float: left;\n    border-radius: 4px;\n    border-style: solid;\n    border-color: #A2A2A2;\n    padding-left: 10px;\n}\n#nick[data-v-0733aa78]:focus {\n    outline: none;\n}\n.btn-play[data-v-0733aa78] {\n    position: relative;\n    top: 25px;\n    color: #fff;\n    background-color: #54c800;\n    border-color: #54c800;\n    width: 243px;\n    height: 34px;\n    font-size: 20px;\n    line-height: 1.5;\n}\n.btn-play[data-v-0733aa78]:hover {\n    background-color: #347F01;\n    border-color: #347F01;\n}\n#instructions[data-v-0733aa78] {\n    display: inline-block;\n    position: relative;\n    top: 45px;\n    color: #7d7d7d;\n    font-size: 14.3px;\n    margin: 0 20px;\n    text-align: center;\n    line-height: 1.25;\n    letter-spacing: -0.3px;\n}\n#instructions.guest[data-v-0733aa78] {\n    top: 40px;\n    font-size: 12.3px;\n}\n#socialLoginContainer[data-v-0733aa78] {\n    position: relative;\n    top: 30px;\n    margin: 0 20px;\n}\n#socialLoginContainer > button[data-v-0733aa78] {\n    margin-bottom: 5px;\n}\n#stats[data-v-0733aa78] {\n    position: relative;\n    width: 306px;\n    height: 300px;\n    overflow: hidden;\n}\n#stats > hr[data-v-0733aa78] {\n    position:absolute;\n    bottom:100px;\n    width:100%;\n    margin:0px;\n}\n#stats > h2[data-v-0733aa78] {\n    margin-top: 10px;\n}\n#statsPelletsContainer[data-v-0733aa78],\n#statsTimeAliveContainer[data-v-0733aa78],\n#statsHighestMassContainer[data-v-0733aa78],\n#statsTimeLeaderboardContainer[data-v-0733aa78],\n#statsPlayerCellsEatenContainer[data-v-0733aa78],\n#statsTopPositionContainer[data-v-0733aa78] {\n    position: absolute;\n    width: 120px;\n    height: 100px;\n}\n#statsPelletsContainer[data-v-0733aa78] {\n    top: 10px;\n    left: 20px;\n}\n#statsHighestMassContainer[data-v-0733aa78] {\n    top: 10px;\n    right: 20px;\n}\n#statsTimeAliveContainer[data-v-0733aa78] {\n    top: 45px;\n    left: 20px;\n}\n#statsTimeLeaderboardContainer[data-v-0733aa78] {\n    top: 45px;\n    right: 20px;\n}\n#statsPlayerCellsEatenContainer[data-v-0733aa78] {\n    top: 80px;\n    left: 20px;\n}\n#statsTopPositionContainer[data-v-0733aa78] {\n    top: 80px;\n    right: 20px;\n}\n#statsPellets[data-v-0733aa78] {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: auto;\n}\n#statsText[data-v-0733aa78] {\n    position: absolute;\n    top: 25px;\n    left: 0;\n    right: 0;\n    line-height: 100px;\n    font-size: 12px;\n}\n#statsSubtext[data-v-0733aa78] {\n    position: absolute;\n    left: 0;\n    right: 0;\n    line-height: 15px;\n    font-size: 15px;\n    color: #000;\n    text-align: center;\n    top: 50px;\n}\n#statsChartText[data-v-0733aa78] {\n    position: absolute;\n    left: 20px;\n    bottom: 250px;\n    line-height: 40px;\n    font-size: 40px;\n}\n#statsChartText[data-v-0733aa78], #statsText[data-v-0733aa78] {\n    cursor: default;\n    color: #444;\n    text-align: center;\n    font-weight: bold;\n}\n#statsContinue[data-v-0733aa78] {\n    position: absolute;\n    width: 306px;\n    bottom: 15px;\n    height: 34px;\n    left: 0px;\n    right: 0px;\n}\n#statsGraph[data-v-0733aa78] {\n    position: absolute;\n    bottom: 100px;\n    left: 0px;\n    right: 0px;\n    opacity: 0.4;\n}\n.bubble[data-v-0733aa78] {\n    position: absolute;\n    padding: 5px 10px 10px 10px;\n    border: 3px solid #2449AB;\n    color: #FFF;\n    font-size: 12px;\n    font-weight: bold;\n    background: #376AE0;\n    -webkit-border-radius: 8px;\n    -moz-border-radius: 8px;\n    border-radius: 8px;\n    animation: bounce-data-v-0733aa78 1s ease-out infinite;\n    top: -77px;\n    left: -24px;\n    width: 55px;\n    height: 35px;\n}\n.bubble[data-v-0733aa78]:before {\n    content: \"\";\n    position: absolute;\n    bottom: -15px;\n    left: 38px;\n    border-width: 15px 15px 0;\n    border-style: solid;\n    border-color: #2449AB transparent;\n    display: block;\n    width: 0;\n}\n.bubble[data-v-0733aa78]:after {\n    content: \"\";\n    position: absolute;\n    bottom: -10px;\n    left: 42px;\n    border-width: 11px 11px 0;\n    border-style: solid;\n    border-color: #376AE0 transparent;\n    display: block;\n    width: 0;\n}\n@keyframes bounce-data-v-0733aa78 {\n33% { transform: translateY(3px);\n}\n66% { transform: translateY(-3px);\n}\n}\n", ""]);

// exports


/***/ }),
/* 469 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b8695e7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(470)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0b8695e7"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b8695e7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0b8695e7_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Settings.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0b8695e7", Component.options)
  } else {
    hotAPI.reload("data-v-0b8695e7", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(471);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("22c5941e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0b8695e7\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Settings.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0b8695e7\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Settings.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.dialog[data-v-0b8695e7] {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 360px;\n    padding: 15px;\n    text-align: left;\n}\n#region[data-v-0b8695e7] {\n    background: none;\n    font-size: 20px;\n    font-weight: bold;\n}\n#quality[data-v-0b8695e7] {\n    background: none;\n    margin-top: 10px;\n}\n.options[data-v-0b8695e7] {\n    background-color: #F5F5F5;\n    padding: 15px;\n    font-size: 16px;\n    color: #7d7d7d;\n    display:flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin-top: 10px;\n}\n.option[data-v-0b8695e7] {\n    padding-bottom: 10px;\n}\n.checkbox label[data-v-0b8695e7] {\n    width: 120px;\n}\n.actions[data-v-0b8695e7] {\n    display: flex;\n    justify-content: space-around;\n    position: relative;\n}\n.actions > button[data-v-0b8695e7] {\n    width: 150px;\n    height: 35px;\n}\n.btn-spectate[data-v-0b8695e7] {\n    background-color: #1C67E2;\n    border-color: #1C67E2;\n}\n.btn-spectate.disabled[data-v-0b8695e7] {\n    background-color: #666;\n    border-color: #666;\n}\n.btn-spectate.disabled[data-v-0b8695e7]:hover {\n    cursor: default;\n}\n.versions[data-v-0b8695e7] {\n    height: 26px;\n    font-size: 9px;\n    display: block;\n    text-align: center;\n    color: #7d7d7d;\n    margin-top: 5px;\n    line-height: 8px;\n    overflow: hidden;\n}\n\n", ""]);

// exports


/***/ }),
/* 472 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "mainui-settings" } }, [
    _c("div", {
      staticClass: "disabler",
      on: {
        click: function($event) {
          return _vm.$emit("close")
        }
      }
    }),
    _vm._v(" "),
    _c("div", { staticClass: "dialog" }, [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: {
          click: function($event) {
            return _vm.$emit("close")
          }
        }
      }),
      _vm._v(" "),
      _c("div", [
        _c(
          "select",
          {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.region,
                expression: "region"
              }
            ],
            staticClass: "form-control",
            attrs: { id: "region", required: "" },
            on: {
              change: function($event) {
                var $$selectedVal = Array.prototype.filter
                  .call($event.target.options, function(o) {
                    return o.selected
                  })
                  .map(function(o) {
                    var val = "_value" in o ? o._value : o.value
                    return val
                  })
                _vm.region = $event.target.multiple
                  ? $$selectedVal
                  : $$selectedVal[0]
              }
            }
          },
          [
            _c("option", {
              attrs: { selected: "", disabled: "" },
              domProps: { innerHTML: _vm._s(_vm.i18n.page_region_select) }
            }),
            _vm._v(" "),
            _vm._l(_vm.regions, function(region) {
              return _c(
                "option",
                { key: region.name, domProps: { value: region.name } },
                [
                  _vm._v(
                    "\n                    " +
                      _vm._s(_vm.regionName(region.name, region.count)) +
                      "\n                "
                  )
                ]
              )
            })
          ],
          2
        )
      ]),
      _vm._v(" "),
      _c("div", [
        _c("div", [
          _c(
            "select",
            {
              staticClass: "form-control",
              attrs: { id: "quality", required: "" },
              domProps: { value: _vm.settings.quality },
              on: { change: _vm.onSelected }
            },
            [
              _c("option", {
                attrs: { disabled: "" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_title) }
              }),
              _vm._v(" "),
              _c("option", {
                attrs: { value: "Retina", selected: "" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_retina) }
              }),
              _vm._v(" "),
              _c("option", {
                attrs: { value: "High", selected: "" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_high) }
              }),
              _vm._v(" "),
              _c("option", {
                attrs: { value: "Medium" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_medium) }
              }),
              _vm._v(" "),
              _c("option", {
                attrs: { value: "Low" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_low) }
              }),
              _vm._v(" "),
              _c("option", {
                attrs: { value: "VeryLow" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_graphics_very_low) }
              })
            ]
          )
        ])
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "options" },
        [
          _vm._l(_vm.settings, function(value, key) {
            return _vm.showOption(key)
              ? [
                  _c(
                    "div",
                    {
                      key: key,
                      staticClass:
                        "checkbox checkbox-info checkbox-circle option"
                    },
                    [
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.settings[key],
                            expression: "settings[key]"
                          }
                        ],
                        staticClass: "styled",
                        attrs: { type: "checkbox", id: key },
                        domProps: {
                          checked: Array.isArray(_vm.settings[key])
                            ? _vm._i(_vm.settings[key], null) > -1
                            : _vm.settings[key]
                        },
                        on: {
                          change: [
                            function($event) {
                              var $$a = _vm.settings[key],
                                $$el = $event.target,
                                $$c = $$el.checked ? true : false
                              if (Array.isArray($$a)) {
                                var $$v = null,
                                  $$i = _vm._i($$a, $$v)
                                if ($$el.checked) {
                                  $$i < 0 &&
                                    _vm.$set(
                                      _vm.settings,
                                      key,
                                      $$a.concat([$$v])
                                    )
                                } else {
                                  $$i > -1 &&
                                    _vm.$set(
                                      _vm.settings,
                                      key,
                                      $$a
                                        .slice(0, $$i)
                                        .concat($$a.slice($$i + 1))
                                    )
                                }
                              } else {
                                _vm.$set(_vm.settings, key, $$c)
                              }
                            },
                            _vm.onChange
                          ]
                        }
                      }),
                      _vm._v(" "),
                      _c("label", {
                        attrs: { for: key },
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n[_vm.options[key]])
                        }
                      })
                    ]
                  )
                ]
              : _vm._e()
          })
        ],
        2
      ),
      _vm._v(" "),
      _c("div", { staticClass: "versions" }, [
        !_vm.guest ? _c("span", [_vm._v(_vm._s(_vm.userId))]) : _vm._e(),
        _c("br"),
        _vm._v(" "),
        _c("span", [_vm._v(_vm._s(_vm.version))])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "actions" }, [
        _c("button", {
          staticClass: "btn btn-warning btn-spectate",
          class: { disabled: _vm.isInGame },
          attrs: { disabled: _vm.isInGame },
          domProps: { innerHTML: _vm._s(_vm.i18n.page_spectate) },
          on: {
            click: function($event) {
              return _vm.$emit("spectate")
            }
          }
        }),
        _vm._v(" "),
        !_vm.inFacebook && !_vm.guest
          ? _c("button", {
              staticClass: "btn btn-danger btn-logout",
              domProps: { innerHTML: _vm._s(_vm.i18n.page_logout) },
              on: {
                click: function($event) {
                  return _vm.$emit("logout")
                }
              }
            })
          : _vm._e()
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0b8695e7", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 473 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        { name: "show", rawName: "v-show", value: _vm.show, expression: "show" }
      ],
      class: { moveToTop: _vm.showSettings },
      attrs: { id: "mainui-play" }
    },
    [
      _c("div", { staticClass: "play-container" }, [
        _vm.connecting
          ? _c(
              "div",
              { staticClass: "play-blocker", attrs: { id: "blocker" } },
              [
                _c("span", {
                  staticClass: "connecting-text",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_connecting) }
                }),
                _vm._v(" "),
                _c("img", { attrs: { src: "img/loader.gif", alt: "loader" } }),
                _vm._v(" "),
                _c("span", { staticClass: "connecting-info" })
              ]
            )
          : _vm._e(),
        _vm._v(" "),
        _c(
          "div",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.connecting && _vm.isHome,
                expression: "!connecting && isHome"
              }
            ],
            staticClass: "agario-panel",
            attrs: { id: "mainPanel" }
          },
          [
            _c("button", {
              staticClass: "btn sprite-main cog",
              attrs: { id: "settingsButton", type: "button" },
              on: {
                click: function($event) {
                  return _vm.toggleSettings()
                }
              }
            }),
            _vm._v(" "),
            _vm._m(0),
            _vm._v(" "),
            _c("div", { class: { guest: _vm.guest }, attrs: { id: "title" } }, [
              _vm._v("Agar.io")
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "playnick" } }, [
              _vm.showSkinEditorBubble
                ? _c("div", { staticClass: "bubble" }, [
                    _vm._v("Create your own skin!")
                  ])
                : _vm._e(),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "circle",
                  attrs: { id: "skinButton" },
                  on: { click: _vm.openSkins }
                },
                [
                  _c("div", { attrs: { id: "skinLabel" } }, [_vm._v("Skins")]),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _vm._m(2)
                ]
              ),
              _vm._v(" "),
              _vm.show
                ? _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.settings.lastNick,
                        expression: "settings.lastNick"
                      }
                    ],
                    ref: "nick",
                    attrs: {
                      id: "nick",
                      placeholder: "Nick",
                      maxlength: "15",
                      autofocus: ""
                    },
                    domProps: { value: _vm.settings.lastNick },
                    on: {
                      change: function($event) {
                        return _vm.changeSettings(
                          "lastNick",
                          $event.target.value
                        )
                      },
                      keyup: function($event) {
                        if (
                          !$event.type.indexOf("key") &&
                          _vm._k(
                            $event.keyCode,
                            "enter",
                            13,
                            $event.key,
                            "Enter"
                          )
                        ) {
                          return null
                        }
                        return _vm.play.apply(null, arguments)
                      },
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.settings, "lastNick", $event.target.value)
                      }
                    }
                  })
                : _vm._e(),
              _vm._v(" "),
              _c("button", {
                staticClass: "btn btn-play",
                attrs: { id: "play", type: "submit" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_play) },
                on: { click: _vm.play }
              })
            ]),
            _vm._v(" "),
            _vm.guest
              ? _c("div", { attrs: { id: "socialLoginContainer" } }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-primary btn-login btn-fb",
                      attrs: { id: "btnFacebookLogin" },
                      on: { click: _vm.facebookLogin }
                    },
                    [
                      _c("span", {
                        staticClass: "social social-facebook facebook-icon"
                      }),
                      _vm._v(" "),
                      _c("span", {
                        staticClass: "btn-text",
                        domProps: {
                          innerHTML: _vm._s(
                            _vm.i18n.page_menu_login_facebook_short
                          )
                        }
                      })
                    ]
                  ),
                  _vm._v(" "),
                  !_vm.inFacebook
                    ? _c(
                        "button",
                        {
                          staticClass: "btn btn-primary btn-login btn-google",
                          attrs: { id: "googleLogin" },
                          on: { click: _vm.googleLogin }
                        },
                        [
                          _c("span", { staticClass: "Google-icon" }),
                          _vm._v(" "),
                          _c("span", {
                            staticClass: "btn-text",
                            domProps: {
                              innerHTML: _vm._s(
                                _vm.i18n.page_menu_login_google_short
                              )
                            }
                          })
                        ]
                      )
                    : _vm._e()
                ])
              : _vm._e(),
            _vm._v(" "),
            _c(
              "div",
              { class: { guest: _vm.guest }, attrs: { id: "instructions" } },
              [
                _vm.guest
                  ? _c("span", { staticClass: "text-muted" }, [
                      _c("span", {
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_instructions_mouse)
                        }
                      }),
                      _c("br"),
                      _vm._v(" "),
                      _c("span", {
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_instructions_w_space)
                        }
                      }),
                      _c("br")
                    ])
                  : _c("span", { staticClass: "text-muted" }, [
                      _c("span", {
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_instructions_mouse)
                        }
                      }),
                      _c("br"),
                      _vm._v(" "),
                      _c("span", {
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_instructions_space)
                        }
                      }),
                      _c("br"),
                      _vm._v(" "),
                      _c("span", {
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_instructions_w)
                        }
                      }),
                      _c("br")
                    ])
              ]
            ),
            _vm._v(" "),
            _vm.showSettings
              ? _c("settings-comp", {
                  attrs: { inFacebook: _vm.inFacebook },
                  on: {
                    close: _vm.onCloseSettings,
                    change: _vm.changeSettings,
                    spectate: _vm.spectate,
                    logout: _vm.logout
                  }
                })
              : _vm._e()
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.connecting && _vm.isGameOver,
                expression: "!connecting && isGameOver"
              }
            ],
            staticClass: "agario-panel",
            attrs: { id: "stats" }
          },
          [
            _c("h2", [_c("center", [_vm._v("Match Results")])], 1),
            _vm._v(" "),
            _c("canvas", {
              attrs: { id: "statsGraph", width: "350", height: "170" }
            }),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsPelletsContainer" } }, [
              _c(
                "span",
                { staticClass: "stats-food-eaten", attrs: { id: "statsText" } },
                [_vm._v(_vm._s(_vm.stats.foodEaten))]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_stats_food_eaten) }
              })
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsHighestMassContainer" } }, [
              _c(
                "span",
                {
                  staticClass: "stats-highest-mass",
                  attrs: { id: "statsText" }
                },
                [_vm._v(_vm._s(Math.floor(_vm.stats.highestMass)))]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: {
                  innerHTML: _vm._s(_vm.i18n.page_stats_highest_mass)
                }
              })
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsTimeAliveContainer" } }, [
              _c(
                "span",
                { staticClass: "stats-time-alive", attrs: { id: "statsText" } },
                [_vm._v(_vm._s(_vm.formatSeconds(_vm.stats.timeAlive)))]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_stats_time_alive) }
              })
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsTimeLeaderboardContainer" } }, [
              _c(
                "span",
                {
                  staticClass: "stats-leaderboard-time",
                  attrs: { id: "statsText" }
                },
                [_vm._v(_vm._s(_vm.formatSeconds(_vm.stats.leaderTime)))]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: {
                  innerHTML: _vm._s(_vm.i18n.page_stats_leaderboard_time)
                }
              })
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsPlayerCellsEatenContainer" } }, [
              _c(
                "span",
                {
                  staticClass: "stats-cells-eaten",
                  attrs: { id: "statsText" }
                },
                [_vm._v(_vm._s(_vm.stats.cellsEaten))]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_stats_cells_eaten) }
              })
            ]),
            _vm._v(" "),
            _c("div", { attrs: { id: "statsTopPositionContainer" } }, [
              _c(
                "span",
                {
                  staticClass: "stats-top-position",
                  attrs: { id: "statsText" }
                },
                [
                  _vm._v(
                    _vm._s(
                      _vm.stats.topPosition == 0 ? ":(" : _vm.stats.topPosition
                    )
                  )
                ]
              ),
              _vm._v(" "),
              _c("span", {
                attrs: { id: "statsSubtext" },
                domProps: {
                  innerHTML: _vm._s(_vm.i18n.page_stats_top_position)
                }
              })
            ]),
            _vm._v(" "),
            _c("hr"),
            _vm._v(" "),
            _c("div", { attrs: { id: "socialStats" } }, [
              _c(
                "button",
                {
                  staticClass: "g-interactivepost btn btn-primary btn-google",
                  attrs: {
                    id: "googleShare",
                    "data-contenturl": "http://agar.io",
                    "data-clientid": "",
                    "data-cookiepolicy": "single_host_origin",
                    "data-prefilltext": "",
                    "data-calltoactionlabel": "BEAT",
                    "data-calltoactionurl": "http://agar.io"
                  },
                  on: { click: _vm.googleShare }
                },
                [
                  _c("span", { staticClass: "Google-icon" }),
                  _vm._v(" "),
                  _c("span", {
                    staticClass: "btn-text",
                    domProps: { innerHTML: _vm._s(_vm.i18n.page_share) }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass: "btn btn-primary btn-fb",
                  attrs: { id: "fbShare" },
                  on: { click: _vm.fbShare }
                },
                [
                  _c("span", {
                    staticClass: "social social-facebook facebook-icon"
                  }),
                  _vm._v(" "),
                  _c("span", {
                    staticClass: "btn-text",
                    domProps: { innerHTML: _vm._s(_vm.i18n.page_share) }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass: "btn btn-primary btn-twitter",
                  attrs: { id: "twShare" },
                  on: { click: _vm.twShare }
                },
                [
                  _c("span", { staticClass: "Twitter-icon" }),
                  _vm._v(" "),
                  _c("span", {
                    staticClass: "btn-text",
                    domProps: { innerHTML: _vm._s(_vm.i18n.page_share) }
                  })
                ]
              )
            ]),
            _vm._v(" "),
            _c("button", {
              staticClass: "btn btn-primary",
              attrs: { id: "statsContinue" },
              domProps: { innerHTML: _vm._s(_vm.i18n.page_continue) },
              on: { click: _vm.onContinue }
            })
          ]
        )
      ])
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "socialButtons" } }, [
      _c("iframe", {
        attrs: {
          src:
            "https://www.facebook.com/plugins/like.php?locale=en_GB&\n                             href=https%3A%2F%2Fwww.facebook.com%2Fplayagar.io&layout=button&\n                             action=like&size=small&show_faces=false&share=true&appId=677505792353827",
          scrolling: "no",
          frameborder: "0",
          allowTransparency: "true",
          allow: "encrypted-media"
        }
      }),
      _vm._v(" "),
      _c("div", [
        _c("div", {
          staticClass: "g-ytsubscribe",
          attrs: {
            "data-channelid": "UCC6hurPo_LxL7C0YFYgYnIw",
            "data-layout": "default",
            "data-count": "default"
          }
        })
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "circle bordered skinWrapper" }, [
      _c("img", { attrs: { src: "", crossorigin: "anonymous" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "circle tiny green" }, [
      _c("span", { staticClass: "outlined-text plus-text" }, [_vm._v("+")])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0733aa78", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 474 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7da4b1c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Ads_vue__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(475)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7da4b1c8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Ads_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7da4b1c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Ads_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7da4b1c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Ads_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Ads.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7da4b1c8", Component.options)
  } else {
    hotAPI.reload("data-v-7da4b1c8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(476);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("28abe681", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7da4b1c8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Ads.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7da4b1c8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Ads.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#mainui-ads[data-v-7da4b1c8] {\n    text-align: bottom;\n}\n#advertisement[data-v-7da4b1c8] {\n    text-align: bottom;\n}\n#adbg[data-v-7da4b1c8] {\n    width: 300px;\n    height: 250px;\n    /* background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center center; */\n}\n#agar-io_300x250[data-v-7da4b1c8] {\n    text-align: center;\n}\n.text-muted[data-v-7da4b1c8] {\n    display: block;\n    margin: 5px;\n    font-weight: bold;\n    color: #777777;\n}\n.text-ads[data-v-7da4b1c8] {\n    font-size: 12pt;\n}\n\n", ""]);

// exports


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = AdsManager;
function AdsManager(MC, window, targeted) {}

/***/ }),
/* 478 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "agar-io_300x250" } }, [
      _c("script", { attrs: { type: "application/javascript" } }, [
        _vm._v(
          "\n        aiptag.cmd.display.push(function() { aipDisplayTag.display('agar-io_300x250'); });\n    "
        )
      ])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7da4b1c8", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b5576c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modes_vue__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(480)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-4b5576c8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modes_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b5576c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modes_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4b5576c8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modes_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Modes.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4b5576c8", Component.options)
  } else {
    hotAPI.reload("data-v-4b5576c8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(481);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("7dc57842", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4b5576c8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Modes.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4b5576c8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Modes.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.modes-container[data-v-4b5576c8] {\n    position: relative;\n    padding: 20px;\n}\n.title[data-v-4b5576c8] {\n    text-align: center;\n    font-size: 18pt;\n    margin: 5px;\n    margin-top: -5px;\n}\n.gamemodes[data-v-4b5576c8] {\n    display:inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    height: 110px;\n}\n.gamemodes > .item[data-v-4b5576c8] {\n    position: relative;\n    background-color: #E2E2E2;\n    border-radius: 5px;\n    flex-basis: 23%;\n    text-align: center;\n    vertical-align: baseline;\n    color: #a4a4a4;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n}\n.ffa[data-v-4b5576c8] {\n    background: #E2E2E2 url('/img/gamemode_Icon_FFA.png') top 20px center no-repeat;\n    background-size: 50px auto;\n}\n.battleroyale[data-v-4b5576c8] {\n    background: #E2E2E2 url('/img/gamemode_Icon_BattleRoyale.png') top 0px center no-repeat;\n    background-size: 70px auto;\n}\n.experimental[data-v-4b5576c8] {\n    background: #E2E2E2 url('/img/gamemode_Icon_Experimental.png') top 20px center no-repeat;\n    background-size: 50px auto;\n}\n.teams[data-v-4b5576c8] {\n    background: #E2E2E2 url('/img/gamemode_Icon_Teams.png') top 5px center no-repeat;\n    background-size: 50px auto;\n}\n.item:hover.ffa[data-v-4b5576c8], .item.active.ffa[data-v-4b5576c8] {\n    background-color: #ff3f58;\n    color: #fff;\n}\n.item:hover.battleroyale[data-v-4b5576c8], .item.active.battleroyale[data-v-4b5576c8] {\n    background-color: #00c1f1;\n    color: #fff;\n}\n.item:hover.teams[data-v-4b5576c8], .item.active.teams[data-v-4b5576c8] {\n    background-color: #ffaa00;\n    color: #fff;\n}\n.item:hover.experimental[data-v-4b5576c8], .item.active.experimental[data-v-4b5576c8] {\n    background-color: #1e67e0;\n    color: #fff;\n}\n.item > .label[data-v-4b5576c8] {\n    display: inline-block;\n    font-size: 9pt;\n    font-weight: bold;\n    padding-top: 80px;\n    line-height: 11px;\n}\n.item > .ribbon[data-v-4b5576c8] {\n    background-color: #F00;\n    position: absolute;\n    top: 0px;\n    padding: 5px;\n    width: 100%;\n    font-size: 12px;\n    color: #FFF;\n    font-weight: bold;\n}\n.item > .ribbon > div[data-v-4b5576c8] {\n    position: relative;\n}\n.experimental > .label[data-v-4b5576c8] {\n    font-size: 7pt;\n}\n", ""]);

// exports


/***/ }),
/* 482 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "mainui-modes" } }, [
    _c(
      "div",
      { staticClass: "modes-container" },
      [
        _c("h4", {
          staticClass: "title",
          domProps: { innerHTML: _vm._s(_vm.i18n.page_game_modes) }
        }),
        _vm._v(" "),
        _vm._l(Math.ceil(_vm.modes.length / _vm.modesPerLine), function(
          rowIndex
        ) {
          return _c(
            "div",
            { key: rowIndex, staticClass: "gamemodes" },
            _vm._l(_vm.rowModes(_vm.modesPerLine, rowIndex), function(
              mode,
              modeIndex
            ) {
              return _c(
                "div",
                {
                  key: mode.id,
                  staticClass: "item",
                  class: [
                    {
                      active: _vm.selected(mode.id)
                    },
                    mode.class
                  ],
                  style: {
                    marginLeft:
                      (modeIndex == 0
                        ? (100 -
                            (100 / _vm.modesPerLine) *
                              _vm.rowModes(_vm.modesPerLine, rowIndex).length) *
                          0.5
                        : 0) + "%",
                    marginRight:
                      (modeIndex ==
                      _vm.rowModes(_vm.modesPerLine, rowIndex).length - 1
                        ? (100 -
                            (100 / _vm.modesPerLine) *
                              _vm.rowModes(_vm.modesPerLine, rowIndex).length) *
                          0.5
                        : 0) + "%"
                  },
                  attrs: { id: "mode_" + mode.class },
                  on: {
                    click: function($event) {
                      return _vm.select(mode.id)
                    }
                  }
                },
                [
                  _c("span", { staticClass: "label" }, [
                    _vm._v(_vm._s(_vm.i18n[mode.label]))
                  ])
                ]
              )
            }),
            0
          )
        })
      ],
      2
    )
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4b5576c8", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 483 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3152cd5c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Party_vue__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(484)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-3152cd5c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Party_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3152cd5c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Party_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3152cd5c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Party_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Party.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3152cd5c", Component.options)
  } else {
    hotAPI.reload("data-v-3152cd5c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(485);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("391413e7", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3152cd5c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Party.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3152cd5c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Party.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#mainui-party[data-v-3152cd5c] {\n    position: relative;\n    padding: 0px 20px;\n    overflow: hidden;\n    width: auto;\n}\n#mainui-party .disabler[data-v-3152cd5c] {\n    z-index: 1;\n}\n#mainui-party.selected[data-v-3152cd5c] {\n    border: 5px solid #54c800;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n.agario-party[data-v-3152cd5c] {\n    cursor: auto;\n}\n.try-now[data-v-3152cd5c] {\n    position: absolute;\n    margin: -26px 0px 0px -33px;\n    overflow: hidden;\n    transform: scale(0.75);\n}\n.try-now > .label[data-v-3152cd5c] {\n    transform: rotate(-45deg);\n    position: absolute;\n    top: 21px;\n    left: -3px;\n    color: #fff;\n    font-weight: bold;\n    font-size: 14px;\n}\n.party-token[data-v-3152cd5c] {\n    background-color: white !important;\n    color: black;\n    border-radius: 4px 0px 0px 4px;\n    height: 23px;\n    margin-right: -8px;\n    font-size: 13px;\n    outline: none;\n}\n.party-icon[data-v-3152cd5c] {\n    position: relative;\n    margin: 5px;\n}\n.party-icon-back[data-v-3152cd5c] {\n    border: none;\n    border-style: none;\n    background-color: #fff;\n    cursor: pointer;\n}\n.btn-party[data-v-3152cd5c] {\n    width: 112px;\n    height: 28px;\n    font-weight: 700;\n}\n.agario-party-dialog .btn-party[data-v-3152cd5c] {\n    height: 34px;\n}\n.agario-party .btn-party[data-v-3152cd5c] {\n    width: 95px;\n}\n.party-create[data-v-3152cd5c], .party-copy[data-v-3152cd5c] {\n    background-color: #00d3ff;\n    border-color: #00d3ff;\n    width: 68px;\n}\n.party-create[data-v-3152cd5c]:active,\n.party-copy[data-v-3152cd5c]:active,\n.party-create[data-v-3152cd5c]:focus,\n.party-copy[data-v-3152cd5c]:focus {\n    background-color: #00d3ff;\n    border-color: #00d3ff;\n}\n.party-create[data-v-3152cd5c]:hover,\n.party-copy[data-v-3152cd5c]:hover {\n    background-color: #3F89B6;\n    border-color: #3F89B6;\n}\n.party-copy[data-v-3152cd5c] {\n    border-radius: 0px 4px 4px 0px;\n}\n.party-join[data-v-3152cd5c],\n.party-play[data-v-3152cd5c] {\n    background-color: #54c800;\n    border-color: #54c800;\n    width: 77px;\n}\n.party-join[data-v-3152cd5c]:hover,\n.party-play[data-v-3152cd5c]:hover {\n    background-color: #347F01;\n    border-color: #347F01;\n}\n.party-join[data-v-3152cd5c]:active,\n.party-play[data-v-3152cd5c]:active,\n.party-join[data-v-3152cd5c]:focus,\n.party-play[data-v-3152cd5c]:focus {\n    background-color: #54c800;\n    border-color: #54c800\n}\n.party-join-right[data-v-3152cd5c] {\n    border-radius:0px 4px 4px 0px;\n}\n.party-cancel[data-v-3152cd5c],\n.party-cancel[data-v-3152cd5c]:hover,\n.party-cancel[data-v-3152cd5c]:focus,\n.party-cancel[data-v-3152cd5c]:active {\n    background-color: #ed2d2d;\n    border-color: #ed2d2d;\n    position: relative;\n}\n.party-title[data-v-3152cd5c] {\n    font-weight: bold;\n    font-size: 20.8px;\n}\nh4.party-title[data-v-3152cd5c] {\n    margin: 0px;\n    text-align: center;\n    background-position: 50px;\n    margin-bottom: 5px;\n    margin-top: 14px;\n}\n.party-text[data-v-3152cd5c] {\n    font-size: 16px;\n    text-align: center;\n    color: #7d7d7d;\n    line-height: 20px;\n    height: 22px;\n    overflow: hidden;\n}\n.party-text.gameover[data-v-3152cd5c] {\n    font-size: 15px;\n    line-height: 15px;\n    height: 35px;\n}\n.party-popup[data-v-3152cd5c] {\n    font-size: 16px;\n    text-align: center;\n    color: #7d7d7d;\n    line-height: 20px;\n    padding: 10px;\n}\n.party-error[data-v-3152cd5c] {\n    height: 60px;\n}\n.party-dialog[data-v-3152cd5c] {\n    display: block;\n}\n.agario-party-dialog[data-v-3152cd5c] {\n    position: fixed;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 280px;\n    padding: 20px;\n    z-index: 500;\n}\n.party-blocker[data-v-3152cd5c] {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n.clearfix[data-v-3152cd5c] {\n    display: flex;\n    justify-content: center;\n    padding-top: 10px;\n}\n.clearfix button[data-v-3152cd5c] {\n    margin: 0 5px;\n}\n.agario-party-exit[data-v-3152cd5c] {\n    position: absolute;\n    right: 0px;\n    top: 5px;\n}\n.btn-dialog[data-v-3152cd5c] {\n    width: 130px;\n}\n.creating-party-text[data-v-3152cd5c] {\n    position: absolute;\n    cursor: default;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: #343434;\n    font-size: 24px;\n    line-height: 100px;\n}\n.copyWarning[data-v-3152cd5c] {\n    font-size: 11px;\n}\n.loading[data-v-3152cd5c] {\n    padding: 0px;\n    overflow: hidden;\n    position: relative;\n}\n.form-control.party-token[data-v-3152cd5c] {\n    width:130px;\n    cursor: text;\n    width: 120px;\n}\n.clearfix.token[data-v-3152cd5c] {\n    padding-top: 0px;\n}\n.partymode-menu-icon[data-v-3152cd5c] {\n    position: absolute;\n    left: 70px;\n}\n\n", ""]);

// exports


/***/ }),
/* 486 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: { selected: _vm.partyState == _vm.PartyState.JOINED },
      attrs: { id: "mainui-party" }
    },
    [
      _c("div", { staticClass: "agario-party" }, [
        _vm.partyState == _vm.PartyState.INIT &&
        _vm.gameState != _vm.GameState.GAMEOVER
          ? _c("div", [
              _c("span", { staticClass: "sprite-main partymode-menu-icon" }),
              _vm._v(" "),
              _c("h4", { staticClass: "party-title" }, [
                _c("span", {
                  staticClass: "party-title",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                })
              ]),
              _vm._v(" "),
              _c("div", {
                staticClass: "party-text",
                domProps: { innerHTML: _vm._s(_vm.i18n.page_party_description) }
              }),
              _vm._v(" "),
              _c("div", { staticClass: "clearfix" }, [
                _c("button", {
                  staticClass: "btn btn-primary btn-party party-create",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_create_party) },
                  on: {
                    click: function($event) {
                      return _vm.onClick(_vm.createParty)
                    }
                  }
                }),
                _vm._v(" "),
                _c("button", {
                  staticClass: "btn btn-primary btn-party party-join",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_join_party) },
                  on: {
                    click: function($event) {
                      return _vm.onClick(_vm.enterCodeParty)
                    }
                  }
                })
              ])
            ])
          : _vm.partyState == _vm.PartyState.CREATING
          ? _c("div", { staticClass: "loading" }, [
              _c("canvas", {
                staticClass: "cell-spinner",
                attrs: { width: "220", height: "100", "data-size": "26" }
              }),
              _vm._v(" "),
              _c("div", {
                staticClass: "creating-party-text",
                domProps: { innerHTML: _vm._s(_vm.i18n.page_creating_party) }
              })
            ])
          : _vm.partyState == _vm.PartyState.JOINING
          ? _c("div", { staticClass: "loading" }, [
              _c("canvas", {
                staticClass: "cell-spinner",
                attrs: { width: "220", height: "100", "data-size": "26" }
              }),
              _vm._v(" "),
              _c("div", {
                staticClass: "creating-party-text",
                domProps: { innerHTML: _vm._s(_vm.i18n.page_joining_party) }
              })
            ])
          : _vm.partyState == _vm.PartyState.JOINED ||
            _vm.gameState == _vm.GameState.GAMEOVER
          ? _c("div", [
              _c("div", { staticClass: "try-now" }, [
                _vm.partyState == _vm.PartyState.JOINED
                  ? _c("span", { staticClass: "sprite-main inparty-banner" })
                  : _vm._e(),
                _c("span", { staticClass: "label" }, [_vm._v("IN PARTY")])
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "sprite-main partymode-menu-icon" }),
              _vm._v(" "),
              _c(
                "h4",
                { staticClass: "party-title" },
                [
                  _c("center", [
                    _c("span", {
                      staticClass: "party-title",
                      domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                    })
                  ])
                ],
                1
              ),
              _vm._v(" "),
              _c("div", {
                staticClass: "party-text",
                class: { gameover: _vm.partyState != _vm.PartyState.JOINED },
                domProps: { innerHTML: _vm._s(_vm.shareText) }
              }),
              _vm._v(" "),
              _c("div", { staticClass: "clearfix token" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.urlToken,
                      expression: "urlToken"
                    }
                  ],
                  staticClass: "form-control party-token",
                  attrs: { type: "text", value: "", readonly: "" },
                  domProps: { value: _vm.urlToken },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.urlToken = $event.target.value
                    }
                  }
                }),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    directives: [
                      {
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: "Use <strong>&#8984; + C </strong> to copy!",
                        expression:
                          "'Use <strong>&#8984; + C </strong> to copy!'"
                      }
                    ],
                    staticClass:
                      "btn btn-primary btn-party party-copy copy-party-token",
                    on: {
                      click: function($event) {
                        _vm.onClick(function() {
                          _vm.$emit("copy:token", ".party-token")
                        })
                      }
                    }
                  },
                  [_vm._v("Copy")]
                ),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    staticClass: "btn btn-primary btn-party party-play",
                    on: {
                      click: function($event) {
                        return _vm.onClick(_vm.playParty)
                      }
                    }
                  },
                  [_vm._v("Play")]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "copyWarning" })
            ])
          : _vm.partyState == _vm.PartyState.LINK
          ? _c("div", [
              _c("span", { staticClass: "sprite-main partymode-menu-icon" }),
              _vm._v(" "),
              _c(
                "h4",
                { staticClass: "party-title" },
                [
                  _c("center", [
                    _c("span", {
                      staticClass: "party-title",
                      domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                    })
                  ])
                ],
                1
              ),
              _vm._v(" "),
              _c("div", {
                staticClass: "party-text",
                domProps: { innerHTML: _vm._s(_vm.i18n.page_join_party_code) }
              }),
              _vm._v(" "),
              _c("div", { staticClass: "clearfix" }, [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.token,
                      expression: "token"
                    }
                  ],
                  staticClass: "form-control party-token",
                  attrs: {
                    type: "text",
                    value: "Party Code",
                    placeholder: "Party Code"
                  },
                  domProps: { value: _vm.token },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.token = $event.target.value
                    }
                  }
                }),
                _vm._v(" "),
                _c("button", {
                  staticClass: "btn btn-primary btn-party party-join",
                  domProps: { innerHTML: _vm._s(_vm.i18n.page_join_party) },
                  on: {
                    click: function($event) {
                      return _vm.onClick(_vm.joinParty)
                    }
                  }
                })
              ])
            ])
          : _vm.partyState == _vm.PartyState.ERROR
          ? _c("div", [
              _c("span", { staticClass: "sprite-main partymode-menu-icon" }),
              _vm._v(" "),
              _c(
                "h4",
                { staticClass: "party-title" },
                [
                  _c("center", [
                    _c("span", {
                      staticClass: "party-title",
                      domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                    })
                  ])
                ],
                1
              ),
              _vm._v(" "),
              _c("div", {
                staticClass: "party-text party-error",
                domProps: { innerHTML: _vm._s(_vm.errorMessage) }
              })
            ])
          : _vm._e(),
        _vm._v(" "),
        _vm.partyState != _vm.PartyState.INIT &&
        _vm.gameState != _vm.GameState.GAMEOVER
          ? _c("div", { staticClass: "agario-party-exit" }, [
              _c(
                "button",
                {
                  directives: [
                    {
                      name: "tooltip",
                      rawName: "v-tooltip",
                      value: _vm.i18n.page_leave_party_tooltip,
                      expression: "i18n.page_leave_party_tooltip"
                    }
                  ],
                  staticClass: "party-icon-back",
                  attrs: { type: "button" }
                },
                [
                  _c("span", {
                    staticClass: "sprite-main partymode-menu-leave",
                    attrs: { alt: "exit" },
                    on: {
                      click: function($event) {
                        return _vm.onClick(_vm.exitParty)
                      }
                    }
                  })
                ]
              )
            ])
          : _vm._e()
      ]),
      _vm._v(" "),
      _vm.confirm
        ? _c("div", { staticClass: "party-dialog" }, [
            _vm._m(0),
            _vm._v(" "),
            _vm.gameState != _vm.GameState.GAMEOVER
              ? _c("div", { staticClass: "agario-party-dialog" }, [
                  _c("span", {
                    staticClass: "leagues-inner-close sprite-main Close",
                    on: {
                      click: function($event) {
                        return _vm.onClick(_vm.cancelParty)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c("div", [
                    _c("span", {
                      staticClass: "sprite-main partymode-menu-icon"
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "party-title" }, [
                      _c("span", {
                        staticClass: "party-title",
                        domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", {
                      staticClass: "party-popup",
                      domProps: {
                        innerHTML: _vm._s(_vm.i18n.page_party_leave_party)
                      }
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "clearfix" }, [
                      _c("button", {
                        staticClass:
                          "btn btn-primary btn-party party-join btn-dialog",
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.party_leave_button)
                        },
                        on: {
                          click: function($event) {
                            return _vm.onClick(_vm.leaveParty)
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("button", {
                        staticClass:
                          "btn btn-primary btn-party party-cancel btn-dialog",
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_menu_shop_cancel)
                        },
                        on: {
                          click: function($event) {
                            return _vm.onClick(_vm.cancelParty)
                          }
                        }
                      })
                    ])
                  ])
                ])
              : _c("div", { staticClass: "agario-party-dialog" }, [
                  _c("span", {
                    staticClass: "leagues-inner-close sprite-main Close",
                    on: {
                      click: function($event) {
                        return _vm.onClick(_vm.cancelParty)
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c("div", [
                    _c("span", {
                      staticClass: "sprite-main partymode-menu-icon"
                    }),
                    _vm._v(" "),
                    _c("h4", { staticClass: "party-title" }, [
                      _c("span", {
                        staticClass: "party-title",
                        domProps: { innerHTML: _vm._s(_vm.i18n.page_party) }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", {
                      staticClass: "party-popup",
                      domProps: {
                        innerHTML: _vm._s(_vm.i18n.page_join_party_confirmation)
                      }
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "clearfix" }, [
                      _c("button", {
                        staticClass:
                          "btn btn-primary btn-party party-join btn-dialog",
                        domProps: {
                          innerHTML: _vm._s(_vm.i18n.page_join_party)
                        },
                        on: {
                          click: function($event) {
                            return _vm.onClick(_vm.confirmPlayParty)
                          }
                        }
                      })
                    ])
                  ])
                ])
          ])
        : _vm._e()
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "party-blocker" } }, [
      _c("div", { staticClass: "disabler" })
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-3152cd5c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_22190afb_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promo_vue__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(488)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-22190afb"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promo_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_22190afb_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promo_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_22190afb_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promo_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/Promo.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-22190afb", Component.options)
  } else {
    hotAPI.reload("data-v-22190afb", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(489);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("9a82ce1c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-22190afb\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Promo.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-22190afb\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Promo.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#mainui-promo[data-v-22190afb] {\n    padding: 0px;\n    overflow: hidden;\n    background-color: unset;\n}\n.fade-enter-active[data-v-22190afb], .fade-leave-active[data-v-22190afb] {\n  transition: opacity .5s;\n}\n.fade-enter[data-v-22190afb], .fade-leave-to[data-v-22190afb] /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n", ""]);

// exports


/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "mainui-promo" } },
    [
      _c("transition", { attrs: { name: "fade" } }, [
        _c("div", {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.loaded,
              expression: "loaded"
            }
          ],
          attrs: { id: "mcbanners" }
        })
      ])
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-22190afb", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    { attrs: { name: _vm.fastEntry ? "fade-fast" : "fade-slow" } },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showMenu,
              expression: "showMenu"
            }
          ],
          attrs: { id: "mainui-app" }
        },
        [
          _c("div", { attrs: { id: "mainui-grid" } }, [
            _c(
              "div",
              [
                _vm.isHome ? _c("user") : _c("div"),
                _vm._v(" "),
                _c("offers", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.isHome,
                      expression: "isHome"
                    }
                  ]
                }),
                _vm._v(" "),
                _c("features", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.isHome,
                      expression: "isHome"
                    }
                  ]
                })
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "div",
              [
                _c("play", {
                  attrs: { inFacebook: _vm.inFacebook },
                  on: {
                    settingsUpdate: _vm.onSettingsUpdate_Play,
                    play: _vm.play,
                    continue: _vm.onContinue,
                    spectate: _vm.spectate
                  }
                }),
                _vm._v(" "),
                _c("ads")
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "div",
              [
                _vm.isHome
                  ? _c("modes", {
                      attrs: { hasPlayedTeams: _vm.hasPlayedTeams }
                    })
                  : _c("div"),
                _vm._v(" "),
                _c("party", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value:
                        _vm.isHome ||
                        (_vm.isGameOver && _vm.canShowPartyWidget),
                      expression: "isHome || (isGameOver && canShowPartyWidget)"
                    }
                  ],
                  on: {
                    "update:token": function($event) {
                      return _vm.$emit("update:token", $event)
                    },
                    "copy:token": function($event) {
                      return _vm.$emit("copy:token", $event)
                    },
                    play: _vm.play
                  }
                }),
                _vm._v(" "),
                _c("promo", {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.isHome,
                      expression: "isHome"
                    }
                  ]
                })
              ],
              1
            )
          ])
        ]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-04522a78", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d1e24ee_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Leagues_vue__ = __webpack_require__(588);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(493)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Leagues_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d1e24ee_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Leagues_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2d1e24ee_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Leagues_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/Leagues.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2d1e24ee", Component.options)
  } else {
    hotAPI.reload("data-v-2d1e24ee", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(494);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("ecc450a0", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Leagues.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Leagues.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.push([module.i, "@import url(/img/menusLeaguesUI.css);", ""]);
exports.push([module.i, "@import url(/img/menusCommonUI.css);", ""]);
exports.push([module.i, "@import url(/img/flagsLeagues.css);", ""]);
exports.i(__webpack_require__(54), "");
exports.i(__webpack_require__(189), "");

// module
exports.push([module.i, "\n.error {\n    width: 100%;\n    height: 350px;\n    position: relative;\n    top: 25px;\n    text-align: center;\n    padding: 160px 0;\n    font-size: 30px;\n    font-weight: bold;\n}\n\n", ""]);

// exports


/***/ }),
/* 495 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39985b9c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeague_vue__ = __webpack_require__(527);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(496)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-39985b9c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeague_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39985b9c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeague_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39985b9c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeague_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeague.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39985b9c", Component.options)
  } else {
    hotAPI.reload("data-v-39985b9c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(497);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("5b930d77", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-39985b9c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeague.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-39985b9c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeague.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.i(__webpack_require__(189), "");

// module
exports.push([module.i, "\n", ""]);

// exports


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(499);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("16da1746", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4e9866c4\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Header.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4e9866c4\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Header.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.bgSquare[data-v-4e9866c4] {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 307px;\n  height: 80px;\n  text-align: right;\n}\n.bgCorner[data-v-4e9866c4] {\n  position: absolute;\n  left: 307px;\n  top: 0px;\n}\n.star[data-v-4e9866c4] {\n  position: absolute;\n  transform: scale(0.40);\n  top: -35px;\n  left: -20px;\n}\n.friendIcon[data-v-4e9866c4] {\n  position: absolute;\n  transform: scale(0.90);\n  top: 10px;\n  left: 30px;\n}\n.countryIcon[data-v-4e9866c4] {\n  position: absolute;\n  top: 20px;\n  left: 30px;\n}\n.leagueTimer[data-v-4e9866c4] {\n  position: absolute;\n  top: 40px;\n  left: 110px;\n  color: white;\n  font-size: 14pt;\n}\n.topPrizeTitle[data-v-4e9866c4] {\n  position: absolute;\n  top: 2px;\n  left: 380px;\n  color: #656665;\n  font-size: 11pt;\n}\n.topPrizeList[data-v-4e9866c4] {\n  position: absolute;\n  top: 19px;\n  left: 380px;\n  color: #656665;\n  margin: 0;\n  padding-inline-start: 20px;\n  counter-reset: item;\n}\n.topPrizeValue[data-v-4e9866c4] {\n  font-size: 12px;\n  width: 40px;\n  text-align: right;\n  counter-increment: item;\n}\n.topPrizeValue[data-v-4e9866c4]:first-child {\n  font-weight: bold;\n  font-size: 12pt;\n}\n.topPrizeValue[data-v-4e9866c4]::marker {\n  content: counter(item) \".\";\n}\n.value[data-v-4e9866c4] {\n  width: 60px;\n  text-align: right;\n}\n.topPrizeIcon[data-v-4e9866c4] {\n  position: absolute;\n  top: 44px;\n  left: 460px;\n}\n.dna[data-v-4e9866c4] {\n  border: 0;\n  transform:matrix(0.25, 0, 0, 0.25, -65, -68);\n}\n.coins[data-v-4e9866c4] {\n  border: 0;\n  position: absolute;\n  top: -40px;\n  left: -40px;\n  transform:matrix(0.4, 0, 0, 0.4, 10, 0);\n}\n.morePrizes[data-v-4e9866c4] {\n  position: absolute;\n  top: 15px;\n  left: 500px;\n  width: 108px;\n  height: 51px;\n  background-color: #FDD002;\n  border: 0;\n  font-size: 14px;\n  font-weight: bold;\n  color: #FFF;\n}\n.lastResults[data-v-4e9866c4] {\n  position: absolute;\n  top: 15px;\n  left: 627px;\n  width: 108px;\n  height: 51px;\n  border: 0;\n  font-size: 14px;\n  font-weight: bold;\n  white-space: normal;\n  color: #FFF;\n  background-color: #3669E0;\n}\nbutton.leagueHelp[data-v-4e9866c4] {\n  position: absolute;\n  left: 726px;\n  top: 2px;\n  border: 0;\n  transform: scale(0.55);\n  background-color: transparent;\n}\n", ""]);

// exports


/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { class: _vm.league }, [
    _c("div", { staticClass: "container", class: _vm.league }, [
      _c("div", { staticClass: "box", class: _vm.league }, [
        _c("div", { staticClass: "boxFill", class: _vm.league })
      ]),
      _vm._v(" "),
      _c("div", { class: _vm.leagueIconClass }),
      _vm._v(" "),
      _c("span", { staticClass: "leagueName text-border", class: _vm.league }, [
        _vm._v(
          _vm._s(
            _vm.leagueName.charAt(0).toUpperCase() + _vm.leagueName.slice(1)
          )
        )
      ]),
      _vm._v(" "),
      _c(
        "span",
        { staticClass: "leagueTimer text-border", class: _vm.league },
        [_vm._v(_vm._s(_vm.endsInLabel) + _vm._s(_vm.timer))]
      ),
      _vm._v(" "),
      _c("span", { staticClass: "topPrizeTitle" }, [_vm._v("Top 3 prizes")]),
      _vm._v(" "),
      _c("ol", { staticClass: "topPrizeList" }, [
        _c("li", { staticClass: "topPrizeValue" }, [
          _vm._v(_vm._s(_vm.prize1))
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "topPrizeValue" }, [
          _vm._v(_vm._s(_vm.prize2))
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "topPrizeValue" }, [_vm._v(_vm._s(_vm.prize3))])
      ]),
      _vm._v(" "),
      _c("span", { staticClass: "topPrizeIcon" }, [
        _vm.prizeCurrency === "coin"
          ? _c("span", { staticClass: "Coins_S sprite-common coins" })
          : _vm._e(),
        _vm._v(" "),
        _vm.prizeCurrency === "dna"
          ? _c("span", { staticClass: "DNA_S sprite-common dna" })
          : _vm._e()
      ]),
      _vm._v(" "),
      _c(
        "button",
        { staticClass: "btn btn-default morePrizes", on: { click: _vm.more } },
        [_vm._v(_vm._s(_vm.morePrizesLabel))]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "btn btn-default lastResults",
          on: { click: _vm.result }
        },
        [_vm._v(_vm._s(_vm.lastWeekResultsLabel))]
      ),
      _vm._v(" "),
      _c("button", {
        staticClass: "leagueHelp hint-button sprite-main",
        on: { click: _vm.help }
      })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4e9866c4", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(502);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("9a6e316c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-654ce29c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Prizes.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-654ce29c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Prizes.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#leagues-prizes[data-v-654ce29c] {\n    width: 342px;\n}\n.content[data-v-654ce29c] {\n    position: relative;\n    width: 342px;\n    margin-top: 20px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    background-color: #F4F5F4;\n    text-align: center;\n}\n.star[data-v-654ce29c] {\n    position: absolute;\n    transform: scale(0.5);\n    left: calc(50% - 80px);\n    top: -10px;\n    margin-bottom: 20px;\n}\n.flag[data-v-654ce29c] {\n    position: absolute;\n    transform: scale(1.2);\n    top: 40px;\n    left: 150px;\n}\n.friends[data-v-654ce29c] {\n    position: absolute;\n    top: 35px;\n    left: 150px;\n}\n.world[data-v-654ce29c] {\n    position: absolute;\n    top: 35px;\n    left: 140px;\n}\n.subtitle[data-v-654ce29c] {\n    position: relative;\n    margin-top: 20px;\n}\n.prizes-list[data-v-654ce29c] {\n    position: relative;\n    display: table;\n    color: #656465;\n    font-size: 16pt;\n}\n.item[data-v-654ce29c] {\n    width: 100%;\n    height: 45px;\n    overflow: hidden;\n    vertical-align: middle;\n    line-height: 45px;\n}\n.col1[data-v-654ce29c] {\n    float: left;\n    width: 170px;\n    border-right: 2px solid #C6C7C6;\n}\n.col2[data-v-654ce29c] {\n    position: relative;\n    float: right;\n    width: 170px;\n    font-weight: bold;\n    text-align: right;\n}\n.col2 > span[data-v-654ce29c] {\n    position: absolute;\n    right: 90px;\n}\n.dna[data-v-654ce29c] {\n    position: absolute;\n    transform:matrix(0.22, 0, 0, 0.22, 40, -90);\n    vertical-align: middle;\n    top: 45px;\n    right: 20px;\n}\n.coins[data-v-654ce29c] {\n    position: absolute;\n    transform: matrix(0.35, 0, 0, 0.35, -10, -15);\n    top: 0px;\n    right: 0px;\n}\n\n", ""]);

// exports


/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "leagues-inner", attrs: { id: "leagues-prizes" } },
      [
        _c("span", {
          staticClass: "leagues-inner-close sprite-main Close",
          on: { click: _vm.close }
        }),
        _vm._v(" "),
        _c("h1", [_vm._v(_vm._s(_vm.titleLabel))]),
        _vm._v(" "),
        _c("div", { staticClass: "content" }, [
          _c("span", { staticClass: "list-prizes-icon sprite" }),
          _vm._v(" "),
          _c("span", { staticClass: "icon", class: _vm.leagueIconClass }),
          _vm._v(" "),
          _c("h2", { staticClass: "subtitle" }, [_vm._v("Prizes")]),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "prizes-list" },
            _vm._l(_vm.prizes, function(prize, index) {
              return _c("div", { key: index }, [
                _c("div", { staticClass: "item" }, [
                  _c("div", { staticClass: "col1" }, [
                    _vm._v(_vm._s(prize.place))
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "col2" }, [
                    _c(
                      "span",
                      { style: { fontSize: _vm.getFontSize(index) } },
                      [_vm._v(_vm._s(prize.price))]
                    ),
                    _vm._v(" "),
                    prize.currency === "coin"
                      ? _c("i", { staticClass: "Coins_S sprite-common coins" })
                      : _vm._e(),
                    _vm._v(" "),
                    prize.currency === "dna"
                      ? _c("i", { staticClass: "DNA_S sprite-common dna" })
                      : _vm._e()
                  ])
                ])
              ])
            }),
            0
          )
        ])
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-654ce29c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(505);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("1c8d8d44", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7c14ee4d\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Table.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7c14ee4d\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Table.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#leagueTable[data-v-7c14ee4d] {\n    width:100%;\n    height:340px;\n    overflow-y:scroll;\n    position: relative;\n    top: 10px;\n    z-index: 0;\n}\n#leagueTable.small[data-v-7c14ee4d] {\n    height: 300px;\n}\n.results #leagueTable[data-v-7c14ee4d] {\n    height: 200px;\n}\n.leagues-table-header[data-v-7c14ee4d] {\n    text-align: center;\n    font-size: 12px;\n    display: table-cell;\n    position: relative;\n    font-weight: bold;\n    color: #676867;\n    margin-bottom: 30px;\n}\n.leagues-table-header.rank[data-v-7c14ee4d] {\n    left: 45px;\n}\n.leagues-table-header.name[data-v-7c14ee4d] {\n    left: 290px;\n}\n.leagues-table-header.winnings[data-v-7c14ee4d] {\n    left: 590px;\n}\n.results .leagues-table-header.rank[data-v-7c14ee4d] {\n    left: 50px;\n}\n.results .leagues-table-header.name[data-v-7c14ee4d] {\n    left: 290px;\n}\n.results .leagues-table-header.winnings[data-v-7c14ee4d] {\n    left: 570px;\n}\n.entry[data-v-7c14ee4d] {\n    height: 60px;\n    background-color: rgb(245, 245, 245);\n    border-radius: 5px;\n    margin: 5px;\n    padding: 1px;\n    vertical-align: middle;\n    overflow: hidden;\n    position: relative;\n}\n.entry.clickable[data-v-7c14ee4d] {\n    cursor: pointer;\n}\n.user-entry[data-v-7c14ee4d] {\n    position: sticky;\n    position: -webkit-sticky;\n    position: -moz-sticky;\n    position: -ms-sticky;\n    position: -o-sticky;\n    top: 3px;\n    bottom: 3px;\n    background-color: rgb(242, 255, 230);\n    box-shadow: 0 0 0 3px rgb(79, 158, 32);\n    z-index: 1;\n}\n.icon[data-v-7c14ee4d] {\n    vertical-align: middle;\n}\n#rank.icon[data-v-7c14ee4d] {\n    transform: matrix(0.5, 0, 0, 0.5, -20, -152);\n}\n#rank.icon.other[data-v-7c14ee4d] {\n    transform: matrix(0.6, 0, 0, 0.6, 0, -152);\n    margin-right: 21px;\n}\n#photo.icon[data-v-7c14ee4d] {\n    transform: matrix(0.85, 0, 0, 0.85, -40, -152);\n    padding: 4px;\n}\n#photo.icon > img[data-v-7c14ee4d]{\n    width: 93%;\n    height: 93%;\n    position: relative;\n    left: 3px;\n}\n#photo.icon.invitable[data-v-7c14ee4d] {\n    transform: matrix(0.85, 0, 0, 0.85, 30, 0);\n}\n#star.icon[data-v-7c14ee4d] {\n    transform: matrix(0.35, 0, 0, 0.35, -80, -152);\n}\n#flag.icon[data-v-7c14ee4d] {\n    transform: matrix(0.8, 0, 0, 0.8, -125, -152);\n}\n#trophy.icon[data-v-7c14ee4d] {\n    transform: matrix(0.1, 0, 0, 0.1, 156, -155);\n}\n.results #trophy.icon[data-v-7c14ee4d] {\n    transform: matrix(0.2, 0, 0, 0.2, 225, -152);\n}\n.text[data-v-7c14ee4d] {\n    position: relative;\n    font-size: 40px;\n    color: #676867;\n}\n#rank.text[data-v-7c14ee4d] {\n    left: 100px;\n    top: 18px;\n    font-weight: bold;\n    color: #FFF;\n    text-shadow:\n    2px 0 5px #000,\n    -2px 0 5px #000,\n    0 -2px 5px #000,\n    0 2px 5px #000;\n}\n#rank.icon.other > #rank.text[data-v-7c14ee4d] {\n    left: 0;\n    top: 10px;\n    display: table;\n    margin: 5px auto;\n    font-size: 35px;\n}\n#level.text[data-v-7c14ee4d] {\n    top: 50px;\n    font-weight: bold;\n    color: #FFF;\n    display: table;\n    margin: 0 auto;\n}\n#name.text[data-v-7c14ee4d] {\n    font-size: 19px;\n    position: absolute;\n    top: -19px;\n    left: 320px;\n    width: 350px;\n    height: 100px;\n    display: table;\n}\n#name.text > p[data-v-7c14ee4d] {\n    display: table-cell;\n    vertical-align: middle;\n}\n#name.text.invitable[data-v-7c14ee4d] {\n    left: 120px;\n}\n#trophies.text[data-v-7c14ee4d] {\n    position: absolute;\n    font-size: 20px;\n    top: 18px;\n    right: 65px;\n    text-align: right;\n}\n.results #name.text[data-v-7c14ee4d] {\n    font-size: 20px;\n    float: right;\n    width: 200px;\n}\n.results #trophies.text[data-v-7c14ee4d] {\n    font-size: 20px;\n    float: right;\n    top: 14px;\n}\n.loading[data-v-7c14ee4d] {\n    height: 350px;\n    position: relative;\n    top: 25px;\n    text-align: center;\n    padding: 120px;\n    font-size: 30px;\n    font-weight: bold;\n}\n.btn-invite[data-v-7c14ee4d]:hover,\n.btn-invite[data-v-7c14ee4d] {\n    border-color: #2A56B9;\n    background-color: #3669E0;\n    color: white;\n    float: right;\n    width: 108px;\n    height: 42px;\n    margin-right: 20px;\n    margin-top: 8px;\n    font-size: 14px;\n}\n.btn-invite.no-friends[data-v-7c14ee4d] {\n    z-index: 1;\n}\n.btn-facebook[data-v-7c14ee4d] {\n    background-color: #1F6AE9;\n    border: 3px solid #0249B9;\n    border-radius: 5px;\n    font-size: 40px;\n    margin-left: 38px;\n    margin-right: 30px;\n    margin-top: 6px;\n    height: 44px;\n    width: 45px;\n    display: inline-block;\n}\n.btn-facebook > span[data-v-7c14ee4d] {\n    transform: matrix(1.5, 0, 0, 1.5, 17, -5);\n}\n.invite[data-v-7c14ee4d] {\n    font-size: 20px;\n    line-height: 60px;\n    top: -7px;\n}\n.bridge[data-v-7c14ee4d] {\n    font-size: 20px;\n    line-height: 6px;\n    vertical-align: middle;\n    text-align: center;\n    height: 60px;\n    padding-top: 15px;\n}\n.message[data-v-7c14ee4d] {\n    font-size: 20px;\n    text-align: center;\n    color: #676867;\n    position: absolute;\n    width: 90%;\n    height: 67px;\n    top: 250px;\n}\n.message > span[data-v-7c14ee4d] {\n    line-height: 30px;\n    position: relative;\n    top: 15px;\n}\n.message > button[data-v-7c14ee4d] {\n    position: absolute;\n    top: 85px;\n    left: 45%;\n}\n", ""]);

// exports


/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.friends &&
    (!_vm.hasTrophies || !_vm.areFriendsPlaying || !_vm.friendsHaveTrophies)
      ? _c("div", { staticClass: "message" }, [
          _c("span", { domProps: { innerHTML: _vm._s(_vm.messageLabel) } }),
          _vm._v(" "),
          !_vm.areFriendsPlaying || !_vm.friendsHaveTrophies
            ? _c(
                "button",
                {
                  staticClass: "btn btn-default btn-invite no-friends",
                  on: { click: _vm.inviteFriends }
                },
                [_vm._v(_vm._s(_vm.inviteFriendsButton))]
              )
            : _vm._e()
        ])
      : _vm.orderedItems.length > 0
      ? _c(
          "div",
          {
            class: {
              small:
                _vm.friends &&
                (!_vm.hasTrophies ||
                  !_vm.areFriendsPlaying ||
                  !_vm.friendsHaveTrophies)
            },
            attrs: { id: "leagueTable" }
          },
          [
            _c("div", { staticClass: "leagues-table-header rank" }, [
              _vm._v(_vm._s(_vm.rankHeaderLabel))
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "leagues-table-header name" }, [
              _vm._v(_vm._s(_vm.nameHeaderLabel))
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "leagues-table-header winnings" }, [
              _vm._v(_vm._s(_vm.winningsHeaderLabel))
            ]),
            _vm._v(" "),
            _vm._l(_vm.orderedItems, function(item, index) {
              return [
                _vm.bridgePosition(index)
                  ? _c(
                      "div",
                      { key: "bridge_" + index, staticClass: "bridge" },
                      [_vm._m(0, true)]
                    )
                  : _vm._e(),
                _vm._v(" "),
                !_vm.showInvitable
                  ? _c(
                      "div",
                      {
                        key: item.rank,
                        staticClass: "entry",
                        class: {
                          "user-entry": _vm.isCurrentUser(item),
                          clickable: !_vm.isCurrentUser(item)
                        },
                        on: {
                          click: function($event) {
                            !_vm.isCurrentUser(item) && _vm.showProfile(item)
                          }
                        }
                      },
                      [
                        _c(
                          "span",
                          {
                            class: _vm.rankIconClass(item.rank),
                            attrs: { id: "rank" }
                          },
                          [
                            item.rank <= 3
                              ? _c(
                                  "span",
                                  {
                                    staticClass: "text",
                                    attrs: { id: "rank" }
                                  },
                                  [_vm._v(_vm._s(item.rank))]
                                )
                              : _c(
                                  "span",
                                  {
                                    staticClass: "text",
                                    style: _vm.getFontSize(item.rank),
                                    attrs: { id: "rank" }
                                  },
                                  [_vm._v("#" + _vm._s(item.rank))]
                                )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            staticClass: "profilepic-empty-small sprite icon",
                            class: {
                              "profilepic-emptygreen-small": item.active
                            },
                            attrs: { id: "photo" }
                          },
                          [
                            _c("img", {
                              attrs: { src: item.realmInfo.avatarUrl }
                            })
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            class: _vm.leagueIconClass(item.leagueName),
                            attrs: { id: "star" }
                          },
                          [
                            _c(
                              "span",
                              {
                                staticClass: "text text-shadow",
                                class: item.leagueName.toLowerCase(),
                                attrs: { id: "level" }
                              },
                              [
                                _vm._v(
                                  _vm._s(
                                    _vm.isCurrentUser(item)
                                      ? _vm.user.level
                                      : item.level
                                  )
                                )
                              ]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("span", {
                          class: _vm.flagIconClass(item.countryCode),
                          attrs: { id: "flag" }
                        }),
                        _vm._v(" "),
                        _c(
                          "span",
                          { staticClass: "text", attrs: { id: "name" } },
                          [_c("p", [_vm._v(_vm._s(item.displayName))])]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          { staticClass: "text", attrs: { id: "trophies" } },
                          [_vm._v(_vm._s(item.trophies))]
                        ),
                        _vm._v(" "),
                        _c("span", {
                          staticClass: "Trophy sprite-main icon",
                          attrs: { id: "trophy" }
                        })
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.showInvitable
                  ? _c(
                      "div",
                      {
                        key: item.rank,
                        staticClass: "entry",
                        class: { "user-entry": _vm.isCurrentUser(item) }
                      },
                      [
                        _c(
                          "span",
                          {
                            staticClass: "profilepic-empty-small sprite icon",
                            class: {
                              "profilepic-emptygreen-small": item.active
                            },
                            attrs: { id: "photo invitable" }
                          },
                          [
                            _c("img", {
                              attrs: { src: item.realmInfo.avatarUrl }
                            })
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            staticClass: "text invitable",
                            attrs: { id: "name" }
                          },
                          [_c("p", [_vm._v(_vm._s(item.displayName))])]
                        ),
                        _vm._v(" "),
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-default btn-invite invitable",
                            on: {
                              click: function($event) {
                                return _vm.inviteFriend(item.userId)
                              }
                            }
                          },
                          [_vm._v(_vm._s(_vm.inviteFriendsButton))]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.showInviteFriends(index)
                  ? _c(
                      "div",
                      { key: "friend_" + index, staticClass: "entry" },
                      [
                        _vm._m(1, true),
                        _vm._v(" "),
                        _c("span", { staticClass: "text invite" }, [
                          _vm._v(_vm._s(_vm.inviteFriendsLabel))
                        ]),
                        _vm._v(" "),
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-default btn-invite",
                            on: { click: _vm.inviteFriends }
                          },
                          [_vm._v(_vm._s(_vm.inviteFriendsButton))]
                        )
                      ]
                    )
                  : _vm._e()
              ]
            })
          ],
          2
        )
      : _vm.timeout >= _vm.maxTimeout
      ? _c("div", { staticClass: "loading" }, [
          _vm._v(
            "\n        We are experiencing problems with Facebook, please try again.\n    "
          )
        ])
      : _c("div", { staticClass: "loading" }, [
          _vm._v("\n        PLEASE WAIT...\n    ")
        ]),
    _vm._v(" "),
    _vm.showFB
      ? _c("div", { staticClass: "leagues-blocker facebook" }, [
          _c("div", { staticClass: "disabler" })
        ])
      : _vm._e()
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("span", { staticClass: "text bridge" }, [
      _vm._v("."),
      _c("br"),
      _vm._v("."),
      _c("br"),
      _vm._v(".")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "span",
      { staticClass: "social social-facebook facebook-icon btn-facebook" },
      [_c("span", { staticClass: "sprite-main fb-icon" })]
    )
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7c14ee4d", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_25bc092c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfo_vue__ = __webpack_require__(526);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(508)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-25bc092c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfo_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_25bc092c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfo_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_25bc092c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfo_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeagueInfo.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-25bc092c", Component.options)
  } else {
    hotAPI.reload("data-v-25bc092c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(509);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("44c18031", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-25bc092c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfo.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-25bc092c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfo.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.info[data-v-25bc092c] {\n    width: 800px;\n    height: 465px;\n}\n.btn-myleague-info[data-v-25bc092c]:hover,\n.btn-myleague-info[data-v-25bc092c] {\n  border-color: #90241B;\n  background-color: #FF0100;\n  color:white;\n  width: 165px;\n}\n.btn-myleague-info.selected[data-v-25bc092c] {\n  border-color: #E93323;\n  background-color: white;\n  color: #FF0100;\n}\n#content-info[data-v-25bc092c] {\n  width: 100%;\n  height: 317px;\n  margin-top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_414be683_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoOverview_vue__ = __webpack_require__(513);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(511)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-414be683"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoOverview_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_414be683_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoOverview_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_414be683_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoOverview_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeagueInfoOverview.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-414be683", Component.options)
  } else {
    hotAPI.reload("data-v-414be683", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(512);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("b8332fac", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-414be683\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoOverview.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-414be683\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoOverview.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-container[data-v-414be683] {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n.level[data-v-414be683] {\n  float: left;\n  background-color: #F4F5F4;\n  border-radius: 5px;\n  width: 145px;\n  height: 156px;\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap; /* optional. only if you want the items to wrap */\n  justify-content: center; /* for horizontal alignment */\n  margin-left: 6px;\n  margin-bottom: 3px;\n  overflow: hidden;\n}\n.active[data-v-414be683] {\n  border: 1px solid #3F9BA8;\n}\n.title[data-v-414be683] {\n  color: #696A69;\n  font-size: 12pt;\n  width: 100%;\n  text-align: center;\n  font-weight: bold;\n}\n.active > .title[data-v-414be683] {\n  background-color: #00DEFE;\n  /* border-radius: 5px 5px 0px 0px; */\n  color: white;\n  top: -5px;\n  border-bottom: 1px solid #3F9BA8;\n}\n.star[data-v-414be683] {\n  transform: scale(0.55);\n  margin-top: -30px;\n}\n.level-range[data-v-414be683] {\n  color: #696A69;\n  font-size: 8pt;\n  margin-top: -35px;\n}\n.active > .level-range[data-v-414be683] {\n  color: #00DEFE;\n}\n.prize[data-v-414be683] {\n  color: #696A69;\n  font-size: 11pt;\n  font-weight: bold;\n  margin-top: -20px;\n}\nimg[data-v-414be683] {\n  vertical-align: text-bottom;\n}\n.currency-icon[data-v-414be683] {\n    position: relative;\n    top: 4px;\n}\n.dna-small-icon[data-v-414be683] {\n    transform: scale(0.8);\n    position: relative;\n    top: 5px;\n}\n\n", ""]);

// exports


/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "leagues-container" },
    [
      _vm._l(_vm.tiers, function(item, index) {
        return [
          _c(
            "div",
            { key: index, class: { level: true, active: _vm.isUser(item) } },
            [
              _c("span", { staticClass: "title" }, [
                _vm._v(_vm._s(item.leagueName))
              ]),
              _vm._v(" "),
              _c("span", [_c("div", { class: _vm.getLeagueClass(item) })]),
              _vm._v(" "),
              _c("span", { staticClass: "level-range" }, [
                _vm._v(
                  _vm._s(_vm.levelLabel) +
                    " " +
                    _vm._s(item.levelFrom) +
                    "-" +
                    _vm._s(item.levelTo)
                )
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "prize" }, [
                _vm._v(
                  _vm._s(_vm.topPrizeLabel) +
                    _vm._s(_vm.getTopPrice(item).price) +
                    "\n          "
                ),
                _vm.getTopPrice(item).currency == "coin"
                  ? _c("span", { staticClass: "sprite-main currency-icon" })
                  : _c("span", { staticClass: "sprite-main dna-small-icon" })
              ])
            ]
          )
        ]
      })
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-414be683", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 514 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ffc9f790_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoInfo_vue__ = __webpack_require__(517);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(515)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-ffc9f790"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoInfo_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ffc9f790_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoInfo_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_ffc9f790_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoInfo_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeagueInfoInfo.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-ffc9f790", Component.options)
  } else {
    hotAPI.reload("data-v-ffc9f790", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(516);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("45374426", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-ffc9f790\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoInfo.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-ffc9f790\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoInfo.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-ffc9f790] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 100%;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n}\nspan[data-v-ffc9f790] {\n  display: table-cell;\n  vertical-align: middle;\n}\np[data-v-ffc9f790] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n", ""]);

// exports


/***/ }),
/* 517 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line3) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line4) } })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-ffc9f790", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 518 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e539b46_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoRules_vue__ = __webpack_require__(521);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(519)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7e539b46"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoRules_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e539b46_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoRules_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7e539b46_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoRules_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeagueInfoRules.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7e539b46", Component.options)
  } else {
    hotAPI.reload("data-v-7e539b46", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(520);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("fdacf308", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7e539b46\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoRules.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7e539b46\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoRules.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-7e539b46] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 100%;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n}\nspan[data-v-7e539b46] {\n  display: table-cell;\n  vertical-align: middle;\n}\np[data-v-7e539b46] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n", ""]);

// exports


/***/ }),
/* 521 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line3) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line4) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line5) } })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7e539b46", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 522 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7003dd50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoTrophies_vue__ = __webpack_require__(525);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(523)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7003dd50"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MyLeagueInfoTrophies_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7003dd50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoTrophies_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7003dd50_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MyLeagueInfoTrophies_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/myleague/MyLeagueInfoTrophies.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7003dd50", Component.options)
  } else {
    hotAPI.reload("data-v-7003dd50", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(524);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("26f5a318", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7003dd50\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoTrophies.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-7003dd50\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MyLeagueInfoTrophies.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-7003dd50] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 315px;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n  overflow: hidden;\n}\nspan[data-v-7003dd50] {\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n}\np[data-v-7003dd50] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n.center[data-v-7003dd50] {\n  width: 100%;\n  padding-left: 5%;\n  padding-right: 5%;\n  display: -webkit-box;  /* OLD - iOS 6-, Safari 3.1-6, BB7 */\n  display: -ms-flexbox;  /* TWEENER - IE 10 */\n  display: -webkit-flex; /* NEW - Safari 6.1+. iOS 7.1+, BB10 */\n  display: flex;         /* NEW, Spec - Firefox, Chrome, Opera */\n\n  justify-content: center;\n  align-items: center;\n}\n.center > span[data-v-7003dd50] {\n  margin: auto;\n  left: -30px;\n  position: relative;\n}\n.trophies[data-v-7003dd50] {\n  width: 181px;\n  height: 105px;\n  margin-left: 50px;\n}\n.trophies > div[data-v-7003dd50] {\n  transform:matrix(0.6, 0, 0, 0.6, -100, -55);\n}\nspan .Big_Blue_Arrow[data-v-7003dd50] {\n  transform: matrix(2, 0, 0, 2, -10, 0);\n}\n.potions[data-v-7003dd50] {\n  transform: scale(0.8);\n}\n", ""]);

// exports


/***/ }),
/* 525 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("b", [_c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } })]),
      _vm._v(" "),
      _vm._m(0)
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "center" }, [
      _c("span", { staticClass: "potions_collection sprite potions" }),
      _vm._v(" "),
      _c("span", { staticClass: "Big_Blue_Arrow sprite" }),
      _vm._v(" "),
      _c("span", { staticClass: "trophies" }, [
        _c("div", { staticClass: "Trophy_4 sprite-common" })
      ])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-7003dd50", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 526 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "leagues-inner info" }, [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("h1", [_vm._v(_vm._s(_vm.title))]),
      _vm._v(" "),
      _c("div", { staticClass: "menu-help" }, [
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-myleague-info left selected",
            on: { click: _vm.overview }
          },
          [_vm._v(_vm._s(_vm.overviewLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-myleague-info",
            on: { click: _vm.info }
          },
          [_vm._v(_vm._s(_vm.infoLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-myleague-info",
            on: { click: _vm.rules }
          },
          [_vm._v(_vm._s(_vm.rulesLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-myleague-info",
            on: { click: _vm.trophies }
          },
          [_vm._v(_vm._s(_vm.trophiesLabel))]
        )
      ]),
      _vm._v(" "),
      _c(
        "div",
        { attrs: { id: "content-info" } },
        [
          _c(_vm.currentView, {
            tag: "component",
            attrs: {
              league: _vm.league,
              tier: _vm.tier,
              tiers: _vm.tiers,
              prizes: _vm.prizes
            }
          })
        ],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-25bc092c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 527 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("leagueheader", {
        attrs: {
          i18n: _vm.i18n,
          league: _vm.league,
          tier: _vm.tier,
          timer: _vm.time,
          prize1: _vm.prize1,
          prize2: _vm.prize2,
          prize3: _vm.prize3,
          prizeCurrency: _vm.prizeCurrency
        }
      }),
      _vm._v(" "),
      _c("datatable", {
        attrs: { i18n: _vm.i18n, items: _vm.items, user: _vm.user }
      }),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showPrizes
            ? _c("prizes", {
                staticClass: "prizes",
                attrs: {
                  league: _vm.league,
                  tier: _vm.tier,
                  prizes: _vm.prizes
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showHelp
            ? _c("help", {
                staticClass: "help",
                attrs: {
                  league: _vm.league,
                  tier: _vm.tier,
                  tiers: _vm.tiers,
                  prizes: _vm.prizes
                }
              })
            : _vm._e()
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-39985b9c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 528 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21af4bf0_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Friends_vue__ = __webpack_require__(540);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Friends_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21af4bf0_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Friends_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21af4bf0_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Friends_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/friends/Friends.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-21af4bf0", Component.options)
  } else {
    hotAPI.reload("data-v-21af4bf0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue__ = __webpack_require__(201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0ac6cce9_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelp_vue__ = __webpack_require__(539);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(530)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0ac6cce9"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelp_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0ac6cce9_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelp_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0ac6cce9_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelp_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/friends/FriendsHelp.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0ac6cce9", Component.options)
  } else {
    hotAPI.reload("data-v-0ac6cce9", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(531);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("caafc79a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0ac6cce9\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./FriendsHelp.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0ac6cce9\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./FriendsHelp.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.help[data-v-0ac6cce9] {\n    width: 662px;\n    height: 465px;\n}\n#content-info[data-v-0ac6cce9] {\n    width: 100%;\n    height: 317px;\n    margin-top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0743783e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelpRules_vue__ = __webpack_require__(535);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(533)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0743783e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_FriendsHelpRules_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0743783e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelpRules_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0743783e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_FriendsHelpRules_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/friends/FriendsHelpRules.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0743783e", Component.options)
  } else {
    hotAPI.reload("data-v-0743783e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(534);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("97856e8c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0743783e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./FriendsHelpRules.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0743783e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./FriendsHelpRules.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-0743783e] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 100%;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n}\nspan[data-v-0743783e] {\n  display: table-cell;\n  vertical-align: middle;\n}\np[data-v-0743783e] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n", ""]);

// exports


/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line3) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line4) } })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0743783e", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(537);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("0c56fd1a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0875eca7\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryWorldHelpTrophies.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0875eca7\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryWorldHelpTrophies.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-0875eca7] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 315px;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n  overflow: hidden;\n}\nspan[data-v-0875eca7] {\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n}\np[data-v-0875eca7] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n.center[data-v-0875eca7] {\n  width: 100%;\n  display: -webkit-box;  /* OLD - iOS 6-, Safari 3.1-6, BB7 */\n  display: -ms-flexbox;  /* TWEENER - IE 10 */\n  display: -webkit-flex; /* NEW - Safari 6.1+. iOS 7.1+, BB10 */\n  display: flex;         /* NEW, Spec - Firefox, Chrome, Opera */\n\n  justify-content: center;\n  align-items: center;\n}\n.center > span[data-v-0875eca7] {\n  margin: auto;\n  left: -20px;\n  position: relative;\n}\n.trophies[data-v-0875eca7] {\n  width: 181px;\n  height: 105px;\n}\n.trophies > div[data-v-0875eca7] {\n  transform:matrix(0.6, 0, 0, 0.6, -100, -55);\n  margin-left: 30px;\n}\n.potions_collection.sprite[data-v-0875eca7] {\n  transform: scale(0.8);\n}\n.Big_Blue_Arrow.sprite[data-v-0875eca7] {\n  transform: scale(2);\n}\n\n", ""]);

// exports


/***/ }),
/* 538 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("b", [_c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } })]),
      _vm._v(" "),
      _vm._m(0)
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "center" }, [
      _c("span", { staticClass: "potions_collection sprite" }),
      _vm._v(" "),
      _c("span", { staticClass: "Big_Blue_Arrow sprite" }),
      _vm._v(" "),
      _c("span", { staticClass: "trophies" }, [
        _c("div", { staticClass: "Trophy_4 sprite-common" })
      ])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0875eca7", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 539 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "leagues-inner help" }, [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("h1", [_vm._v(_vm._s(_vm.title))]),
      _vm._v(" "),
      _c("div", { staticClass: "menu-help" }, [
        _c(
          "button",
          {
            staticClass: "btn btn-friends-info left selected",
            on: { click: _vm.rules }
          },
          [_vm._v(_vm._s(_vm.rulesLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          { staticClass: "btn btn-friends-info", on: { click: _vm.trophies } },
          [_vm._v(_vm._s(_vm.trophiesLabel))]
        )
      ]),
      _vm._v(" "),
      _c(
        "div",
        { attrs: { id: "content-info" } },
        [_c(_vm.currentView, { tag: "component" })],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0ac6cce9", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 540 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("leagueheader", {
        attrs: {
          i18n: _vm.i18n,
          league: _vm.league,
          tier: _vm.tier,
          timer: _vm.time,
          prize1: _vm.prize1,
          prize2: _vm.prize2,
          prize3: _vm.prize3,
          prizeCurrency: _vm.prizeCurrency
        }
      }),
      _vm._v(" "),
      _c("datatable", {
        attrs: {
          i18n: _vm.i18n,
          items: _vm.listItems,
          user: _vm.user,
          friends: "true",
          showInvitable: _vm.showInvitable,
          areFriendsPlaying: _vm.areFriendsPlaying,
          friendsHaveTrophies: _vm.friendsHaveTrophies,
          hasInvitable: _vm.friends.length > 0
        }
      }),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showPrizes
            ? _c("prizes", {
                staticClass: "prizes",
                attrs: {
                  league: _vm.league,
                  tier: _vm.tier,
                  prizes: _vm.prizes
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [_vm.showHelp ? _c("help", { staticClass: "help" }) : _vm._e()],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-21af4bf0", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 541 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue__ = __webpack_require__(204);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4f15940a_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Country_vue__ = __webpack_require__(549);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Country_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4f15940a_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Country_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4f15940a_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Country_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/country/Country.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4f15940a", Component.options)
  } else {
    hotAPI.reload("data-v-4f15940a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 542 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_44b9942a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryHelp_vue__ = __webpack_require__(548);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(543)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-44b9942a"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_CountryHelp_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_44b9942a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryHelp_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_44b9942a_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_CountryHelp_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/country/CountryHelp.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-44b9942a", Component.options)
  } else {
    hotAPI.reload("data-v-44b9942a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(544);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("1a5771df", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-44b9942a\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryHelp.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-44b9942a\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryHelp.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.help[data-v-44b9942a] {\n    width: 662px;\n    height: 465px;\n}\n#content-info[data-v-44b9942a] {\n    width: 100%;\n    height: 317px;\n    margin-top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(546);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("3c073f5e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3e41b16e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryWorldHelpRules.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3e41b16e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./CountryWorldHelpRules.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.content[data-v-3e41b16e] {\n  display: table;\n  border-radius: 10px;\n  background-color: #F4F5F4;\n  color: #676867;\n  text-align: center;\n  height: 100%;\n  font-size: 14pt;\n  padding-left: 50px;\n  padding-right: 50px;\n}\nspan[data-v-3e41b16e] {\n  display: table-cell;\n  vertical-align: middle;\n}\np[data-v-3e41b16e] {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n", ""]);

// exports


/***/ }),
/* 547 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c("span", [
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line1) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line2) } }),
      _vm._v(" "),
      _c("p", { domProps: { innerHTML: _vm._s(_vm.line3) } })
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-3e41b16e", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 548 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "leagues-inner help" }, [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("h1", [_vm._v(_vm._s(_vm.title))]),
      _vm._v(" "),
      _c("div", { staticClass: "menu-help" }, [
        _c(
          "button",
          {
            staticClass: "btn btn-country-info left selected",
            on: { click: _vm.rules }
          },
          [_vm._v(_vm._s(_vm.rulesLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          { staticClass: "btn btn-country-info", on: { click: _vm.trophies } },
          [_vm._v(_vm._s(_vm.trophiesLabel))]
        )
      ]),
      _vm._v(" "),
      _c(
        "div",
        { attrs: { id: "content-info" } },
        [_c(_vm.currentView, { tag: "component" })],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-44b9942a", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 549 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("leagueheader", {
        attrs: {
          i18n: _vm.i18n,
          league: _vm.league,
          tier: _vm.tier,
          country: _vm.country,
          timer: _vm.time,
          prize1: _vm.prize1,
          prize2: _vm.prize2,
          prize3: _vm.prize3,
          prizeCurrency: _vm.prizeCurrency
        }
      }),
      _vm._v(" "),
      _c("datatable", {
        attrs: { i18n: _vm.i18n, items: _vm.items, user: _vm.user }
      }),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showPrizes
            ? _c("prizes", {
                staticClass: "prizes",
                attrs: {
                  league: _vm.league,
                  country: _vm.country,
                  tier: _vm.tier,
                  prizes: _vm.prizes
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [_vm.showHelp ? _c("help", { staticClass: "help" }) : _vm._e()],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4f15940a", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 550 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue__ = __webpack_require__(208);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5d7fc342_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_World_vue__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_World_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5d7fc342_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_World_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5d7fc342_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_World_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/world/World.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5d7fc342", Component.options)
  } else {
    hotAPI.reload("data-v-5d7fc342", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 551 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue__ = __webpack_require__(209);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_40730923_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WorldHelp_vue__ = __webpack_require__(554);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(552)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-40730923"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WorldHelp_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_40730923_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WorldHelp_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_40730923_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WorldHelp_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/world/WorldHelp.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-40730923", Component.options)
  } else {
    hotAPI.reload("data-v-40730923", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(553);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("4987d654", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-40730923\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./WorldHelp.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-40730923\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./WorldHelp.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.help[data-v-40730923] {\n    width: 662px;\n    height: 465px;\n}\n#content-info[data-v-40730923] {\n    width: 100%;\n    height: 317px;\n    margin-top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 554 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "leagues-inner help" }, [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("h1", [_vm._v(_vm._s(_vm.title))]),
      _vm._v(" "),
      _c("div", { staticClass: "menu-help" }, [
        _c(
          "button",
          {
            staticClass: "btn btn-world-info left selected",
            on: { click: _vm.rules }
          },
          [_vm._v(_vm._s(_vm.rulesLabel))]
        ),
        _vm._v(" "),
        _c(
          "button",
          { staticClass: "btn btn-world-info", on: { click: _vm.trophies } },
          [_vm._v(_vm._s(_vm.trophiesLabel))]
        )
      ]),
      _vm._v(" "),
      _c(
        "div",
        { attrs: { id: "content-info" } },
        [_c(_vm.currentView, { tag: "component" })],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-40730923", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 555 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c("leagueheader", {
        attrs: {
          i18n: _vm.i18n,
          league: _vm.league,
          tier: _vm.tier,
          timer: _vm.time,
          prize1: _vm.prize1,
          prize2: _vm.prize2,
          prize3: _vm.prize3,
          prizeCurrency: _vm.prizeCurrency
        }
      }),
      _vm._v(" "),
      _c("datatable", {
        attrs: { i18n: _vm.i18n, items: _vm.items, user: _vm.user }
      }),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showPrizes
            ? _c("prizes", {
                staticClass: "prizes",
                attrs: {
                  league: _vm.league,
                  tier: _vm.tier,
                  prizes: _vm.prizes
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [_vm.showHelp ? _c("help", { staticClass: "help" }) : _vm._e()],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5d7fc342", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 556 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue__ = __webpack_require__(210);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0fe98c2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_GettingAhead_vue__ = __webpack_require__(559);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(557)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0fe98c2e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_GettingAhead_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0fe98c2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_GettingAhead_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0fe98c2e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_GettingAhead_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/GettingAhead.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0fe98c2e", Component.options)
  } else {
    hotAPI.reload("data-v-0fe98c2e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(558);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("089db402", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0fe98c2e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./GettingAhead.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0fe98c2e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./GettingAhead.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-getting-ahead[data-v-0fe98c2e] {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 800px;\n    height: 360px;\n    padding: 40px;\n    z-index: 1;\n}\n.leagues-getting-ahead-title[data-v-0fe98c2e] {\n    text-align: center;\n    font-size: 28px;\n    display: table;\n    font-weight: bold;\n    margin: 0 auto;\n    top: -10px;\n    position: relative;\n    color: #676867;\n}\n.leagues-getting-ahead-container[data-v-0fe98c2e] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 15%;\n    top: 10px;\n    position: relative;\n}\n.leagues-getting-ahead-upper-text[data-v-0fe98c2e] {\n    text-align: center;\n    font-size: 18px;\n    display: block;\n    position: relative;\n    width: 100%;\n    padding: 15px;\n    color: #676867;\n}\n.leagues-getting-ahead-lower-text[data-v-0fe98c2e] {\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    display: block;\n    position: relative;\n    width: 100%;\n    padding: 12px;\n    color: #676867;\n}\n.leagues-getting-ahead-table-header[data-v-0fe98c2e] {\n    text-align: center;\n    font-size: 14px;\n    display: table-cell;\n    position: relative;\n    color: #676867;\n    top: 25px;\n    margin-bottom: 30px;\n}\n.leagues-getting-ahead-table-header.first[data-v-0fe98c2e]{\n    left: 50px;\n}\n.leagues-getting-ahead-table-header.second[data-v-0fe98c2e]{\n    left: 250px;\n}\n.leagues-getting-ahead-table-header.third[data-v-0fe98c2e]{\n    left: 500px;\n}\n.leagues-getting-ahead-table[data-v-0fe98c2e] {\n    margin: 30px auto 5px auto;\n}\n.leagues-getting-ahead-share[data-v-0fe98c2e] {\n    width: 100%;\n}\n.btn-share[data-v-0fe98c2e] {\n    width: 20%;\n    height: 30px;\n}\n.btn-share.btn-fb[data-v-0fe98c2e], .btn-share.btn-google[data-v-0fe98c2e] {\n    float: left;\n    left: 220px;\n}\n.btn-share.btn-twitter[data-v-0fe98c2e] {\n    float: right;\n    right: 200px;\n}\n.entry[data-v-0fe98c2e] {\n    height: 65px;\n    background-color: rgb(245, 245, 245);\n    border-radius: 5px;\n    margin: 5px;\n    padding: 1px;\n    overflow: hidden;\n}\n.user-entry[data-v-0fe98c2e] {\n    position: sticky;\n    top: 3px;\n    bottom: 3px;\n    background-color: rgb(242, 255, 230);\n    box-shadow: 0 0 0 3px rgb(79, 158, 32);\n    z-index: 1;\n}\n.icon[data-v-0fe98c2e] {\n    vertical-align: middle;\n}\n#rank.icon[data-v-0fe98c2e] {\n    transform: matrix(0.5, 0, 0, 0.5, -20, -42);\n}\n#rank.icon.other[data-v-0fe98c2e] {\n    transform: matrix(0.6, 0, 0, 0.6, 0, -42);\n    margin-right: 21px;\n}\n#photo.icon[data-v-0fe98c2e] {\n    transform: matrix(0.85, 0, 0, 0.85, -40, -42);\n    padding: 4px;\n}\n#photo.icon > img[data-v-0fe98c2e]{\n    width: 93%;\n    height: 93%;\n    left: 2px;\n    top: 1px;\n    position: relative;\n}\n#star.icon[data-v-0fe98c2e] {\n    transform: matrix(0.35, 0, 0, 0.35, -75, -42);\n}\n#trophy.icon[data-v-0fe98c2e] {\n    transform: matrix(0.1, 0, 0, 0.1, 535, -300);\n}\n#arrow.icon[data-v-0fe98c2e] {\n    transform: matrix(0.8, 0, 0, 0.8, 415, -300);\n}\n.text[data-v-0fe98c2e] {\n    position: relative;\n    font-size: 40px;\n    color: #676867;\n}\n#rank.text[data-v-0fe98c2e] {\n    left: 100px;\n    top: 18px;\n    font-weight: bold;\n    color: #FFF;\n    text-shadow:\n    2px 0 5px #000,\n    -2px 0 5px #000,\n    0 -2px 5px #000,\n    0 2px 5px #000;\n}\n#rank.icon.other > #rank.text[data-v-0fe98c2e] {\n    left: 0;\n    top: 6px;\n    display: table;\n    margin: 0 auto;\n}\n#level.text[data-v-0fe98c2e] {\n    top: 50px;\n    font-weight: bold;\n    color: #FFF;\n    text-shadow:\n    -5px 0 10px #000,\n    0 -5px 10px #000,\n    5px 0 10px #000,\n    0 5px 10px #000;\n    display: table;\n    margin: 0 auto;\n}\n#name.text[data-v-0fe98c2e] {\n    font-size: 20px;\n    top: 20px;\n    left: -310px;\n    float: right;\n    width: 200px;\n}\n#trophies.text[data-v-0fe98c2e] {\n    font-size: 20px;\n    float: right;\n    top: 20px;\n    right: -70px;\n}\n.league-icon.star[data-v-0fe98c2e] {\n    position: absolute;\n    transform: scale(0.4);\n    top: -115px;\n    left: 130px;\n}\n.league-icon.flag[data-v-0fe98c2e] {\n    position: absolute;\n    transform: scale(1.2);\n    top: -55px;\n    left: 190px;\n}\n.league-icon.other[data-v-0fe98c2e] {\n    position: absolute;\n    top: -70px;\n    left: 180px;\n}\n.animate-up[data-v-0fe98c2e] {\n    animation: up-data-v-0fe98c2e 1.5s ease;\n}\n.animate-down[data-v-0fe98c2e] {\n    animation: down-data-v-0fe98c2e 1.5s ease;\n}\n@keyframes up-data-v-0fe98c2e {\n0% {transform: translate(0, 65px);\n}\n33% {transform: translate(0, 65px);\n}\n100% {transform: translate(0, 0);\n}\n}\n@keyframes down-data-v-0fe98c2e {\n0% {transform: translate(0, -65px);\n}\n33% {transform: translate(0, -65px);\n}\n100% {transform: translate(0, 0);\n}\n}\n\n", ""]);

// exports


/***/ }),
/* 559 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "drop" } }, [
    _c("div", [
      _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
        _c("div", { staticClass: "disabler" })
      ]),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "leagues-getting-ahead",
          attrs: { id: "leagues-getting-ahead" }
        },
        [
          _c("span", {
            staticClass: "leagues-inner-close sprite-main Close",
            on: { click: _vm.close }
          }),
          _vm._v(" "),
          _c("span", { staticClass: "leagues-getting-ahead-title" }, [
            _vm._v(_vm._s(_vm.titleLabel))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "leagues-getting-ahead-container" }, [
            _c("span", { class: _vm.leagueIconClass }),
            _vm._v(" "),
            _c("span", {
              staticClass: "leagues-getting-ahead-upper-text",
              domProps: { innerHTML: _vm._s(_vm.subtitleLabel) }
            })
          ]),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "leagues-getting-ahead-table-header first" },
            [_vm._v(_vm._s(_vm.rankHeaderLabel))]
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "leagues-getting-ahead-table-header second" },
            [_vm._v(_vm._s(_vm.nameHeaderLabel))]
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "leagues-getting-ahead-table-header third" },
            [_vm._v(_vm._s(_vm.winningsHeaderLabel))]
          ),
          _vm._v(" "),
          _c(
            "div",
            { staticClass: "leagues-getting-ahead-table" },
            [
              _vm._l(_vm.items, function(item) {
                return [
                  _c(
                    "div",
                    {
                      key: item.rank,
                      staticClass: "entry",
                      class: {
                        "user-entry": item.active,
                        "animate-up": item.active,
                        "animate-down": !item.active
                      }
                    },
                    [
                      _c(
                        "span",
                        {
                          class: _vm.rankIconClass(item.rank),
                          attrs: { id: "rank" }
                        },
                        [
                          item.rank <= 3
                            ? _c(
                                "span",
                                { staticClass: "text", attrs: { id: "rank" } },
                                [_vm._v(_vm._s(item.rank))]
                              )
                            : _c(
                                "span",
                                { staticClass: "text", attrs: { id: "rank" } },
                                [_vm._v("#" + _vm._s(item.rank))]
                              )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          staticClass: "profilepic-empty-small sprite icon",
                          class: { "profilepic-emptygreen-small": item.active },
                          attrs: { id: "photo" }
                        },
                        [
                          _c("img", {
                            attrs: { src: item.realmInfo.avatarUrl }
                          })
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          class: _vm.leaguePlayerIconClass(item.leagueName),
                          attrs: { id: "star" }
                        },
                        [
                          _c(
                            "span",
                            { staticClass: "text", attrs: { id: "level" } },
                            [_vm._v(_vm._s(item.level))]
                          )
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        { staticClass: "text", attrs: { id: "name" } },
                        [_vm._v(_vm._s(item.displayName))]
                      ),
                      _vm._v(" "),
                      _c(
                        "span",
                        { staticClass: "text", attrs: { id: "trophies" } },
                        [_vm._v(_vm._s(item.trophies))]
                      ),
                      _vm._v(" "),
                      _c("span", {
                        staticClass: "Trophy sprite-main icon",
                        attrs: { id: "trophy" }
                      }),
                      _vm._v(" "),
                      _c("span", {
                        staticClass: "arrow-down sprite icon",
                        class: { "arrow-up": item.active },
                        attrs: { id: "arrow" }
                      })
                    ]
                  )
                ]
              })
            ],
            2
          ),
          _vm._v(" "),
          _c("span", { staticClass: "leagues-getting-ahead-lower-text" }, [
            _vm._v(_vm._s(_vm.bragLabel))
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "leagues-getting-ahead-share" }, [
            _vm.isFacebook
              ? _c(
                  "button",
                  {
                    staticClass: "btn btn-primary btn-login btn-fb btn-share",
                    on: {
                      click: function($event) {
                        return _vm.share(false)
                      }
                    }
                  },
                  [
                    _c("span", {
                      staticClass: "social social-facebook facebook-icon"
                    }),
                    _vm._v(" "),
                    _c("span", { staticClass: "btn-text" }, [
                      _vm._v(_vm._s(_vm.shareLabel))
                    ])
                  ]
                )
              : _c(
                  "button",
                  {
                    staticClass:
                      "btn btn-primary btn-login btn-google btn-share",
                    on: {
                      click: function($event) {
                        return _vm.share(false)
                      }
                    }
                  },
                  [
                    _c("span", { staticClass: "social Google-icon" }),
                    _vm._v(" "),
                    _c("span", { staticClass: "btn-text" }, [
                      _vm._v(_vm._s(_vm.shareLabel))
                    ])
                  ]
                ),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "btn btn-primary btn-login btn-twitter btn-share",
                on: {
                  click: function($event) {
                    return _vm.share(true)
                  }
                }
              },
              [
                _c("span", { staticClass: "social Twitter-icon" }),
                _vm._v(" "),
                _c("span", { staticClass: "btn-text" }, [
                  _vm._v(_vm._s(_vm.shareLabel))
                ])
              ]
            )
          ])
        ]
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0fe98c2e", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 560 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5cfe7d60_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Winner_vue__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(561)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-5cfe7d60"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Winner_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5cfe7d60_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Winner_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5cfe7d60_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Winner_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/Winner.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5cfe7d60", Component.options)
  } else {
    hotAPI.reload("data-v-5cfe7d60", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(562);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("44e19d92", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-5cfe7d60\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Winner.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-5cfe7d60\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Winner.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-winner[data-v-5cfe7d60] {\n    position: fixed;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 740px;\n    height: 420px;\n    padding: 40px;\n}\n.leagues-winner-title[data-v-5cfe7d60] {\n    text-align: center;\n    font-size: 28px;\n    display: table;\n    font-weight: bold;\n    margin: 0 auto;\n    top: -10px;\n    position: relative;\n    color: #676867;\n}\n.leagues-winner-top-container[data-v-5cfe7d60] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 25%;\n    top: 10px;\n    position: relative;\n    margin: 5px;\n}\n.leagues-winner-bottom-container[data-v-5cfe7d60] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 55%;\n    top: 10px;\n    position: relative;\n    margin: 5px;\n}\n.leagues-winner-top-container-title[data-v-5cfe7d60] {\n    text-align: center;\n    font-size: 22px;\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    color: #676867;\n    top: 15px;\n    margin: 0 auto;\n    font-weight: bold;\n}\n.leagues-winner-top-container-winnings-text[data-v-5cfe7d60] {\n    text-align: center;\n    font-size: 20px;\n    position: absolute;\n    width: 100%;\n    padding: 12px;\n    color: #676867;\n    top: 42px;\n    left: -90px;\n}\n.leagues-winner-top-container-winnings-amount[data-v-5cfe7d60] {\n    font-size: 15px;\n    position: absolute;\n    width: 100%;\n    padding: 2px 10px;\n    color: #676867;\n    font-weight: bold;\n    text-align: left;\n}\n.leagues-winner-amount-container[data-v-5cfe7d60] {\n    background-color: #FFF;\n    border-radius: 5px;\n    position: absolute;\n    width: 120px;\n    height: 25px;\n    top: 55px;\n    left: 380px;\n    box-shadow: 0 0 0 1px #676867;\n    border-radius: 5px;\n}\n.leagues-winner-btn[data-v-5cfe7d60] {\n    background-color: #64DF02;\n    box-shadow: 0 0 0 1px #4AB901;\n    position: absolute;\n    width: 120px;\n    height: 20px;\n    top: 24px;\n    left: 550px;\n    font-size: 16px;\n    color: #FFF;\n    text-align: center;\n    padding: 18px;\n    border-radius: 5px;\n    cursor: pointer;\n}\n.leagues-winner-btn[data-v-5cfe7d60]:hover {\n    background-color: #FFF;\n    color: #64DF02;\n}\n.leagues-winner-lower-text[data-v-5cfe7d60] {\n    text-align: center;\n    font-size: 20px;\n    display: block;\n    position: absolute;\n    width: 100%;\n    color: #676867;\n    top: 20px;\n}\n.leagues-winner-bottom-container-prize-text[data-v-5cfe7d60] {\n    font-size: 15px;\n    position: absolute;\n    color: #676867;\n    top: 80px;\n    left: 550px;\n}\n.leagues-winner-bottom-container-prize-amount[data-v-5cfe7d60] {\n    font-size: 15px;\n    font-weight: bold;\n    position: absolute;\n    color: #676867;\n    top: 180px;\n    left: 215px;\n    text-align: center;\n    width: 100%;\n}\n.leagues-winner-share[data-v-5cfe7d60] {\n    width: 100%;\n    position: relative;\n    top: 20px;\n}\n.btn-share[data-v-5cfe7d60] {\n    width: 20%;\n    height: 30px;\n}\n.btn-share.btn-fb[data-v-5cfe7d60], .btn-share.btn-google[data-v-5cfe7d60] {\n    float: left;\n    left: 200px;\n}\n.btn-share.btn-twitter[data-v-5cfe7d60] {\n    float: right;\n    right: 200px;\n}\n.icon[data-v-5cfe7d60] {\n    vertical-align: middle;\n}\n#rank.icon[data-v-5cfe7d60] {\n    transform: matrix(1, 0, 0, 1, 50, 100);\n    position: absolute;\n}\n#rank > span[data-v-5cfe7d60] {\n    position: absolute;\n    font-size: 30px;\n    font-weight: bold;\n    text-shadow:\n    2px 0 2px #000,\n    0 2px 2px #000,\n    -2px 0 2px #000,\n    0 -2px 2px #000;\n    color: #FFF;\n    top: 25px;\n    left: 105px;\n}\n#rank.other > span[data-v-5cfe7d60] {\n    left: 0;\n    top: 0;\n    text-align: center;\n    width: 100%;\n    padding: 8px;\n}\n#photo.icon[data-v-5cfe7d60] {\n    transform: matrix(2, 0, 0, 2, 320, 105);\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    background-position: -203px -304px;\n}\n#photo > img[data-v-5cfe7d60] {\n    width: 87%;\n    border-radius: 8px;\n    position: relative;\n    left: 4px;\n    top: 2px;\n}\n#league.icon[data-v-5cfe7d60] {\n    transform: matrix(1, 0, 0, 1, 50, 25);\n    position: absolute;\n}\n#league.icon.flag[data-v-5cfe7d60] {\n    transform: matrix(1.5, 0, 0, 1.5, 50, 35);\n}\n#league.icon.star[data-v-5cfe7d60] {\n    transform: matrix(0.5, 0, 0, 0.5, 20, -20);\n}\n#trophy.icon[data-v-5cfe7d60] {\n    transform: matrix(0.05, 0, 0, 0.05, -49, -172);\n}\n#prize.icon[data-v-5cfe7d60] {\n    transform: matrix(0.4, 0, 0, 0.4, 475, 70);\n    position: absolute;\n}\n.animate-rank[data-v-5cfe7d60] {\n    animation: stamp-rank-data-v-5cfe7d60 1s;\n}\n.animate-prize[data-v-5cfe7d60] {\n    animation: stamp-prize-data-v-5cfe7d60 2s;\n}\n@keyframes stamp-rank-data-v-5cfe7d60 {\n0%   { opacity: 0;\n}\n49%  { opacity: 0;\n}\n50%  { transform: matrix(5, 0, 0, 5, 50, 100); opacity: 1;\n}\n100% { transform: matrix(1, 0, 0, 1, 50, 100);\n}\n}\n@keyframes stamp-prize-data-v-5cfe7d60 {\n0%   { opacity: 0;\n}\n74%  { opacity: 0;\n}\n75%  { transform: matrix(2, 0, 0, 2, 475, 70); opacity: 1;\n}\n100% { transform: matrix(0.4, 0, 0, 0.4, 475, 70);\n}\n}\n", ""]);

// exports


/***/ }),
/* 563 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "leagues-winner", attrs: { id: "leagues-winner" } },
    [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("span", { staticClass: "leagues-winner-title" }, [
        _vm._v("Competition Results")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "leagues-winner-top-container" }, [
        _c("span", {
          class: _vm.leaderboardIconClass(_vm.league),
          attrs: { id: "league" }
        }),
        _vm._v(" "),
        _c("span", { staticClass: "leagues-winner-top-container-title" }, [
          _vm._v(_vm._s(_vm.leaderboardTitle))
        ]),
        _vm._v(" "),
        _c("span", {
          staticClass: "leagues-winner-top-container-winnings-text",
          domProps: { innerHTML: _vm._s(_vm.winningsLabel) }
        }),
        _vm._v(" "),
        _c("div", { staticClass: "leagues-winner-amount-container" }, [
          _c(
            "span",
            { staticClass: "leagues-winner-top-container-winnings-amount" },
            [_vm._v(_vm._s(_vm.trophies))]
          ),
          _vm._v(" "),
          _c("span", {
            staticClass: "Trophy sprite-main icon",
            attrs: { id: "trophy" }
          })
        ]),
        _vm._v(" "),
        _c("div", {
          staticClass: "leagues-winner-btn",
          domProps: { innerHTML: _vm._s(_vm.buttonLabel) },
          on: { click: _vm.openFullResults }
        })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "leagues-winner-bottom-container" }, [
        _c("span", {
          staticClass: "leagues-winner-lower-text",
          domProps: { innerHTML: _vm._s(_vm.descriptionLabel(_vm.rank)) }
        }),
        _vm._v(" "),
        _c(
          "span",
          { class: _vm.rankIconClass(_vm.rank), attrs: { id: "rank" } },
          [
            _vm.rank <= 3
              ? _c("span", { staticClass: "text", attrs: { id: "rank" } }, [
                  _vm._v(_vm._s(_vm.rank))
                ])
              : _c("span", { staticClass: "text", attrs: { id: "rank" } }, [
                  _vm._v("#" + _vm._s(_vm.rank))
                ])
          ]
        ),
        _vm._v(" "),
        _c(
          "span",
          {
            staticClass: "profilepic-empty-small sprite icon",
            attrs: { id: "photo" }
          },
          [_c("img", { attrs: { src: _vm.avatarUrl } })]
        ),
        _vm._v(" "),
        _c(
          "span",
          { staticClass: "leagues-winner-bottom-container-prize-text" },
          [_vm._v("Prize:")]
        ),
        _vm._v(" "),
        _c(
          "span",
          { staticClass: "leagues-winner-bottom-container-prize-amount" },
          [_vm._v(_vm._s(_vm.prizeAmount))]
        ),
        _vm._v(" "),
        _c("span", {
          class: _vm.prizeClass(_vm.prizeType),
          attrs: { id: "prize" }
        })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "leagues-winner-share" }, [
        _vm.isFacebook
          ? _c(
              "button",
              {
                staticClass: "btn btn-primary btn-login btn-fb btn-share",
                on: {
                  click: function($event) {
                    return _vm.share(false)
                  }
                }
              },
              [
                _c("span", {
                  staticClass: "social social-facebook facebook-icon"
                }),
                _vm._v(" "),
                _c("span", {
                  staticClass: "btn-text",
                  domProps: { innerHTML: _vm._s(_vm.shareLabel) }
                })
              ]
            )
          : _c(
              "button",
              {
                staticClass: "btn btn-primary btn-login btn-google btn-share",
                on: {
                  click: function($event) {
                    return _vm.share(false)
                  }
                }
              },
              [
                _c("span", { staticClass: "Google-icon" }),
                _vm._v(" "),
                _c("span", {
                  staticClass: "btn-text",
                  domProps: { innerHTML: _vm._s(_vm.shareLabel) }
                })
              ]
            ),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-primary btn-login btn-twitter btn-share",
            on: {
              click: function($event) {
                return _vm.share(true)
              }
            }
          },
          [
            _c("span", { staticClass: "social Twitter-icon" }),
            _vm._v(" "),
            _c("span", {
              staticClass: "btn-text",
              domProps: { innerHTML: _vm._s(_vm.shareLabel) }
            })
          ]
        )
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-5cfe7d60", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 564 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a3f4696_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Profile_vue__ = __webpack_require__(567);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(565)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6a3f4696"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Profile_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a3f4696_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Profile_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a3f4696_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Profile_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/Profile.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6a3f4696", Component.options)
  } else {
    hotAPI.reload("data-v-6a3f4696", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(566);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("66bca55e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-6a3f4696\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Profile.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-6a3f4696\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Profile.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.profile[data-v-6a3f4696] {\n    width: 740px;\n    height: 540px;\n}\n.header[data-v-6a3f4696] {\n    position: relative;\n    width: 735px;\n    height: 170px;\n    background-color: #F4F5F4;\n    border-radius: 10px;\n}\n.photo[data-v-6a3f4696] {\n    float: left;\n    background-size: 134px 134px;\n    width: 134px;\n    height: 134px;\n    margin: 20px;\n    border-radius: 10px;\n}\n.name[data-v-6a3f4696] {\n    position: absolute;\n    left: 170px;\n    top: 50px;\n}\n.name > span[data-v-6a3f4696] {\n    position: absolute;\n    top: -25px;\n}\n.name > h1[data-v-6a3f4696] {\n    width: 400px;\n    position: absolute;\n    top: 25px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-align: left !important;\n}\n.name > h3[data-v-6a3f4696] {\n    width: 300px;\n    position: absolute;\n    top: 40px;\n    color: #656665;\n    font-size: 16px;\n    font-weight: bold;\n}\n.name > h3.user-id[data-v-6a3f4696] {\n    top: 60px;\n    font-size: 14px;\n    font-weight: normal;\n}\n.user-name[data-v-6a3f4696] {\n    text-align: left;\n}\n.level[data-v-6a3f4696] {\n    position: absolute;\n    left: 170px;\n    top: 108px;\n    width: 170px;\n}\n.xp[data-v-6a3f4696] {\n    position: absolute;\n    margin-top: -15px;\n    font-size: 16px;\n    color: #656665;\n}\n.trophies[data-v-6a3f4696] {\n    position: relative;\n    float: right;\n    width: 123px;\n    height: 149px;\n    margin: 10px;\n    background-color: #fff;\n    text-align: center;\n    color: #656665;\n}\n.trophies > div[data-v-6a3f4696] {\n    padding-top: 10px;\n    padding-left: 30px;\n}\n.trophy-icon[data-v-6a3f4696] {\n    transform-origin: 0 0;\n    transform: scale(0.22);\n}\n.trophy-title[data-v-6a3f4696] {\n    position: absolute;\n    top: 96px;\n    right: 0px;\n    width: 115px;\n    margin-left: auto;\n    margin-right: auto;\n}\n.trophy-count[data-v-6a3f4696] {\n    position: absolute;\n    bottom: 5px;\n    right: 0px;\n    width: 115px;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: 17pt;\n    font-weight: bold;\n}\n.stats-title[data-v-6a3f4696] {\n    font-size: 22px;\n    color: #656665;\n    font-weight: bold;\n    position: absolute;\n    margin: 30px 0;\n    width: 100%;\n    text-align: center;\n    left: 0;\n}\n.stats[data-v-6a3f4696] {\n    font-size: 18px;\n    color: #656665;\n    margin: 0 30px;\n    top: 300px;\n    position: absolute;\n    left: 0;\n    width: 100%;\n}\n.stats > div[data-v-6a3f4696] {\n    display: inline-table;\n    margin: 10px 18px;\n    width: 40%;\n    text-align: center;\n}\n.rank-star[data-v-6a3f4696] {\n    position: absolute;\n    top: -45px;\n    left: -50px;\n    transform: matrix(0.3, 0, 0, 0.3, 0, 0);\n}\n.line[data-v-6a3f4696] {\n    border-left: 2px solid #656465;\n    height: 150px;\n    position: absolute;\n    left: 49%;\n    top: 60%;\n}\n\n", ""]);

// exports


/***/ }),
/* 567 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c(
      "div",
      {
        staticClass: "leagues-inner profile",
        attrs: { id: "leagues-profile" }
      },
      [
        _c("span", {
          staticClass: "leagues-inner-close sprite-main Close",
          on: { click: _vm.close }
        }),
        _vm._v(" "),
        _c("h1", [_vm._v(_vm._s(_vm.titleLabel))]),
        _vm._v(" "),
        _c("div", { staticClass: "header" }, [
          _c("img", {
            staticClass: "photo",
            style: { backgroundImage: "url(" + _vm.profilePic + ")" }
          }),
          _vm._v(" "),
          _c("div", { class: _vm.leagueClass() }, [
            _c("span", [_vm._v(_vm._s(_vm.level))])
          ]),
          _vm._v(" "),
          _c("span", { staticClass: "name" }, [
            _c("span", { class: _vm.flagClass() }),
            _vm._v(" "),
            _c("h1", [_vm._v(_vm._s(_vm.displayName))]),
            _vm._v(" "),
            _c("h3", [_vm._v(_vm._s(_vm.idTitleLabel))]),
            _vm._v(" "),
            _c("h3", { staticClass: "user-id" }, [_vm._v(_vm._s(_vm.userId))])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "trophies" }, [
            _vm._m(0),
            _vm._v(" "),
            _c("span", { staticClass: "trophy-title" }, [
              _vm._v(_vm._s(_vm.trophiesTitleLabel))
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "trophy-count" }, [
              _vm._v(_vm._s(_vm.trophies))
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "stats-title" }, [
          _vm._v(_vm._s(_vm.statsTitleLabel))
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "line" }),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "stats" },
          _vm._l(_vm.stats, function(stat, index) {
            return _c("div", { key: index }, [
              _vm._v("\n                " + _vm._s(stat.text)),
              _c("br"),
              _c("strong", [_vm._v(_vm._s(stat.value))])
            ])
          }),
          0
        )
      ]
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("span", { staticClass: "Trophy sprite-main trophy-icon" })
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-6a3f4696", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 568 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue__ = __webpack_require__(213);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_48dc4034_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WeeklyResults_vue__ = __webpack_require__(579);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(569)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-48dc4034"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_WeeklyResults_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_48dc4034_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WeeklyResults_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_48dc4034_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_WeeklyResults_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/WeeklyResults.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-48dc4034", Component.options)
  } else {
    hotAPI.reload("data-v-48dc4034", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(570);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("3d5c3863", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-48dc4034\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./WeeklyResults.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-48dc4034\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./WeeklyResults.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-inner.results[data-v-48dc4034] {\n    width: 800px;\n    height: 465px;\n}\n.no-friends-label[data-v-48dc4034] {\n    position: relative;\n    width: 86%;\n    margin: 0 auto;\n    text-align: center;\n    top: 85px;\n    font-size: 18px;\n    color: #656465;\n}\n\n", ""]);

// exports


/***/ }),
/* 571 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue__ = __webpack_require__(214);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3ef95ea8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_HeaderResults_vue__ = __webpack_require__(574);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(572)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-3ef95ea8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HeaderResults_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3ef95ea8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_HeaderResults_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3ef95ea8_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_HeaderResults_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/HeaderResults.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3ef95ea8", Component.options)
  } else {
    hotAPI.reload("data-v-3ef95ea8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(573);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("485635d7", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3ef95ea8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./HeaderResults.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-3ef95ea8\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./HeaderResults.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.bgSquare[data-v-3ef95ea8] {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 307px;\n  height: 80px;\n  text-align: right;\n}\n.bgCorner[data-v-3ef95ea8] {\n  position: absolute;\n  left: 307px;\n  top: 0px;\n}\n.playerPhoto[data-v-3ef95ea8] {\n  position: absolute;\n  left: 125px;\n  top: 12px;\n  border-radius: 5px;\n  border: 4px solid;\n  height: 63%;\n}\n.playerPhoto.myleague[data-v-3ef95ea8] {\n  border-color: #8D241E;\n}\n.playerPhoto.friends[data-v-3ef95ea8] {\n  border-color: #4AB901;\n}\n.playerPhoto.country[data-v-3ef95ea8] {\n  border-color: #653D90;\n}\n.playerPhoto.world[data-v-3ef95ea8] {\n  border-color: #0546BE;\n}\n.playerPhoto > img[data-v-3ef95ea8] {\n  width: 50px;\n  height: 50px;\n}\n.userRank[data-v-3ef95ea8] {\n  position: absolute;\n  left: 25px;\n  height: 100%;\n  font-size: 37px;\n  line-height: 75px;\n  vertical-align: middle;\n  color: white;\n}\n.star[data-v-3ef95ea8] {\n  position: absolute;\n  transform: scale(0.40);\n  top: -35px;\n  left: 146px;\n  color: white;\n  line-height: 150px;\n  text-align: center;\n  font-size: 48px;\n  font-weight: bold;\n}\n.friend[data-v-3ef95ea8] {\n  position: absolute;\n  transform: scale(0.90);\n  top: 10px;\n  left: 30px;\n}\n.flag[data-v-3ef95ea8] {\n  position: absolute;\n  top: 20px;\n  left: 30px;\n}\n.userName[data-v-3ef95ea8] {\n  position: absolute;\n  top: 5px;\n  left: 266px;\n  font-family: \"HelveticaNeue-Bold\", \"Helvetica Neue\";\n  color: white;\n  font-size: 16pt;\n  font-weight: bold;\n}\n.userTrophies[data-v-3ef95ea8] {\n  position: absolute;\n  left: 266px;\n  top: 40px;\n  width: 122px;\n  height: 26px;\n  border-radius: 5px;\n  border: 2px solid var(--border-color);\n  background: white;\n  color: #848582;\n  font-size: 11pt;\n  line-height: 22px;\n  padding-left: 10px;\n  font-weight: bold;\n}\n.userTrophies > img[data-v-3ef95ea8] {\n  position: absolute;\n  right: 5px;\n  top: 1px;\n  height: 21px;\n}\n.icon-star[data-v-3ef95ea8] {\n  position: absolute;\n  transform: scale(0.40);\n  top: -35px;\n  left: 500px;\n}\n.icon-friend[data-v-3ef95ea8] {\n  position: absolute;\n  transform: scale(0.90);\n  top: 10px;\n  left: 550px;\n}\n.icon-flag[data-v-3ef95ea8] {\n  position: absolute;\n  top: 20px;\n  left: 550px;\n}\n.usePrizeTitle[data-v-3ef95ea8],\n.topPrizeTitle[data-v-3ef95ea8] {\n  position: absolute;\n  top: 2px;\n  left: 634px;\n  color: #656665;\n  font-size: 11pt;\n}\n.usePrizeTitle[data-v-3ef95ea8] {\n  top: 6px;\n}\n.userPrize[data-v-3ef95ea8],\n.topPrize[data-v-3ef95ea8],\n.topPrize3[data-v-3ef95ea8],\n.topPrize2[data-v-3ef95ea8],\n.topPrize1[data-v-3ef95ea8] {\n  position: absolute;\n  top: 19px;\n  left: 634px;\n  width: 50px;\n  color: #656665;\n  font-size: 12pt;\n  font-weight: bold;\n}\n.topPrize3[data-v-3ef95ea8],\n.topPrize2[data-v-3ef95ea8] {\n  top: 38px;\n  font-size: 12px;\n}\n.topPrize3[data-v-3ef95ea8] {\n  top: 54px;\n}\n.userPrize[data-v-3ef95ea8] {\n  top: 30px;\n  left: 620px;\n  font-size: 18pt;\n  text-align: right;\n}\n.value[data-v-3ef95ea8] {\n  width: 60px;\n  text-align: right;\n}\n.topPrizeIcon[data-v-3ef95ea8] {\n  position: absolute;\n  top: 44px;\n  left: 715px;\n}\n.userPrizeIcon[data-v-3ef95ea8] {\n  position: absolute;\n  top: 50px;\n  left: 690px;\n}\n.dna[data-v-3ef95ea8] {\n  border: 0;\n  transform:matrix(0.25, 0, 0, 0.25, -65, -68);\n}\n.dna-prize[data-v-3ef95ea8] {\n  border: 0;\n  transform:matrix(0.3, 0, 0, 0.3, -65, -68);\n}\n.coins[data-v-3ef95ea8] {\n  border: 0;\n  position: absolute;\n  top: -40px;\n  left: -40px;\n  transform:matrix(0.4, 0, 0, 0.4, 10, 0);\n}\n.coins-prize[data-v-3ef95ea8] {\n  border: 0;\n  position: absolute;\n  transform:matrix(0.5, 0, 0, 0.5, -30, -40);\n}\nbutton.leagueHelp[data-v-3ef95ea8] {\n  position: absolute;\n  left: 726px;\n  top: 2px;\n  border: 0;\n  transform: scale(0.55);\n  background-color: transparent;\n}\n.trophy[data-v-3ef95ea8] {\n  transform: scale(0.05);\n  transform-origin: top;\n  position: relative;\n  top: -18px;\n  left: -46px;\n}\n", ""]);

// exports


/***/ }),
/* 574 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { class: [_vm.league, _vm.tier] }, [
    _c("div", { staticClass: "container weekly", class: _vm.league }, [
      _c("div", { staticClass: "box weekly", class: _vm.league }, [
        _c("div", { staticClass: "boxFill weekly", class: _vm.league })
      ]),
      _vm._v(" "),
      _c(
        "span",
        {
          staticClass: "userRank text-border",
          class: _vm.league,
          style: _vm.getFontSize(_vm.userRank)
        },
        [_vm._v(_vm._s("#" + _vm.userRank))]
      ),
      _vm._v(" "),
      _c("span", { staticClass: "playerPhoto", class: _vm.league }, [
        _c("img", { attrs: { src: _vm.userPhoto } })
      ]),
      _vm._v(" "),
      _c("span", { class: _vm.leagueIconClass }, [
        _c(
          "span",
          { staticClass: "text text-shadow", class: _vm.tier.toLowerCase() },
          [_vm._v(_vm._s(_vm.userLevel))]
        )
      ]),
      _vm._v(" "),
      _c("span", { staticClass: "userName text-border", class: _vm.league }, [
        _vm._v(_vm._s(_vm.userName))
      ]),
      _vm._v(" "),
      _c("span", { staticClass: "userTrophies" }, [
        _vm._v(_vm._s(_vm.userTrophies)),
        _c("span", { staticClass: "sprite-main trophy" })
      ]),
      _vm._v(" "),
      _c("span", { class: _vm.boardIconClass }),
      _vm._v(" "),
      _vm.userPrize
        ? _c("div", [
            _c("span", { staticClass: "usePrizeTitle" }, [
              _vm._v("You've won:")
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "userPrize" }, [
              _vm._v(_vm._s(_vm.userPrize))
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "userPrizeIcon" }, [
              _vm.prizeCurrency === "coin"
                ? _c("span", {
                    staticClass: "Coins_S sprite-common coins-prize"
                  })
                : _vm._e(),
              _vm._v(" "),
              _vm.prizeCurrency === "dna"
                ? _c("span", { staticClass: "DNA_S sprite-common dna-prize" })
                : _vm._e()
            ])
          ])
        : _c("div", [
            _c("span", { staticClass: "topPrizeTitle" }, [
              _vm._v("Top 3 prizes")
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "topPrize1" }, [_vm._v("1.")]),
            _c("span", { staticClass: "topPrize1 value" }, [
              _vm._v(_vm._s(_vm.prize1))
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "topPrize2" }, [_vm._v("2.")]),
            _c("span", { staticClass: "topPrize2 value" }, [
              _vm._v(_vm._s(_vm.prize2))
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "topPrize3" }, [_vm._v("3.")]),
            _c("span", { staticClass: "topPrize3 value" }, [
              _vm._v(_vm._s(_vm.prize3))
            ]),
            _vm._v(" "),
            _c("span", { staticClass: "topPrizeIcon" }, [
              _vm.prizeCurrency === "coin"
                ? _c("span", { staticClass: "Coins_S sprite-common coins" })
                : _vm._e(),
              _vm._v(" "),
              _vm.prizeCurrency === "dna"
                ? _c("span", { staticClass: "DNA_S sprite-common dna" })
                : _vm._e()
            ])
          ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-3ef95ea8", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 575 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue__ = __webpack_require__(215);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d4b42d70_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ResultsEmpty_vue__ = __webpack_require__(578);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(576)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-d4b42d70"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ResultsEmpty_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d4b42d70_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ResultsEmpty_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d4b42d70_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ResultsEmpty_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/ResultsEmpty.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d4b42d70", Component.options)
  } else {
    hotAPI.reload("data-v-d4b42d70", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(577);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("63d454ee", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-d4b42d70\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ResultsEmpty.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-d4b42d70\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ResultsEmpty.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-results-empty[data-v-d4b42d70] {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 400px;\n    height: 200px;\n    padding: 40px;\n}\n.leagues-results-empty-title[data-v-d4b42d70] {\n    text-align: center;\n    font-size: 28px;\n    display: table;\n    font-weight: bold;\n    margin: 0 auto;\n    top: -10px;\n    position: relative;\n    color: #676867;\n}\n.leagues-results-empty > div[data-v-d4b42d70] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 80%;\n    top: 15px;\n    position: relative;\n}\n.leagues-results-empty-container > span[data-v-d4b42d70] {\n    text-align: center;\n    font-size: 20px;\n    display: block;\n    position: relative;\n    padding: 40px;\n    font-weight: bold;\n    color: #676867;\n}\n", ""]);

// exports


/***/ }),
/* 578 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "leagues-results-empty" }, [
    _c("span", {
      staticClass: "leagues-inner-close sprite-main Close",
      on: { click: _vm.close }
    }),
    _vm._v(" "),
    _c("span", { staticClass: "leagues-results-empty-title" }, [
      _vm._v(_vm._s(_vm.titleLabel))
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "leagues-results-empty-container" }, [
      _c("span", [_vm._v(_vm._s(_vm.messageLabel))])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-d4b42d70", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 579 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _vm.hasResults
      ? _c(
          "div",
          { staticClass: "leagues-inner results" },
          [
            _c("span", {
              staticClass: "leagues-inner-close sprite-main Close",
              on: { click: _vm.close }
            }),
            _vm._v(" "),
            _c("h1", [_vm._v(_vm._s(_vm.title))]),
            _vm._v(" "),
            _c("div", { attrs: { id: "menu-leagues" } }, [
              _c("div", { staticClass: "button-row" }, [
                _c("div", { staticClass: "button-cell" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-default btn-myleague left",
                      class: _vm.myleagueSelectedClass,
                      on: { click: _vm.myleague }
                    },
                    [
                      _c("span", { staticClass: "tabicon-myleague sprite" }),
                      _vm._v(_vm._s(_vm.leagueTabLabel))
                    ]
                  )
                ]),
                _vm._v(" "),
                _vm.isFacebook
                  ? _c("div", { staticClass: "button-cell" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-default btn-friends",
                          class: _vm.friendsSelectedClass,
                          on: { click: _vm.friends }
                        },
                        [
                          _c("span", { staticClass: "tabicon-friends sprite" }),
                          _vm._v(_vm._s(_vm.friendsTabLabel))
                        ]
                      )
                    ])
                  : _vm._e(),
                _vm._v(" "),
                _c("div", { staticClass: "button-cell" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-default btn-country",
                      class: _vm.countrySelectedClass,
                      on: { click: _vm.country }
                    },
                    [
                      _c("span", { class: _vm.countryIconClass }),
                      _c("span", [_vm._v(_vm._s(_vm.countryTabLabel))])
                    ]
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "button-cell" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-default btn-world",
                      class: _vm.worldSelectedClass,
                      on: { click: _vm.world }
                    },
                    [
                      _c("span", { staticClass: "tabicon-world sprite" }),
                      _vm._v(_vm._s(_vm.worldTabLabel))
                    ]
                  )
                ])
              ])
            ]),
            _vm._v(" "),
            _c("resultsheader", {
              attrs: {
                league: _vm.league,
                tier: _vm.tier,
                userRank: _vm.playerRank,
                userTrophies: _vm.playerTrophies,
                userName: _vm.playerName,
                userPhoto: _vm.playerPhoto,
                userPrize: _vm.playerPrize,
                userLevel: _vm.playerLevel,
                userCountry: _vm.playerCountry,
                prize1: _vm.prize1,
                prize2: _vm.prize2,
                prize3: _vm.prize3,
                prizeCurrency: _vm.prizeCurrency
              }
            }),
            _vm._v(" "),
            _vm.hasLeagueResults
              ? _c("datatable", { attrs: { i18n: _vm.i18n, items: _vm.items } })
              : _c("div", { staticClass: "no-friends-label" }, [
                  _vm._v(_vm._s(_vm.noFriendsLabel))
                ])
          ],
          1
        )
      : _c("div", [_c("resultsempty")], 1)
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-48dc4034", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 580 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue__ = __webpack_require__(216);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_35b77122_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promotion_vue__ = __webpack_require__(583);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(581)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-35b77122"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Promotion_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_35b77122_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promotion_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_35b77122_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Promotion_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/Promotion.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-35b77122", Component.options)
  } else {
    hotAPI.reload("data-v-35b77122", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(582);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("139b0912", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-35b77122\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Promotion.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-35b77122\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Promotion.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-promotion[data-v-35b77122] {\n    position: fixed;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 360px;\n    height: 380px;\n    padding: 40px;\n}\n.leagues-promotion-title[data-v-35b77122] {\n    text-align: center;\n    font-size: 28px;\n    display: table;\n    font-weight: bold;\n    margin: 0 auto;\n    top: -10px;\n    position: relative;\n    color: #676867;\n}\n.leagues-promotion-container[data-v-35b77122] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 78%;\n    top: 10px;\n    position: relative;\n}\n.leagues-promotion-container .title[data-v-35b77122] {\n    text-align: center;\n    font-size: 18px;\n    display: block;\n    position: relative;\n    width: 85%;\n    padding: 20px 30px;\n    font-weight: bold;\n    color: #676867;\n}\n.leagues-promotion-container .subtitle[data-v-35b77122] {\n    text-align: center;\n    font-size: 20px;\n    display: block;\n    position: relative;\n    width: 85%;\n    padding: 25px;\n    font-weight: bold;\n    color: #676867;\n}\n.league-star-animation[data-v-35b77122]{\n    position: relative;\n    left: 25px;\n    top: 5px;\n}\n.img-center[data-v-35b77122] {\n    display: table;\n    margin: 0 auto;\n}\n.btn-share[data-v-35b77122] {\n    width: 40%;\n    height: 30px;\n    margin: 16px;\n    top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 583 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "leagues-promotion", attrs: { id: "leagues-promotion" } },
    [
      _c("span", {
        staticClass: "leagues-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("span", { staticClass: "leagues-promotion-title" }, [
        _vm._v(_vm._s(_vm.congratulationsLabel))
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "leagues-promotion-container" }, [
        _c("span", { staticClass: "title" }, [_vm._v(_vm._s(_vm.passedLabel))]),
        _vm._v(" "),
        _c("span", { staticClass: "league-star-animation" }),
        _vm._v(" "),
        _c("span", { staticClass: "subtitle" }, [
          _vm._v(_vm._s(_vm.leagueName))
        ])
      ]),
      _vm._v(" "),
      _vm.isFacebook
        ? _c(
            "button",
            {
              staticClass: "btn btn-primary btn-login btn-fb btn-share",
              on: {
                click: function($event) {
                  return _vm.share(false)
                }
              }
            },
            [
              _c("span", {
                staticClass: "social social-facebook facebook-icon"
              }),
              _vm._v(" "),
              _c("span", { staticClass: "btn-text" }, [
                _vm._v(_vm._s(_vm.shareLabel))
              ])
            ]
          )
        : _c(
            "button",
            {
              staticClass: "btn btn-primary btn-login btn-google btn-share",
              on: {
                click: function($event) {
                  return _vm.share(false)
                }
              }
            },
            [
              _c("span", { staticClass: "Google-icon" }),
              _vm._v(" "),
              _c("span", { staticClass: "btn-text" }, [
                _vm._v(_vm._s(_vm.shareLabel))
              ])
            ]
          ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "btn btn-primary btn-login btn-twitter btn-share",
          on: {
            click: function($event) {
              return _vm.share(true)
            }
          }
        },
        [
          _c("span", { staticClass: "social Twitter-icon" }),
          _vm._v(" "),
          _c("span", { staticClass: "btn-text" }, [
            _vm._v(_vm._s(_vm.shareLabel))
          ])
        ]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-35b77122", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 584 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c44bc50e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_InvitationReward_vue__ = __webpack_require__(587);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(585)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-c44bc50e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_InvitationReward_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c44bc50e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_InvitationReward_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c44bc50e_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_InvitationReward_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/leagues/components/common/InvitationReward.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c44bc50e", Component.options)
  } else {
    hotAPI.reload("data-v-c44bc50e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(586);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("365e4152", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-c44bc50e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./InvitationReward.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-c44bc50e\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./InvitationReward.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.leagues-invitation-reward[data-v-c44bc50e] {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n    background-color: #fff;\n    width: 400px;\n    height: 400px;\n    padding: 40px;\n    text-align: center;\n}\n.leagues-invitation-reward-title[data-v-c44bc50e] {\n    text-align: center;\n    font-size: 28px;\n    display: table;\n    font-weight: bold;\n    margin: 0 auto;\n    top: -10px;\n    position: relative;\n    color: #676867;\n}\n.leagues-invitation-reward-subtitle[data-v-c44bc50e] {\n    text-align: center;\n    font-size: 22px;\n    display: table;\n    margin: 0 auto;\n    top: -5px;\n    position: relative;\n    color: #676867;\n}\n.leagues-invitation-reward-container[data-v-c44bc50e] {\n    background-color: rgb(245, 245, 245);\n    border-radius: 10px;\n    height: 68%;\n    top: 15px;\n    position: relative;\n}\n.leagues-invitation-reward-description[data-v-c44bc50e] {\n    text-align: center;\n    font-size: 24px;\n    display: block;\n    position: relative;\n    padding: 20px;\n    color: #676867;\n    margin-bottom: 10px;\n}\n.leagues-invitation-reward-image[data-v-c44bc50e] {\n    transform: scale(0.8);\n    top: -15px;\n    position: relative;\n    display: inline-block;\n}\n.leagues-invitation-reward-amount[data-v-c44bc50e] {\n    text-align: center;\n    font-size: 22px;\n    font-weight: bold;\n    display: block;\n    position: relative;\n    padding: 20px;\n    color: #676867;\n    top: -30px;\n}\n.btn-invite[data-v-c44bc50e] {\n    background-color: #3669E0;\n    color: #FFF;\n    display: inline-block;\n    width: 50%;\n    height: 40px;\n    top: 42px;\n    position: relative;\n}\n.btn-invite[data-v-c44bc50e]:hover {\n    background-color: #183f9a;\n}\n", ""]);

// exports


/***/ }),
/* 587 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("div", { staticClass: "leagues-blocker", on: { click: _vm.close } }, [
      _c("div", { staticClass: "disabler" })
    ]),
    _vm._v(" "),
    _c(
      "div",
      {
        staticClass: "leagues-invitation-reward",
        attrs: { id: "leagues-invitation-reward" }
      },
      [
        _c("span", {
          staticClass: "leagues-inner-close sprite-main Close",
          on: { click: _vm.close }
        }),
        _vm._v(" "),
        _c("span", { staticClass: "leagues-invitation-reward-title" }, [
          _vm._v(_vm._s(_vm.titleLabel))
        ]),
        _vm._v(" "),
        _c("span", { staticClass: "leagues-invitation-reward-subtitle" }, [
          _vm._v(_vm._s(_vm.subtitleLabel))
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "leagues-invitation-reward-container" }, [
          _c("span", { staticClass: "leagues-invitation-reward-description" }, [
            _vm._v(_vm._s(_vm.descriptionLabel))
          ]),
          _vm._v(" "),
          _c("div", {
            staticClass: "leagues-invitation-reward-image sprite-main Coins-M"
          }),
          _vm._v(" "),
          _c("span", { staticClass: "leagues-invitation-reward-amount" }, [
            _vm._v(_vm._s(_vm.amountLabel))
          ])
        ]),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-default btn-invite",
            on: { click: _vm.inviteFriends }
          },
          [_vm._v(_vm._s(_vm.buttonLabel))]
        )
      ]
    )
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-c44bc50e", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 588 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "leagues-app" } },
    [
      _c("transition", { attrs: { name: "drop" } }, [
        _vm.showMainMenu
          ? _c("div", [
              _c(
                "div",
                { staticClass: "leagues-blocker", on: { click: _vm.close } },
                [_c("div", { staticClass: "disabler" })]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "leagues-dialog",
                  attrs: { id: "leagues-dialog" }
                },
                [
                  _c("span", {
                    staticClass: "leagues-inner-close sprite-main Close",
                    on: { click: _vm.close }
                  }),
                  _vm._v(" "),
                  _c("h1", [_vm._v(_vm._s(_vm.title))]),
                  _vm._v(" "),
                  _c("div", { attrs: { id: "menu-leagues" } }, [
                    _c("div", { staticClass: "button-row" }, [
                      _c("div", { staticClass: "button-cell" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-myleague-selected left",
                            on: { click: _vm.myleague }
                          },
                          [
                            _c("span", {
                              staticClass: "tabicon-myleague sprite"
                            }),
                            _vm._v(_vm._s(_vm.leagueTab))
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _vm.isFacebook
                        ? _c("div", { staticClass: "button-cell" }, [
                            _c(
                              "button",
                              {
                                staticClass: "btn btn-friends",
                                on: { click: _vm.friends }
                              },
                              [
                                _c("span", {
                                  staticClass: "tabicon-friends sprite"
                                }),
                                _vm._v(_vm._s(_vm.friendsTab))
                              ]
                            )
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "button-cell" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-country",
                            on: { click: _vm.country }
                          },
                          [
                            _c("span", { class: _vm.countryIconClass }),
                            _c("span", [_vm._v(_vm._s(_vm.countryTab))])
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "button-cell" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-world",
                            on: { click: _vm.world }
                          },
                          [
                            _c("span", { staticClass: "tabicon-world sprite" }),
                            _vm._v(_vm._s(_vm.worldTab))
                          ]
                        )
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _vm.showError
                    ? _c("div", { staticClass: "error" }, [
                        _vm._v(
                          "\n                    Currently not available."
                        ),
                        _c("br"),
                        _vm._v(
                          "\n                    Please try again later.\n                "
                        )
                      ])
                    : _c("div", [
                        _c(
                          "div",
                          { attrs: { id: "container" } },
                          [
                            _c(_vm.currentView, {
                              tag: "component",
                              attrs: {
                                user: _vm.user,
                                items: _vm.items,
                                league: _vm.league,
                                tier: _vm.userTier,
                                country: _vm.userCountryCode,
                                prizes: _vm.prizes,
                                tiers: _vm.tiers,
                                time: _vm.leagueResetTime
                              }
                            })
                          ],
                          1
                        )
                      ])
                ]
              )
            ])
          : _vm._e()
      ]),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showGettingAhead
            ? _c("getting-ahead", {
                attrs: { league: _vm.passLeague, items: _vm.passUsers }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c("transition", { attrs: { name: "drop" } }, [
        _vm.showWinner
          ? _c(
              "div",
              [
                _c(
                  "div",
                  { staticClass: "leagues-blocker", on: { click: _vm.close } },
                  [_c("div", { staticClass: "disabler" })]
                ),
                _vm._v(" "),
                _c("winner", {
                  attrs: {
                    prizeAmount: _vm.winnersPrizeAmount,
                    prizeType: _vm.winnersPrizeType,
                    avatarUrl: _vm.winnersAvatarUrl,
                    rank: _vm.winnersRank,
                    trophies: _vm.winnersTrophies,
                    league: _vm.winnersLeague,
                    tier: _vm.winnersTier,
                    countryCode: _vm.winnersCountry
                  }
                })
              ],
              1
            )
          : _vm._e()
      ]),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showWeeklyResults && _vm.lastWeekResults
            ? _c("weeklyresults", {
                staticClass: "results",
                attrs: {
                  league: _vm.league,
                  tier: _vm.userTier,
                  userId: _vm.user.id,
                  prizes: _vm.prizes,
                  data: _vm.lastWeekResults
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showProfile
            ? _c("profile", {
                attrs: {
                  profilePic: _vm.profileAvatarUrl,
                  displayName: _vm.profileDisplayName,
                  userId: _vm.profileUserId,
                  trophies: _vm.profileTrophies,
                  stats: _vm.profileUserStats,
                  country: _vm.profileCountryCode,
                  league: _vm.profileLeague,
                  level: _vm.profileLevel
                }
              })
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c("transition", { attrs: { name: "drop" } }, [
        _vm.showPromotion
          ? _c(
              "div",
              [
                _c(
                  "div",
                  { staticClass: "leagues-blocker", on: { click: _vm.close } },
                  [_c("div", { staticClass: "disabler" })]
                ),
                _vm._v(" "),
                _c("promotion", {
                  attrs: { league: _vm.league, tier: _vm.userTier }
                })
              ],
              1
            )
          : _vm._e()
      ]),
      _vm._v(" "),
      _c(
        "transition",
        { attrs: { name: "drop" } },
        [
          _vm.showInvitationReward
            ? _c("invitation-reward", {
                attrs: {
                  name: _vm.invitationRewardFriend,
                  amount: _vm.invitationRewardAmount,
                  multiple: _vm.invitationRewardMultiple
                }
              })
            : _vm._e()
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-2d1e24ee", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 589 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue__ = __webpack_require__(218);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_080edefc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleRoyale_vue__ = __webpack_require__(604);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(590)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleRoyale_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_080edefc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleRoyale_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_080edefc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleRoyale_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/battle/BattleRoyale.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-080edefc", Component.options)
  } else {
    hotAPI.reload("data-v-080edefc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(591);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("45a5d7ae", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BattleRoyale.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BattleRoyale.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.i(__webpack_require__(592), "");
exports.i(__webpack_require__(54), "");

// module
exports.push([module.i, "\n", ""]);

// exports


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "#match-results {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform-origin: center top 0px;\n    transform: translate(-50%, -50%);\n    display: block;\n\tposition: fixed;\n    z-index: 1500;\n    background-color: white;\n    height: 510px;\n    border-radius: 10px;\n    padding: 30px;\n    color: #666;\n}\n\n.match-inner-close {\n\tdisplay: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n\tmargin: 10px;\n\topacity: 0.5;\n}\n\n.match-inner-close:hover {\n\topacity: 1;\n}\n\n#battle-stats {\n    width: 315px;\n    height: 100%;\n    margin-top: 10px;\n}", ""]);

// exports


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(594);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("9dab0086", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Results.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Results.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.match-results-title {\n    font-size: 26px;\n    width: 100%;\n    text-align: center;\n    font-weight: bold;\n    margin-bottom: 20px;\n    white-space: nowrap;\n}\n.match-results-container {\n    display: flex;\n    height: 520px;\n}\n.Confetti {\n    background-repeat: no-repeat;\n    position: absolute;\n    z-index: -1;\n    width: 365px;\n    height: 247px;\n    transform: translate(-5%, -5%);\n}\n#potion-slot {\n    width: 250px;\n    height: 100%;\n    margin-left: 35px;\n    margin-top: 10px;\n}\n\n", ""]);

// exports


/***/ }),
/* 595 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_60b9710c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleStats_vue__ = __webpack_require__(598);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(596)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-60b9710c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BattleStats_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_60b9710c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleStats_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_60b9710c_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BattleStats_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/battle/components/BattleStats.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-60b9710c", Component.options)
  } else {
    hotAPI.reload("data-v-60b9710c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(597);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("7ef584c2", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-60b9710c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BattleStats.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-60b9710c\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BattleStats.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n.battle-stats-entries.final[data-v-60b9710c] {\n    position: relative;\n    top: -240px;\n}\n.battle-stats-score-container[data-v-60b9710c] {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 240px;\n    background-color: #F5F5F5;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n.battle-stats-score-container.final[data-v-60b9710c] {\n    height: 200px;\n    top: 200px;\n}\n.battle-stats-final-position[data-v-60b9710c] {\n    flex: 0 0 40%;\n}\n.battle-stats-score[data-v-60b9710c] {\n    flex: 1;\n    text-align: center;\n    font-size: 18px;\n    padding-top: 40px;\n}\n.battle-stats-entry[data-v-60b9710c] {\n    position: relative;\n    width: 100%;\n    height: 30px;\n    background-color: #f5f5f5;\n    border-radius: 10px;\n    margin-bottom: 10px;\n}\n.battle-stats-entry > .icon[data-v-60b9710c] {\n    transform: matrix(0.45, 0, 0, 0.45, -44, -26);\n}\n.battle-stats-entry > .icon.other[data-v-60b9710c] {\n    transform: matrix(0.45, 0, 0, 0.45, -30, -14);\n}\n.battle-stats-final-position > .icon[data-v-60b9710c] {\n    transform: matrix(0.75, 0, 0, 0.75, 0, 90);\n}\n.battle-stats-final-position > .icon.other[data-v-60b9710c] {\n    transform: matrix(0.75, 0, 0, 0.75, 18, 95);\n}\n.icon > .text[data-v-60b9710c] {\n    position: relative;\n    left: 40px;\n    top: 2px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #FFF;\n    text-shadow:\n    2px 0 5px #000,\n    -2px 0 5px #000,\n    0 -2px 5px #000,\n    0 2px 5px #000;\n}\n.icon.other > .text[data-v-60b9710c] {\n    left: 0;\n    top: 0;\n    display: table;\n    margin: 5px auto;\n    font-size: 35px;\n    line-height: 50px;\n}\n.icon > .text.top-three[data-v-60b9710c] {\n    left: 100px;\n    top: 12px;\n    line-height: 60px;\n}\n.battle-stats-final-position > .title[data-v-60b9710c] {\n    font-size: 20px;\n    text-align: center;\n    position: absolute;\n    word-wrap: break-word;\n    width: 30%;\n    top: 40px;\n    left: 30px;\n}\n.battle-stats-entry-name[data-v-60b9710c] {\n    position: absolute;\n    top: 4px;\n    left: 72px;\n    font-size: 15px;\n}\n.battle-stats-social-buttons[data-v-60b9710c] {\n    width: 100%;\n    height: 45px;\n    display: flex;\n    position: absolute;\n    bottom: 10px;\n    justify-content: center;\n}\n.btn-fb[data-v-60b9710c], .btn-google[data-v-60b9710c] {\n    margin-right: 5px;\n}\n.btn-twitter[data-v-60b9710c] {\n    margin-left: 5px;\n}\n.btn-share[data-v-60b9710c] {\n    flex: 0 40%;\n}\n.btn-spectate[data-v-60b9710c] {\n    border-radius: 5px;\n    width: 250px;\n    height: 40px;\n    color: #FFF;\n    margin: 0px 32px;\n    font-size: 16px;\n    text-align: center;\n    background-color: #FE7800;\n    line-height: 40px;\n    position: absolute;\n    bottom: 40px;\n}\n.btn-spectate.disabled[data-v-60b9710c] {\n    background-color: #666;\n    cursor: default;\n}\n.btn.spectate[data-v-60b9710c]:hover {\n    background-color: #974B03;\n    color: #FFF;\n}\n.battle-stats-empty[data-v-60b9710c] {\n    background-color: #F5F5F5;\n    border-radius: 10px;\n    height: 124px;\n    margin-top: 20px;\n    margin-bottom: 12px;\n    text-align: center;\n    font-size: 16px;\n    line-height: 124px;\n}\n\n", ""]);

// exports


/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "battle-stats" } }, [
    _c(
      "div",
      {
        staticClass: "battle-stats-score-container",
        class: { final: _vm.wasSpectating }
      },
      [
        _c("div", { staticClass: "battle-stats-final-position" }, [
          _c("span", { staticClass: "title" }, [
            _vm._v(_vm._s(_vm.positionText))
          ]),
          _vm._v(" "),
          _c(
            "span",
            { staticClass: "icon", class: _vm.rankIconClass(_vm.userPosition) },
            [
              _vm.userPosition <= 3
                ? _c("span", { staticClass: "text top-three" }, [
                    _vm._v(_vm._s(_vm.userPosition))
                  ])
                : _c("span", { staticClass: "text" }, [
                    _vm._v("#" + _vm._s(_vm.userPosition))
                  ])
            ]
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "battle-stats-score" }, [
          _vm._v(_vm._s(_vm.massText)),
          _c("br"),
          _c("strong", [_vm._v(_vm._s(_vm.mass)), _c("br"), _c("br")]),
          _vm._v(_vm._s(_vm.killsText)),
          _c("br"),
          _c("strong", [_vm._v(_vm._s(_vm.kills))])
        ]),
        _vm._v(" "),
        !this.wasSpectating
          ? _c("div", { staticClass: "battle-stats-social-buttons" }, [
              _vm.login == "facebook"
                ? _c(
                    "button",
                    {
                      staticClass: "btn btn-primary btn-login btn-fb btn-share",
                      on: {
                        click: function($event) {
                          return _vm.share("facebook")
                        }
                      }
                    },
                    [
                      _c("span", {
                        staticClass: "social social-facebook facebook-icon"
                      }),
                      _vm._v(" "),
                      _c("span", {
                        staticClass: "btn-text",
                        domProps: { innerHTML: _vm._s(_vm.shareText) }
                      })
                    ]
                  )
                : _vm._e(),
              _vm._v(" "),
              _vm.login == "google"
                ? _c(
                    "button",
                    {
                      staticClass:
                        "btn btn-primary btn-login btn-google btn-share",
                      on: {
                        click: function($event) {
                          return _vm.share("google")
                        }
                      }
                    },
                    [
                      _c("span", { staticClass: "Google-icon" }),
                      _vm._v(" "),
                      _c("span", {
                        staticClass: "btn-text",
                        domProps: { innerHTML: _vm._s(_vm.shareText) }
                      })
                    ]
                  )
                : _vm._e(),
              _vm._v(" "),
              _c(
                "button",
                {
                  staticClass:
                    "btn btn-primary btn-login btn-twitter btn-share",
                  on: {
                    click: function($event) {
                      return _vm.share("twitter")
                    }
                  }
                },
                [
                  _c("span", { staticClass: "social Twitter-icon" }),
                  _vm._v(" "),
                  _c("span", {
                    staticClass: "btn-text",
                    domProps: { innerHTML: _vm._s(_vm.shareText) }
                  })
                ]
              )
            ])
          : _vm._e()
      ]
    ),
    _vm._v(" "),
    this.items.length > 0
      ? _c(
          "div",
          {
            staticClass: "battle-stats-entries",
            class: { final: _vm.wasSpectating }
          },
          _vm._l(_vm.items, function(item) {
            return _c(
              "div",
              { key: item.position, staticClass: "battle-stats-entry" },
              [
                _c(
                  "span",
                  {
                    staticClass: "icon",
                    class: _vm.rankIconClass(item.position)
                  },
                  [
                    item.position <= 3
                      ? _c("span", { staticClass: "text top-three" }, [
                          _vm._v(_vm._s(item.position))
                        ])
                      : _c("span", { staticClass: "text" }, [
                          _vm._v("#" + _vm._s(item.position))
                        ])
                  ]
                ),
                _vm._v(" "),
                _c("span", { staticClass: "battle-stats-entry-name" }, [
                  _vm._v(_vm._s(_vm.getName(item.name)))
                ])
              ]
            )
          }),
          0
        )
      : _c("div", { staticClass: "battle-stats-empty" }, [
          _vm._v(_vm._s(_vm.emptyText))
        ]),
    _vm._v(" "),
    _vm.userPosition > 2 && !this.wasSpectating
      ? _c(
          "div",
          {
            staticClass: "btn btn-spectate",
            class: { disabled: !_vm.battleInProgress },
            attrs: { disabled: false },
            on: { click: _vm.spectate }
          },
          [_vm._v(_vm._s(_vm.spectateText))]
        )
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-60b9710c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 599 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4afb75c0_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRushStats_vue__ = __webpack_require__(602);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(600)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-4afb75c0"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRushStats_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4afb75c0_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRushStats_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4afb75c0_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRushStats_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/teamrush/components/TeamRushStats.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4afb75c0", Component.options)
  } else {
    hotAPI.reload("data-v-4afb75c0", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(601);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("e49211ca", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4afb75c0\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TeamRushStats.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-4afb75c0\",\"scoped\":true,\"sourceMap\":false}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TeamRushStats.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#teamrush-stats[data-v-4afb75c0] {\n    margin-right: 40px;\n    min-width: 250px;\n}\n.teamrush-stats-entries.final[data-v-4afb75c0] {\n    position: relative;\n    top: -240px;\n}\n.teamrush-stats-score-container[data-v-4afb75c0] {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 170px;\n    background-color: #F5F5F5;\n    border-radius: 10px;\n    margin: 10px 0 22px 0;\n    padding: 19px 19px;\n}\n.teamrush-stats-score-container.final[data-v-4afb75c0] {\n    height: 200px;\n    top: 200px;\n}\n.teamrush-stats-final-position[data-v-4afb75c0] {\n    flex: 0 0 40%;\n}\n.teamrush-stats-score[data-v-4afb75c0] {\n    text-align: center;\n    font-size: 18px;\n    padding-top: 20px;\n    margin-left: 40px;\n}\n.teamrush-stats-entry[data-v-4afb75c0] {\n    position: relative;\n    width: 100%;\n    height: 30px;\n    background-color: #f5f5f5;\n    border-radius: 10px;\n    margin-bottom: 10px;\n}\n.teamrush-stats-entry > .icon[data-v-4afb75c0] {\n    transform: matrix(0.45, 0, 0, 0.45, -44, -26);\n}\n.teamrush-stats-entry > .icon.other[data-v-4afb75c0] {\n    transform: matrix(0.45, 0, 0, 0.45, -30, -14);\n}\n.teamrush-stats-final-position > .icon[data-v-4afb75c0] {\n    transform: matrix(0.75, 0, 0, 0.75, 0, 90);\n}\n.teamrush-stats-final-position > .icon.other[data-v-4afb75c0] {\n    transform: matrix(0.75, 0, 0, 0.75, 18, 95);\n}\n.icon > .text[data-v-4afb75c0] {\n    position: relative;\n    left: 40px;\n    top: 2px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #FFF;\n    text-shadow:\n    2px 0 5px #000,\n    -2px 0 5px #000,\n    0 -2px 5px #000,\n    0 2px 5px #000;\n}\n.icon.other > .text[data-v-4afb75c0] {\n    left: 0;\n    top: 0;\n    display: table;\n    margin: 5px auto;\n    font-size: 35px;\n    line-height: 50px;\n}\n.icon > .text.top-three[data-v-4afb75c0] {\n    left: 100px;\n    top: 12px;\n    line-height: 60px;\n}\n.teamrush-stats-final-position > .title[data-v-4afb75c0] {\n    font-size: 20px;\n    text-align: center;\n    position: absolute;\n    word-wrap: break-word;\n    width: 30%;\n    top: 40px;\n    left: 30px;\n}\n.teamrush-stats-entry-name[data-v-4afb75c0] {\n    position: absolute;\n    top: 4px;\n    left: 72px;\n    font-size: 15px;\n}\n.teamrush-stats-social-buttons[data-v-4afb75c0] {\n    width: 105%;\n    height: 45px;\n    position: relative;\n    top: 25px;\n    left: 22px;\n    justify-content: center;\n}\n.btn-fb[data-v-4afb75c0], .btn-google[data-v-4afb75c0] {\n    margin-right: 5px;\n}\n.btn-twitter.big[data-v-4afb75c0] {\n    width: 280px;\n}\n.btn-share[data-v-4afb75c0] {\n    flex: 0 40%;\n}\n.pie[data-v-4afb75c0] {\n    border-radius: 100%;\n    overflow: hidden;\n    position: relative;\n    width: 120px;\n    height: 120px;\n    margin: 0 auto;\n}\n.teamrush-winner-text[data-v-4afb75c0] {\n    position: absolute;\n    top: 155px;\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n    width: 100%;\n    text-align: center;\n    margin-left: -15px;\n}\n.btn-play-again[data-v-4afb75c0] {\n    border-radius: 5px;\n    display: block;\n    height: 34px;\n    color: #ffffff;\n    font-size: 16px;\n    text-align: center;\n    background-color: #54c800;\n    line-height: 34px;\n    position: relative;\n    top: 25px;\n    left: 22px;\n}\n.btn-play-again[data-v-4afb75c0]:hover {\n    background-color: #347F01;\n    color: #FFF;\n}\n\n", ""]);

// exports


/***/ }),
/* 602 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "teamrush-stats" } }, [
    _c("div", { staticClass: "teamrush-stats-score-container" }, [
      _c("div", { staticClass: "pie" }, [
        _c("div", {
          staticClass: "pie-segment",
          style: _vm.getPieSegmentStyleBefore(this.redScore, "#F00", true)
        }),
        _vm._v(" "),
        _c("div", {
          staticClass: "pie-segment",
          style: _vm.getPieSegmentStyle(this.redScore, "#F00")
        }),
        _vm._v(" "),
        _c("div", {
          staticClass: "pie-segment",
          style: _vm.getPieSegmentStyleBefore(this.blueScore, "#00F", false)
        }),
        _vm._v(" "),
        _c("div", {
          staticClass: "pie-segment",
          style: _vm.getPieSegmentStyle(this.blueScore, "#00F")
        })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "teamrush-winner-text" }, [
        _vm._v(_vm._s(_vm.winnerText))
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "teamrush-stats-score" }, [
      _vm._v(_vm._s(_vm.massText)),
      _c("br"),
      _c("strong", [_vm._v(_vm._s(_vm.mass)), _c("br"), _c("br")]),
      _vm._v(_vm._s(_vm.killsText)),
      _c("br"),
      _c("strong", [_vm._v(_vm._s(_vm.kills))])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "teamrush-stats-social-buttons" }, [
      _vm.login == "facebook"
        ? _c(
            "button",
            {
              staticClass: "btn btn-primary btn-login btn-fb btn-share",
              on: {
                click: function($event) {
                  return _vm.share("facebook")
                }
              }
            },
            [
              _c("span", {
                staticClass: "social social-facebook facebook-icon"
              }),
              _vm._v(" "),
              _c("span", {
                staticClass: "btn-text",
                domProps: { innerHTML: _vm._s(_vm.shareText) }
              })
            ]
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "btn btn-primary btn-login btn-twitter btn-share",
          class: { big: _vm.login != "facebook" },
          on: {
            click: function($event) {
              return _vm.share("twitter")
            }
          }
        },
        [
          _c("span", { staticClass: "social Twitter-icon" }),
          _vm._v(" "),
          _c("span", {
            staticClass: "btn-text",
            domProps: { innerHTML: _vm._s(_vm.shareText) }
          })
        ]
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "btn btn-play-again", on: { click: _vm.play } }, [
      _vm._v(_vm._s(_vm.playAgainText))
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-4afb75c0", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 603 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { class: { big: _vm.potion }, attrs: { id: "match-results" } },
    [
      _c("span", {
        staticClass: "match-inner-close sprite-main Close",
        on: { click: _vm.close }
      }),
      _vm._v(" "),
      _c("div", { staticClass: "match-results-title" }, [
        _vm._v(_vm._s(_vm.titleText))
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "match-results-container" },
        [
          _vm.hasUserWon()
            ? _c("span", { staticClass: "sprite-main Confetti" })
            : _vm._e(),
          _vm._v(" "),
          _vm.showBattleStats()
            ? _c("battle-stats", {
                attrs: {
                  userPosition: _vm.userPosition,
                  mass: _vm.mass,
                  kills: _vm.kills,
                  otherPositions: _vm.otherPositions,
                  login: _vm.login,
                  battleInProgress: _vm.battleInProgress,
                  wasSpectating: _vm.wasSpectating
                }
              })
            : _vm._e(),
          _vm._v(" "),
          _vm.showTeamRushStats()
            ? _c("teamrush-stats", {
                attrs: {
                  redScore: _vm.redScore,
                  blueScore: _vm.blueScore,
                  mass: _vm.mass,
                  kills: _vm.kills,
                  login: _vm.login
                }
              })
            : _vm._e(),
          _vm._v(" "),
          _vm.canShowPotion()
            ? _c("potion", {
                attrs: {
                  potion: _vm.potion,
                  fullslots: _vm.checkFullSlots(),
                  loading: _vm.won && !_vm.potion && !_vm.checkFullSlots()
                }
              })
            : _vm._e()
        ],
        1
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-78a32fed", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 604 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.visible
    ? _c(
        "div",
        { attrs: { id: "battle-app" } },
        [
          _c(
            "div",
            { staticClass: "battle-blocker", on: { click: _vm.close } },
            [_c("div", { staticClass: "disabler" })]
          ),
          _vm._v(" "),
          _c("results", {
            attrs: {
              userPosition: _vm.userPosition,
              mass: _vm.mass,
              kills: _vm.kills,
              otherPositions: _vm.otherPositions,
              potion: _vm.potion,
              fullslots: _vm.fullslots,
              login: _vm.login,
              battleInProgress: _vm.battleInProgress,
              wasSpectating: _vm.wasSpectating
            }
          })
        ],
        1
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-080edefc", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 605 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68dffaa4_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRush_vue__ = __webpack_require__(608);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(606)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_TeamRush_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68dffaa4_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRush_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_68dffaa4_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_TeamRush_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/teamrush/TeamRush.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-68dffaa4", Component.options)
  } else {
    hotAPI.reload("data-v-68dffaa4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(607);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("ae71d39e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TeamRush.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TeamRush.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports
exports.i(__webpack_require__(54), "");

// module
exports.push([module.i, "\n", ""]);

// exports


/***/ }),
/* 608 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.visible
    ? _c(
        "div",
        { attrs: { id: "teamrush-app" } },
        [
          _c(
            "div",
            { staticClass: "teamrush-blocker", on: { click: _vm.close } },
            [_c("div", { staticClass: "disabler" })]
          ),
          _vm._v(" "),
          _c("results", {
            attrs: {
              redScore: _vm.redScore,
              blueScore: _vm.blueScore,
              mass: _vm.mass,
              kills: _vm.kills,
              potion: _vm.potion,
              fullslots: _vm.fullslots,
              login: _vm.login,
              won: _vm.won
            }
          })
        ],
        1
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-68dffaa4", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 609 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e81d841_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RewardLinks_vue__ = __webpack_require__(612);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(610)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0e81d841"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RewardLinks_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e81d841_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RewardLinks_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0e81d841_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RewardLinks_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/common/RewardLinks.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0e81d841", Component.options)
  } else {
    hotAPI.reload("data-v-0e81d841", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(611);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("5662ecc6", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0e81d841\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./RewardLinks.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-0e81d841\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./RewardLinks.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#reward-links-dialog[data-v-0e81d841] {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform-origin: center top 0px;\n    transform: translate(-50%, -50%) scale(0.75) translate3d( 0, 0, 0);\n    display: block;\n    position: fixed;\n    z-index: 1500;\n    background-color: white;\n    width: 400px;\n    height: 400px;\n    border-radius: 10px;\n    padding: 30px;\n    color: #666;\n}\n#reward-links-error[data-v-0e81d841] {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform-origin: center top 0px;\n    transform: translate(-50%, -50%) scale(0.75) translate3d( 0, 0, 0);\n    display: block;\n    position: fixed;\n    z-index: 1500;\n    background-color: white;\n    width: 400px;\n    height: 250px;\n    border-radius: 10px;\n    padding: 30px;\n    color: #666;\n}\n.inner-close[data-v-0e81d841] {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n    margin: 10px;\n    opacity: 0.5;\n}\n.inner-close[data-v-0e81d841]:hover {\n    opacity: 1;\n}\n#reward-links-dialog .title[data-v-0e81d841],\n#reward-links-error .title[data-v-0e81d841] {\n    font-size: 40px;\n    text-align: center;\n    font-weight: bold;\n    margin-bottom: 10px;\n}\n#reward-links-dialog .subtitle[data-v-0e81d841] {\n    font-size: 25px;\n    text-align: center;\n}\n#reward-links-dialog .reward[data-v-0e81d841] {\n    width: 100%;\n    height: 60%;\n    background: #F0F0F0;\n    margin: 18px 0px;\n    border-radius: 10px;\n    position: relative;\n}\n#reward-links-error .inner[data-v-0e81d841] {\n    width: 100%;\n    height: 70%;\n    background: #F0F0F0;\n    margin: 18px 0px;\n    border-radius: 10px;\n    position: relative;\n}\n#reward-links-error .inner .text[data-v-0e81d841] {\n    font-size: 22px;\n    text-align: center;\n    padding: 15% 5%;\n}\n#reward-links-dialog .reward .Coins_L[data-v-0e81d841] {\n    transform: matrix(1, 0, 0, 1, 100, 40);\n}\n#reward-links-dialog .reward .DNA_L[data-v-0e81d841] {\n    transform: matrix(1, 0, 0, 1, 100, 30);\n}\n#reward-links-dialog .reward .boost[data-v-0e81d841] {\n    transform: matrix(1.25, 0, 0, 1.25, 120, 40);\n}\n#reward-links-dialog .reward .dailyquest-chestbudle[data-v-0e81d841] {\n    transform: matrix(1, 0, 0, 1, 50, 25);\n}\n#reward-links-dialog .reward img.skin[data-v-0e81d841] {\n    position: relative;\n    top: 10%;\n    left: 30%;\n    width: 40%;\n    border-radius: 100px;\n    border-color: #000;\n    border-width: 7px;\n    border-style: solid;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n#reward-links-dialog .reward img.ticket[data-v-0e81d841] {\n    position: relative;\n    width: 40%;\n    left: 30%;\n    top: 10%;\n}\n#reward-links-dialog .reward .label[data-v-0e81d841] {\n    top: 82%;\n    position: absolute;\n    text-align: center;\n    width: 100%;\n    font-size: 20px;\n    font-weight: bold;\n}\n#reward-links-dialog > button[data-v-0e81d841] {\n    width: 200px;\n    height: 50px;\n    display: block;\n    color: #fff;\n    background-color: #54c800;\n    border-color: #54c800;\n    font-size: 20px;\n    font-weight: bold;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    margin: 0 auto;\n}\n#reward-links-dialog > button[data-v-0e81d841]:hover {\n    background-color: #347F01;\n}\n#reward-links-dialog > button[data-v-0e81d841]:focus {\n    outline: none;\n}\n#reward-links-dialog .store-buttons[data-v-0e81d841],\n#reward-links-dialog .social-buttons[data-v-0e81d841] {\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n}\n#reward-links-dialog .store-buttons a[data-v-0e81d841] {\n    cursor: pointer;\n}\n#reward-links-dialog .store-buttons a[data-v-0e81d841]:focus {\n    outline: none;\n}\n#reward-links-dialog .store-buttons > span[data-v-0e81d841],\n#reward-links-dialog .social-buttons > span[data-v-0e81d841] {\n    font-size: 15px;\n}\n#reward-links-dialog .social-buttons > span[data-v-0e81d841] {\n    font-weight: bold;\n    margin-top: 5px;\n}\n.drop-enter-active[data-v-0e81d841], .drop-leave-active[data-v-0e81d841] {\n    transition: all .5s ease;\n}\n.drop-enter[data-v-0e81d841], .drop-leave-to[data-v-0e81d841] {\n    transform: translateY(-200px);\n}\n", ""]);

// exports


/***/ }),
/* 612 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.visible
    ? _c(
        "div",
        { attrs: { id: "reward-links" } },
        [
          _c(
            "div",
            { attrs: { id: "reward-links-blocker" }, on: { click: _vm.close } },
            [_c("div", { staticClass: "disabler" })]
          ),
          _vm._v(" "),
          _c("transition", { attrs: { name: "drop" } }, [
            _vm.type !== "error"
              ? _c("div", { attrs: { id: "reward-links-dialog" } }, [
                  _c("span", {
                    staticClass: "inner-close sprite-main Close",
                    on: { click: _vm.close }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "title" }, [
                    _vm._v(_vm._s(_vm.titleLabel))
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "subtitle" }, [
                    _vm._v(_vm._s(_vm.subtitleLabel))
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "reward" },
                    [
                      _vm.type === "skin"
                        ? _c("img", {
                            staticClass: "skin",
                            style: _vm.border,
                            attrs: { src: _vm.assetUrl }
                          })
                        : _vm.type === "ticket"
                        ? _c("img", {
                            staticClass: "ticket",
                            style: _vm.border,
                            attrs: { src: "/img/skin_ticket_icon.png" }
                          })
                        : _vm.type === "potion"
                        ? _c("animation", {
                            class: "potion",
                            attrs: {
                              assetName: _vm.potionAsset,
                              animName: "1_Idle",
                              width: _vm.potionWidth,
                              height: _vm.potionHeight,
                              offsetX: _vm.potionOffsetX,
                              offsetY: _vm.potionOffsetY,
                              scaleX: _vm.potionScale,
                              scaleY: _vm.potionScale
                            }
                          })
                        : _c("span", { class: _vm.rewardImage }),
                      _vm._v(" "),
                      _c("div", { staticClass: "label" }, [
                        _vm._v(_vm._s(_vm.rewardLabel))
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _vm.isGuest()
                    ? _c("div", { staticClass: "social-buttons" }, [
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-primary btn-login btn-fb",
                            on: { click: _vm.facebookLogin }
                          },
                          [
                            _c("span", {
                              staticClass:
                                "social social-facebook facebook-icon"
                            }),
                            _vm._v(" "),
                            _c("span", { staticClass: "btn-text" }, [
                              _vm._v(_vm._s(_vm.loginButtonLabel))
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "button",
                          {
                            staticClass: "btn btn-primary btn-login btn-google",
                            on: { click: _vm.googleLogin }
                          },
                          [
                            _c("span", { staticClass: "Google-icon" }),
                            _vm._v(" "),
                            _c("span", { staticClass: "btn-text" }, [
                              _vm._v(_vm._s(_vm.loginButtonLabel))
                            ])
                          ]
                        )
                      ])
                    : _vm.type !== "ticket"
                    ? _c(
                        "button",
                        {
                          staticClass: "action-button",
                          on: { click: _vm.onButtonClick }
                        },
                        [_c("span", [_vm._v(_vm._s(_vm.buttonLabel))])]
                      )
                    : _c("div", { staticClass: "store-buttons" }, [
                        _c(
                          "a",
                          {
                            staticClass: "apple-store",
                            attrs: {
                              target: "_blank",
                              rel: "noopener noreferrer",
                              href:
                                "https://itunes.apple.com/app/agar.io/id995999703?mt=8&at=1l3vajp"
                            }
                          },
                          [_c("span", { staticClass: "sprite-main appstore" })]
                        ),
                        _vm._v(" "),
                        _c(
                          "a",
                          {
                            staticClass: "play-store",
                            attrs: {
                              target: "_blank",
                              rel: "noopener noreferrer",
                              href:
                                "https://play.google.com/store/apps/details?id=com.miniclip.agar.io"
                            }
                          },
                          [
                            _c("span", {
                              staticClass: "sprite-main google-play"
                            })
                          ]
                        ),
                        _vm._v(" "),
                        _c("span", [_vm._v(_vm._s(_vm.noSkinEditorLabel))])
                      ])
                ])
              : _c("div", { attrs: { id: "reward-links-error" } }, [
                  _c("span", {
                    staticClass: "inner-close sprite-main Close",
                    on: { click: _vm.close }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "title" }, [
                    _vm._v(_vm._s(_vm.errorTitle))
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "inner" }, [
                    _c("div", { staticClass: "text" }, [
                      _vm._v(_vm._s(_vm.errorMessage))
                    ])
                  ])
                ])
          ])
        ],
        1
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0e81d841", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 613 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_662b4a84_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinEditor_vue__ = __webpack_require__(657);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(614)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-662b4a84"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinEditor_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_662b4a84_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinEditor_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_662b4a84_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinEditor_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/skineditor/SkinEditor.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-662b4a84", Component.options)
  } else {
    hotAPI.reload("data-v-662b4a84", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(615);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("790e3b77", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-662b4a84\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SkinEditor.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-662b4a84\",\"scoped\":true,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SkinEditor.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#skin-editor-app[data-v-662b4a84] {\n    position: absolute;\n    z-index: 2;\n    top: 50%;\n    left: 50%;\n}\n#skin-editor-dialog[data-v-662b4a84] {\n    float: left;\n    top: 50%;\n    left: 50%;\n    width: 1040px;\n    position: absolute;\n    transform-origin: center top 0px;\n    transform: translate(-50%, -50%);\n    display: block;\n    z-index: 1499;\n    background-color: white;\n    height: 570px;\n    border-radius: 10px;\n    padding: 10px;\n    color: #666;\n}\n#skin-editor-blocker[data-v-662b4a84] {\n    position: fixed;\n    width: 5000px;\n    height: 5000px;\n    transform: translate(-50%, -50%);\n    z-index: 1498;\n}\n#skin-editor-dialog .left-tools[data-v-662b4a84],\n#skin-editor-border[data-v-662b4a84],\n#skin-editor-dialog .right-tools[data-v-662b4a84]\n{\n    float: left;\n}\n#skin-editor-canvas[data-v-662b4a84] {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    cursor: crosshair;\n    border-radius: 50%;\n    animation: 1s inner-squish-data-v-662b4a84 infinite;\n}\n#skin-editor-border[data-v-662b4a84] {\n    position: relative;\n    margin-top: 10px;\n    width: 532px;\n    height: 532px;\n    background: black;\n    border-radius: 50%;\n    animation: 1s outer-squish-data-v-662b4a84 infinite;\n}\n#skin-editor-dialog .left-tools[data-v-662b4a84],\n#skin-editor-dialog .right-tools[data-v-662b4a84]{\n    width: 20%;\n    height: 100%;\n    margin: 50px 20px;\n    position: relative;\n}\n#skin-editor-dialog ol[data-v-662b4a84] {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n#skin-editor-dialog .colors[data-v-662b4a84] {\n    padding: 10px 30px;\n}\n#skin-editor-dialog li.color-option[data-v-662b4a84] {\n    padding: 15px;\n    display: inline-block;\n}\n#skin-editor-dialog li.color-option.selected[data-v-662b4a84] {\n    border-radius: 50%;\n    border: 5px solid #00B5D0;\n    padding: 5px;\n    margin: 5px;\n}\n#skin-editor-dialog li.color-option button[data-v-662b4a84] {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: none;\n    float: left;\n}\n#skin-editor-dialog li.color-option button[data-v-662b4a84]:focus {\n    outline: none;\n}\n#skin-editor-dialog .history[data-v-662b4a84] {\n    margin: 0 20px;\n    width: 200px;\n}\n#skin-editor-dialog .history .undo[data-v-662b4a84], #skin-editor-dialog .history .redo[data-v-662b4a84] {\n    display: inline-block;\n    margin: 0px 15px\n}\n#skin-editor-dialog .history button[data-v-662b4a84] {\n    border-radius: 50%;\n    border: 2px solid #666;\n    width: 50px;\n    height: 50px;\n    overflow: hidden;\n}\n#skin-editor-dialog .history .label[data-v-662b4a84] {\n    font-size: 14px;\n    font-weight: bold;\n    text-align: center;\n}\n#skin-editor-dialog .brushes[data-v-662b4a84] {\n    margin: 0 5px;\n}\n#skin-editor-dialog li.brush-option[data-v-662b4a84] {\n    overflow: hidden;\n    display: inline-block;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    border: 5px solid #00000000;\n    padding: 5px;\n}\n#skin-editor-dialog li.brush-option.selected[data-v-662b4a84] {\n    border: 5px solid #00B5D0;\n}\n#skin-editor-dialog li.brush-option button[data-v-662b4a84] {\n    border-radius: 50%;\n    border: none;\n    background-color: #666;\n    margin: 0 auto;\n    display: inline-block;\n    padding: 0px;\n}\n#skin-editor-dialog .tools[data-v-662b4a84] {\n    margin: 0 20px;\n    width: 130px;\n}\n#skin-editor-dialog .tools button[data-v-662b4a84] {\n    position: relative;\n    border-radius: 50%;\n    border: 2px solid #666;\n    width: 80px;\n    height: 80px;\n    background-color: #FFF;\n}\n#skin-editor-dialog .tools .brush[data-v-662b4a84], #skin-editor-dialog .tools .eraser[data-v-662b4a84] {\n    margin: 25px;\n}\n#skin-editor-dialog .tools button.selected[data-v-662b4a84] {\n    border: 5px solid #00B5D0;\n}\n#skin-editor-dialog .tools .label[data-v-662b4a84] {\n    width: 100%;\n    text-align: center;\n    top: 10px;\n    position: relative;\n    font-weight: bold;\n}\n#skin-editor-dialog .cell-colors .color-option[data-v-662b4a84] {\n    position: relative;\n    border-radius: 50%;\n    border: 5px solid #00000000;\n    margin: 5px;\n    padding: 5px;\n}\n#skin-editor-dialog .cell-colors .color-option button[data-v-662b4a84] {\n    width: 50px;\n    height: 50px;\n}\n#skin-editor-dialog .cell-colors .color-option button.selected[data-v-662b4a84] {\n    border: 5px solid #00B5D0;\n}\n#skin-editor-dialog .cell-colors .color-option .label[data-v-662b4a84] {\n    width: 100%;\n    height: 10px;\n    text-align: center;\n    top: 65px;\n    position: absolute;\n    font-weight: bold;\n    font-size: 12px;\n}\n#skin-editor-dialog .clear[data-v-662b4a84] {\n    top: 20px;\n    left: 65px;\n    position: relative;\n    width: 0;\n}\n#skin-editor-dialog .clear button[data-v-662b4a84] {\n    border-radius: 10px;\n    border: 2px solid #666;\n    width: 70px;\n    height: 30px;\n    background-color: #FFF;\n}\n#skin-editor-dialog .save[data-v-662b4a84] {\n    width: 120px;\n    height: 50px;\n    display: block;\n    color: #fff;\n    background-color: #54c800;\n    border-color: #54c800;\n    font-size: 20px;\n    font-weight: bold;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    margin: 0 auto;\n    top: 40px;\n    left: -20px;\n    position: relative;\n}\n#skin-editor-dialog .save .circle[data-v-662b4a84] {\n    position: absolute;\n    right: -10px;\n    top: -10px;\n}\n#skin-editor-dialog .save[data-v-662b4a84]:hover {\n    background-color: #347F01;\n}\n#skin-editor-dialog .save[data-v-662b4a84]:focus {\n    outline: none;\n}\n#skin-editor-dialog .inner-close[data-v-662b4a84] {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n    margin: 10px;\n    opacity: 0.5;\n}\n#skin-editor-dialog .inner-close[data-v-662b4a84]:hover {\n    opacity: 1;\n}\n#skin-editor-dialog .hint-button[data-v-662b4a84] {\n    position: absolute;\n    transform: matrix(0.75, 0, 0, 0.75, -10, -10);\n    cursor: pointer;\n}\n#skin-editor-tutorial[data-v-662b4a84] {\n    position: relative;\n    width: 300%;\n    height: 300%;\n    top: -100%;\n    left: -100%;\n    background: #00000066;\n}\n#skin-editor-tutorial span[data-v-662b4a84] {\n    position: absolute;\n    top: 61%;\n    left: 0;\n    width: 100%;\n    text-align: center;\n    font-size: 18px;\n    font-weight: bold;\n    color: #FFF;\n}\n#skin-editor-tutorial .tutorial-bubble-container[data-v-662b4a84] {\n    position: absolute;\n    top: 310px;\n    left: 975px;\n}\n#skin-editor-tutorial .tutorial-bubble[data-v-662b4a84] {\n    position: absolute;\n    padding: 20px;\n    border: 3px solid #777;\n    color: #777;\n    font-size: 20px;\n    font-weight: bold;\n    text-align: center;\n    background: #fff;\n    -webkit-border-radius: 8px;\n    -moz-border-radius: 8px;\n    border-radius: 8px;\n}\n#skin-editor-tutorial .tutorial-bubble[data-v-662b4a84]:before {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-color: transparent #777;\n    display: block;\n    width: 0;\n}\n#skin-editor-tutorial .tutorial-bubble[data-v-662b4a84]:after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-color: transparent #fff;\n    display: block;\n    width: 0;\n}\n#skin-editor-tutorial .tutorial-bubble.color[data-v-662b4a84] {\n    top: 320px;\n    left: 270px;\n    width: 200px;\n    height: 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.size[data-v-662b4a84] {\n    top: 300px;\n    left: 610px;\n    width: 205px;\n    height: 45px;\n}\n#skin-editor-tutorial .tutorial-bubble.brush[data-v-662b4a84] {\n    top: 395px;\n    left: 640px;\n    width: 205px;\n    height: 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.eraser[data-v-662b4a84] {\n    top: 515px;\n    left: 640px;\n    width: 205px;\n    height: 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.background[data-v-662b4a84] {\n    top: 640px;\n    left: 555px;\n    width: 260px;\n    height: 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.border[data-v-662b4a84] {\n    top: 640px;\n    left: 695px;\n    width: 205px;\n    height: 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.left[data-v-662b4a84]:before {\n    top: 18px;\n    bottom: auto;\n    left: -25px;\n    border-width: 15px 25px 15px 0;\n}\n#skin-editor-tutorial .tutorial-bubble.left[data-v-662b4a84]:after {\n    top: 23px;\n    bottom: auto;\n    left: -20px;\n    border-width: 10px 20px 10px 0;\n}\n#skin-editor-tutorial .tutorial-bubble.right[data-v-662b4a84]:before {\n    top: 18px;\n    bottom: auto;\n    right: -25px;\n    border-width: 15px 0 15px 25px;\n}\n#skin-editor-tutorial .tutorial-bubble.right[data-v-662b4a84]:after {\n    top: 23px;\n    bottom: auto;\n    right: -20px;\n    border-width: 10px 0 10px 20px;\n}\n#skin-editor-dialog .highlighted[data-v-662b4a84] {\n    position: relative;\n    z-index: 2000;\n    color: #FFF;\n}\n#skin-editor-dialog .highlighted button[data-v-662b4a84] {\n    cursor: default;\n}\n#skin-editor-dialog .highlighted.brushes li.brush-option button[data-v-662b4a84] {\n    background-color: #FFF;\n}\n#skin-editor-dialog .disabled[data-v-662b4a84] {\n    opacity: 0.6;\n}\n#skin-editor-dialog .disabled button[data-v-662b4a84] {\n    cursor: default;\n}\n#skin-editor-dialog .hand[data-v-662b4a84] {\n    position: absolute;\n    top: 130px;\n    left: 340px;\n    cursor: crosshair;\n}\n#skin-editor-dialog .eraser .btn img[data-v-662b4a84] {\n    position: relative;\n    width: 65%;\n    top: 4px;\n    left: 1px;\n}\n#skin-editor-dialog .brush .btn .brush-handle[data-v-662b4a84] {\n    position: absolute;\n    width: 70%;\n    top: 15px;\n    left: 8px;\n}\n#skin-editor-dialog .brush .btn .brush-tip[data-v-662b4a84] {\n    position: absolute;\n    width: 40%;\n    top: 21px;\n    left: 12px;\n}\n#skin-editor-dialog .brush .btn .brush-tip.white[data-v-662b4a84] {\n    top: 33px;\n    left: 11px;\n}\n#skin-editor-dialog .history .btn img[data-v-662b4a84] {\n    width: 160%;\n    top: -3px;\n    left: -9px;\n}\n#skin-editor-dialog .history .redo .btn img[data-v-662b4a84] {\n    transform: scaleX(-1);\n}\n#skin-editor-dialog .free-skins-label[data-v-662b4a84] {\n    position: absolute;\n    text-align: center;\n    width: 130px;\n    font-weight: bold;\n    bottom: -35px;\n    right: 200px;\n}\n.drop-enter-active[data-v-662b4a84], .drop-leave-active[data-v-662b4a84] {\n    transition: all .35s ease;\n}\n.drop-enter[data-v-662b4a84], .drop-leave-to[data-v-662b4a84] {\n    transform: translateY(-200px);\n    opacity: 0;\n}\n.fade-enter-active[data-v-662b4a84], .fade-leave-active[data-v-662b4a84] {\n   transition: opacity .25s;\n}\n.fade-enter[data-v-662b4a84], .fade-leave-to[data-v-662b4a84] {\n   opacity: 0;\n}\n@keyframes inner-squish-data-v-662b4a84 {\n0%    { clip-path: polygon(100.0013525494543% 50.420606904602806%, 99.51922603702278% 52.876548823476035%, 99.295858234221% 56.03891721038508%, 99.08589602372187% 59.17439529868828%, 98.3102376357907% 62.472592085493694%, 97.516315430315% 65.47356781257433%, 96.51783111659414% 68.39371982924972%, 95.35884450971787% 71.24026043778632%, 93.77802305727869% 74.06462799428046%, 92.06198742366574% 76.73280402652694%, 90.84801355979508% 79.24491985609701%, 88.87541426277298% 81.90965211388628%, 86.17991225505547% 84.45690151374524%, 84.25330559602898% 86.57786478435672%, 82.09577037682193% 88.63200700898797%, 79.44316799217286% 90.42582267285187%, 76.80037236972116% 92.18966110771579%, 74.10320445141558% 93.83981638634584%, 71.24545935026752% 95.16544499204086%, 68.23033039636283% 96.40539764865187%, 65.59293211736207% 97.75146737842026%, 62.395419939229654% 98.0977848501953%, 59.474864443386764% 99.4178610797512%, 56.63972151125929% 99.22257596716138%, 53.23392319017987% 99.94761442926317%, 49.88367221765294% 99.97915581390349%, 46.73934612334784% 99.78771071405625%, 43.693677315768724% 99.64221731196672%, 40.618678717709436% 99.15668121976073%, 37.48364243132577% 98.50567933434375%, 34.38982797735198% 97.53225227382767%, 31.880142452497616% 96.75360099031649%, 28.513311883735323% 95.45593192136447%, 25.64345508781172% 93.46000804862659%, 23.093717866485267% 92.25185760888631%, 20.623534310225622% 90.49262058169495%, 18.073863749011036% 88.57291233482432%, 15.872392745494512% 86.4989132401952%, 13.587835070508682% 84.23580924936823%, 11.450598992539824% 81.83608604135708%, 9.472177160256678% 79.39527299583517%, 7.986053461194437% 76.69362304073452%, 5.8944402520611066% 74.35618941715059%, 4.555870780978608% 71.10498346588466%, 3.051208932822198% 68.59398810478822%, 2.4374783192515794% 65.55076993674612%, 1.6317202245632438% 62.38206078082797%, 0.9536363026106963% 59.49589964749256%, 0.3548867321160954% 56.36497020624285%, 0.0924961983598243% 53.15100975490989%, 0.016851656880261974% 50.01527588628868%, 0.2238721172004441% 46.84872611600265%, 0.21842397666301788% 43.59498817787458%, 1.103053986550902% 40.50596438316711%, 1.6930420440204805% 37.41936891930863%, 2.128393149345595% 34.987058161527266%, 3.8716258936460926% 31.20635838950673%, 4.937946923074422% 28.764862236058118%, 6.078147626250296% 26.018756449737094%, 7.718775277176928% 23.153805848435212%, 9.53587571274804% 20.60576952670515%, 11.484819128917538% 18.140803254919632%, 13.558179566322753% 15.703433668056718%, 15.731304212581781% 13.473567282253889%, 18.336378917375143% 11.669394310718843%, 20.692223335882677% 9.56670702876738%, 23.552269202228942% 8.27067424727224%, 25.933256610745392% 5.824364808059279%, 28.725799311647187% 4.67381716725295%, 31.61752272151105% 3.284139707097063%, 34.67665236980506% 2.517463576394185%, 37.5633677782432% 1.593176031838923%, 40.58781466413279% 0.8525017308780292%, 43.80582509764811% 0.3806113389688051%, 46.96917913449024% -0.10316198862564752%, 50.201461658592606% -0.2687531319708936%, 52.7747094439456% -0.003917138718862734%, 56.337851409582626% 0.8535336496486516%, 59.25006423409721% 1.240940255456025%, 62.308781668704476% 1.637461703323492%, 65.38043634397384% 2.416834698948247%, 68.28724774081243% 3.448591258841245%, 71.28350690764354% 4.741264402509677%, 74.08445296304649% 6.222806737144537%, 76.9158055906233% 7.655707914550635%, 79.4298282027957% 9.528372421569966%, 81.97639497712069% 11.65246269760104%, 84.24224388866172% 13.612237643406408%, 86.8910345899589% 15.762818892211198%, 88.66010578319089% 18.13076655651277%, 90.50962425692184% 20.35783220479872%, 92.34169462857712% 23.057548169358878%, 93.79897456283851% 25.95399499416067%, 95.26640844432114% 28.666494977315605%, 96.45423627016048% 31.61789595721732%, 97.68573106386701% 34.62045149197918%, 98.32549493069783% 37.526691851731854%, 99.05109675764913% 40.86096804434711%, 99.91539593605457% 43.92575672923337%, 100.2663480546243% 47.25823864883509%);\n}\n10%   { clip-path: polygon(100.14881262530425% 49.61188271549224%, 99.75705203939418% 53.416872021061415%, 99.48612654468843% 56.07484375903209%, 99.3014080375065% 59.33259015505816%, 98.23339382222241% 62.425312245394764%, 97.43167096202154% 65.37590800886994%, 96.4525318179297% 68.47832264202759%, 95.22728137148285% 71.3046845178321%, 93.7827344891927% 74.08327185525641%, 92.19130425020849% 76.7445541906504%, 90.56530505298466% 79.37431090488788%, 88.38860106856507% 81.66086374878357%, 86.30420630849432% 84.00834030062917%, 84.35901989689347% 86.42411790291575%, 81.59077089953644% 88.58569757663003%, 79.47048564443239% 89.98744419153398%, 76.94753767975051% 92.19881612559608%, 73.8938560998402% 93.63176047977139%, 71.2143622882696% 95.4831664776881%, 68.19887022564767% 96.68000674131642%, 65.48720948543209% 97.4567052295564%, 62.38056962104465% 98.50295062899563%, 59.37755314671418% 99.10503819351628%, 56.259042333961695% 99.57870487709383%, 53.06376245042345% 99.80466946578798%, 49.86980188005686% 100.04131116593649%, 46.73145063927882% 100.02581598307192%, 43.651814876613166% 99.35601286249899%, 40.60498773063282% 99.25377387518645%, 37.58089646220385% 98.10180187850695%, 34.27201140861868% 97.91526008021037%, 31.55874139942075% 96.07921384698923%, 28.497937563799514% 95.21078837938504%, 25.81794181168204% 93.59925853444588%, 23.28435117274358% 92.30678159001837%, 20.595475990526555% 90.53391564486002%, 18.13130737148831% 88.55424765846928%, 15.772542138631582% 86.47339834229975%, 13.551934753475484% 84.25597397151247%, 11.489704057764925% 81.9092324437514%, 9.38282257180845% 79.31980667221555%, 7.575130789137418% 76.87692286673509%, 6.140286868803522% 74.0029517634802%, 5.014517133204489% 71.32319822311217%, 3.8277226564715816% 68.57164068579615%, 2.0747988524641467% 65.30247072557353%, 1.8646807445889735% 62.614998520752444%, 0.9959850958953964% 59.4186808569946%, 0.40721677874995044% 56.043093205658394%, 0.0811765198020245% 52.92315400007014%, -0.14457442614215116% 49.982240971782964%, 0.012091824407391441% 46.905710083049236%, 0.3743236329963509% 43.72644956609524%, 0.9021282322596526% 40.64015116323852%, 1.5064137617850213% 37.56208495405315%, 2.4512463679325602% 34.532140647087125%, 3.3653670032709173% 31.456615213523282%, 4.626749516902884% 28.87156768513887%, 5.964671513251628% 25.881514550494774%, 7.837848170612635% 23.628870145842%, 9.351604768425645% 21.002631407905707%, 11.209118504582841% 18.484162149840433%, 13.71171065930782% 15.967050813515064%, 15.811706099174488% 13.639448808412547%, 18.100789761948615% 11.569652202344866%, 20.467994705410792% 9.562685032733015%, 23.176628614995597% 7.768857647701578%, 25.926535225729694% 6.153445814646789%, 28.682004690860804% 4.754614640927405%, 31.522511013913366% 3.4368114119045594%, 34.58798765851284% 2.5173224956893905%, 37.381174442370025% 1.6362329067429022%, 40.786456079482655% 0.7082220927513945%, 43.59720090900995% 0.5589852830035129%, 47.111950429095586% -0.30764733020126694%, 49.514295435560804% -0.20642956371587395%, 53.48275437886057% 0.1389844352617176%, 56.56242444693735% 0.36184859099789785%, 59.515959243206815% 0.734159742240746%, 62.48173431874525% 1.3735356354358248%, 65.41919570965322% 2.4766243191398862%, 68.39146992020443% 3.546141944107075%, 71.31450692600097% 4.7753160028321675%, 74.05858610189699% 6.213250940945034%, 76.83648355032501% 7.760548701054419%, 79.43913864857034% 9.609892914449983%, 81.64431150881062% 11.46945595232407%, 84.42849155180278% 13.570885335198879%, 86.15050764866857% 15.496515803634413%, 88.58615338124935% 18.51456542521611%, 90.77947130927929% 21.10109440827328%, 92.54553473037163% 23.41852288214196%, 93.69377130987789% 25.938306862037727%, 95.0819979992892% 28.468143133321185%, 96.29770288632594% 31.419790312263743%, 97.6555203648942% 34.417823286309165%, 98.43658582898341% 37.61449811278765%, 99.11577261302679% 40.64525986998881%, 99.62589353934347% 43.72118308433927%, 99.87085207332072% 46.91773231366912%);\n}\n20%   { clip-path: polygon(100.24137638154116% 49.73084356358833%, 99.81572332160911% 52.96660292492259%, 99.25309191915827% 56.60636700151277%, 99.36639549260475% 59.14292684077527%, 98.31823420070653% 62.50963768107381%, 97.54184612960509% 65.60604332543704%, 96.41332746107929% 68.4868477752119%, 95.27622435281839% 71.24062461582442%, 93.81533400219318% 74.08768370508577%, 92.25968884835478% 76.75691207237581%, 90.4667109452158% 79.51218531319755%, 88.5934527279524% 81.73122210378973%, 86.53414023646087% 84.25170755075547%, 84.26913626839568% 86.18227570054788%, 81.52950506096342% 88.59483689539655%, 79.35894524030654% 90.34888659463256%, 77.17388223473604% 91.79054690502197%, 74.19711339639177% 94.13636254824726%, 71.24458627242066% 94.93039167981476%, 68.4292580437168% 96.70186495151168%, 65.27881518546704% 97.68752117807536%, 62.31116016431702% 98.60735955698183%, 59.39626742019449% 99.11325979423516%, 56.21553938454076% 99.65619779681384%, 53.13952597646566% 99.90133642141357%, 49.99905296705632% 100.02481426616166%, 46.95711291702987% 100.01359821252342%, 43.545966400075514% 99.57599909517765%, 40.61777899357074% 99.13909647432654%, 37.83976673060592% 98.58965389937262%, 34.81947679982731% 97.6251183680185%, 31.744838376466586% 96.78172463552517%, 28.462429839742633% 95.21958094624378%, 26.33978036948816% 93.88022169852808%, 22.924855128728286% 92.30625797289716%, 20.804698894587105% 90.54989341391894%, 18.153664406511968% 88.43583045643996%, 15.626045966811185% 86.59322674424735%, 13.593698214689256% 84.1677580737197%, 11.475019550727527% 81.91407184300517%, 9.549150281252636% 79.38926261462366%, 7.803442667577611% 76.84366479260392%, 6.148566894585959% 74.13776793876659%, 4.695534472167131% 71.17231191320928%, 3.645877590929393% 68.25301900713394%, 2.3492618316073486% 65.7072399595581%, 1.5850424724981027% 62.084470945173315%, 0.8811546078089876% 59.63629217248589%, 0.03353805028068124% 56.57972139455049%, 0.34610845617968156% 53.494554233084536%, -0.2933544333585729% 49.777047974954804%, 0.019174784524144034% 46.6495206142758%, 0.6048024044954663% 43.90341845207216%, 0.8813226501211341% 40.58763647846562%, 1.5986871330093204% 37.633416528530844%, 2.4805613487456144% 34.57295632708383%, 3.5111757055874406% 31.593772365766085%, 4.74466422912658% 28.666167466955176%, 6.305287104949277% 25.924799394775555%, 7.719046134254887% 23.088310200825056%, 9.744718699873387% 20.617331643408512%, 11.77790309558995% 18.252740831723287%, 13.678773276439589% 16.009872929017472%, 15.883769040137752% 13.626899218656854%, 17.79979182775025% 11.389812376416677%, 21.04435167260616% 9.278695643465314%, 23.08409771403333% 7.458226778419638%, 25.831576298110612% 6.1573309523010415%, 28.669306165353984% 4.805572535500398%, 31.40722056891243% 3.4519369651999194%, 34.56895063917171% 2.340230900348268%, 37.61213333238132% 1.5689705170463106%, 40.630934270713766% 0.8856374635655655%, 43.691927205643815% 0.3792987703572003%, 46.736991000381146% 0.06835655388535766%, 50.171798598735734% 0.134439624399811%, 53.31875237243386% -0.011409613545106168%, 56.24388986651896% 0.1495411647866723%, 59.65340899115539% 1.2168148215367935%, 62.1654778675281% 1.5316895440210447%, 65.46754888456425% 2.903814907552378%, 68.5840965425431% 3.6954382003260937%, 71.30547120694096% 4.873263674583707%, 74.19385131493442% 6.280361677382696%, 76.77810784318301% 7.629702024787283%, 79.28594631246511% 9.586800966422542%, 81.79318578616774% 11.473358313742404%, 84.17823864522938% 13.506425475766658%, 86.4484313710706% 15.77264470356559%, 88.55450927176362% 18.092083804720662%, 90.3698322434998% 20.61921318279183%, 92.15772648208964% 23.091957870293594%, 93.91216900966415% 26.097587520575622%, 95.33611393438457% 28.57347611577475%, 96.48347682995438% 31.780990691359005%, 97.94807624513771% 34.45866477015575%, 98.82907881069015% 37.20869395778352%, 98.72900354153307% 41.03331850836816%, 99.43980849669218% 43.72014782470231%, 100.17861453205774% 46.960206983818914%);\n}\n30%   { clip-path: polygon(99.56501367802257% 49.91770583403648%, 100.04550669340152% 52.90843490930017%, 99.6285104155694% 56.586207106943135%, 99.00450382747145% 59.599393092348606%, 98.20610180136333% 62.43611639045584%, 97.51465018590531% 65.2271706488422%, 96.45792603199395% 68.3916841613676%, 95.35951342905055% 71.3862928882185%, 93.84677654313488% 74.03446614232878%, 92.2155654357794% 76.79529701899376%, 90.46548994453109% 79.37272389726897%, 88.58779429745135% 81.94822901463515%, 86.458059797674% 84.31197129420006%, 84.19999534984224% 86.44058330506385%, 81.77282658416783% 88.34836264918079%, 79.47851735047469% 90.62187963974985%, 76.95940523838486% 92.40368326759041%, 74.30272033001336% 93.87908066062177%, 71.34299302510462% 95.06335186425173%, 68.49999281591214% 96.11253633243932%, 65.15829706195703% 97.71837038367586%, 62.44054909322859% 98.15924793044557%, 59.66176844465103% 98.91940350036494%, 55.97869667146628% 99.84444519652835%, 53.09966685484669% 99.70854514274113%, 50.05431202779928% 100.06159002326615%, 46.97237913684621% 99.79044020172253%, 43.723295916498756% 99.5858755034678%, 40.60932068633944% 99.11004997809165%, 37.54725385474087% 98.40991080958348%, 34.590310873171774% 97.59660460723373%, 31.69467653246823% 96.58694960106328%, 28.814638689749597% 95.29031923876015%, 25.844659421512716% 93.74107925815558%, 23.085470952157195% 92.35652069040326%, 20.47104936876211% 90.44113741801887%, 18.297000005215114% 88.73256652232011%, 15.438704151814003% 86.22423229347378%, 13.379468954981947% 84.45186838117702%, 11.12264406549943% 81.66508552373242%, 9.855108239196129% 79.15701395438595%, 7.60145492326706% 76.87408876683025%, 6.138337954377176% 74.03744148018616%, 4.875502117515751% 71.27899295372107%, 3.681250842390977% 68.53226902457908%, 2.3822898357033617% 65.51641044106624%, 1.6018299334936779% 62.494789493139876%, 0.8756270649522473% 59.37659560940682%, 0.37001041698737724% 56.290943815851584%, 0.1426526013372525% 53.14024768247324%, 0.0793265525990576% 49.971778711468765%, 0.2696426242127966% 46.86184211019671%, 0.49521654799390735% 43.96431428299725%, 1.0478797449858293% 40.41478454003845%, 1.2850762036273162% 37.84687676582638%, 2.158444536469438% 34.78386681844842%, 3.283969637684788% 31.58190362200104%, 4.633894513601026% 28.320977023819225%, 5.8395193320085825% 25.694134216036105%, 8.141350331546523% 23.472656943927547%, 9.632608269945505% 20.61316300751812%, 11.377212075085842% 18.156353135174562%, 13.72243725904201% 15.728623228740322%, 15.607966444204367% 13.545169209652215%, 18.13739998816267% 11.560603479318408%, 20.678504360086794% 9.478281391341865%, 23.215457528707702% 7.763616077105468%, 25.89201598585175% 6.16931474759831%, 28.77719469073379% 4.7446347397396735%, 31.67785326036438% 3.5760637070038817%, 34.47720275618913% 2.5423598317384846%, 37.53927121112321% 1.6215624120595409%, 40.84520009555472% 1.0926214489818535%, 44.0102486990177% 0.6665900112635463%, 46.8051566552397% 0.2116827549432283%, 49.91284794893109% -0.045146410532835635%, 52.86521350159145% 0.22715437406871453%, 56.254397258558015% 0.13427290243897638%, 59.259571753816466% 0.6191888200961235%, 62.32532698170405% 1.7517035521859647%, 65.73108137518938% 2.2984645823758676%, 68.47674039020842% 3.2903901259141066%, 71.1722736257884% 4.748144201292402%, 74.05654800227788% 6.186265020894195%, 76.82992866877314% 7.805273255961694%, 79.39660042788951% 9.573307849012915%, 81.89076924539572% 11.470485081476882%, 84.2252574853959% 13.567803250399033%, 86.32219374934041% 15.798668468683559%, 88.46219891313807% 18.22007484445224%, 90.48226383464618% 20.666166939809585%, 92.27787478607658% 23.35885354359119%, 93.67755257714839% 25.850584220639156%, 95.53017015825873% 28.49103438497113%, 96.31532306247661% 31.162658053494766%, 97.22634678519019% 34.550368797869844%, 98.45262156179469% 37.781739983354264%, 98.8821399914689% 40.30038613637698%, 99.7326562631365% 43.50676723458993%, 99.72579852040717% 47.12837892175839%);\n}\n40%   { clip-path: polygon(99.73178898883133% 49.880772039413245%, 100.23814873279179% 52.81462946229745%, 99.4377990684756% 56.41878991148362%, 99.30276014643793% 59.19754129079093%, 98.36705306015088% 62.31248569094224%, 97.53528407024902% 65.4509006961893%, 96.48882429441257% 68.4062276342339%, 95.19347163894426% 71.32663048107187%, 93.73749906999656% 74.21339157441187%, 92.2998300256571% 76.77845603812536%, 90.24864309765861% 79.23584113757174%, 88.60169540073944% 81.78150241571014%, 86.57227783335543% 84.23189269765447%, 84.25351980710228% 86.0664837159723%, 82.01130658001615% 88.51070040100667%, 79.31167117113988% 90.47105525568891%, 76.9555179285337% 92.35164007146639%, 74.04073597113428% 93.88053681859111%, 71.28896457825363% 95.24135262330097%, 68.42813333383815% 96.51731253938239%, 65.46054340297263% 97.52378461465847%, 62.51045757418093% 98.6251417147448%, 59.084719253240436% 98.90441295174816%, 56.23867017395503% 99.94532216694572%, 53.55369701149575% 100.06308800986658%, 49.62517115586698% 100.26627882868767%, 46.7652395122612% 100.05639219801314%, 43.53573580998571% 99.73725100871721%, 40.469786114631475% 99.19362636197963%, 37.51184563809219% 98.38673039115874%, 34.54915028125262% 97.55282581475768%, 31.602185952571002% 96.4403509962502%, 28.605606312308375% 95.07592454526593%, 25.683816831378852% 93.91807904330918%, 23.268213333781627% 92.50997854405898%, 20.314859954894825% 90.27103875913147%, 18.369642594404183% 88.2293634864869%, 16.080533324676807% 86.69794288605031%, 13.81025906107699% 83.9398249730684%, 11.323396951337449% 81.80074873278444%, 9.43403035940182% 79.45639817959942%, 7.73956172685522% 76.72347570035078%, 6.1846659978068175% 74.08768370508577%, 4.837462210839612% 71.26477448318414%, 3.6180796736250698% 68.5028571450157%, 2.52004543752862% 65.30805209070292%, 1.5946950948571896% 62.492769673429414%, 1.0344589068067698% 59.73385577113102%, -0.04682632627106842% 56.190387232698065%, -0.012751981981481253% 53.17886869189655%, -0.06837735932675254% 50.20571113853957%, 0.32359495846334596% 46.73446885142358%, 0.4704536362313132% 43.692689698293535%, 0.82504975881303% 40.68154544007101%, 1.5708419435684462% 37.56550564175725%, 2.4779441744693727% 34.60540713859473%, 3.514426820344138% 31.53910743637987%, 4.7154646901683055% 28.516010343669183%, 6.153635025575581% 25.850519947756187%, 7.499006070367888% 22.852142749671398%, 9.289736207938288% 21.007189429776332%, 11.399038189749797% 18.057564607995857%, 13.702888666934623% 15.779824227935762%, 15.988022739964784% 13.654505364353351%, 18.06927621620657% 11.610169736110537%, 20.61698000237528% 9.576438356181956%, 23.208660251050183% 7.783603724899237%, 25.922881568648855% 6.237502676392133%, 28.600730009750233% 4.743046518815025%, 31.37186584189083% 3.606621385721614%, 34.73283824390866% 2.3359408027933917%, 37.2178890216132% 1.9434149512600674%, 41.05769959805933% 0.6607249809462088%, 44.11173457173201% 0.38110400893757024%, 46.55320099505182% 0.18310943807666885%, 49.99622689664618% 0.16162109671518432%, 53.13063999029271% 0.0856426207780503%, 56.19523815001104% 0.37989093754421344%, 59.369065729286255% 0.8856374635655726%, 62.511387135155466% 1.63705522564264%, 65.34377558693365% 2.4246489800839304%, 68.44685528322421% 3.6393638527678274%, 71.28715030541841% 4.738127625558923%, 73.8186293482964% 6.518163492268725%, 76.9218911366227% 7.980019621108312%, 79.05153485380094% 9.601122367327353%, 82.18799502967079% 11.28743051467007%, 84.23380018341683% 13.427607775373817%, 86.45569710871005% 15.794987597202615%, 88.60736272036216% 18.2070348986132%, 90.45084971874739% 20.61073738537637%, 92.22869105271289% 23.22552268000947%, 93.96031172642363% 25.971926377909355%, 95.30532240732487% 28.55847222162181%, 96.75242889194394% 31.661044099130535%, 97.65866388120368% 34.273216049175566%, 98.50395391006418% 37.80290963285223%, 98.78027792766433% 40.82796687116929%, 99.63603977949269% 43.58107592875366%, 99.98169250685453% 46.712298536357494%);\n}\n50%   { clip-path: polygon(99.77214773283058% 50.205708879313896%, 99.84477289780257% 53.48632532069796%, 99.87414095749051% 56.59293229441468%, 99.42800414770234% 59.369869643009125%, 98.40561177472084% 62.395396664745974%, 97.7366857957808% 65.2517834261062%, 96.58090103836932% 68.44537887902126%, 95.18456265288333% 71.37734735935689%, 93.85450320782967% 74.0330109902406%, 92.21639627510075% 76.79133974894984%, 90.43451930375198% 79.39637885530573%, 88.58375950222262% 81.8839242276713%, 86.39094460344019% 84.36217636290937%, 84.36426989292632% 86.60174113708649%, 81.92401255100877% 88.5539957895585%, 79.67413268044463% 90.23298816951089%, 77.16758660672667% 92.58004121781146%, 74.48301211991416% 93.39253849468935%, 71.0722780609654% 94.96424114873817%, 68.82494465147444% 96.34271647028731%, 65.74138313078946% 97.1786078925975%, 62.543968655075915% 98.17851994435136%, 59.38130085347297% 99.21291114843388%, 56.437829093754196% 99.69252891186466%, 53.2996445429141% 99.85276126127589%, 49.94588308552485% 99.92244665466383%, 46.85536721777425% 99.93369948641539%, 43.733338321784785% 99.60573506572389%, 40.58941386906112% 99.10364457903815%, 37.62931036245097% 98.42370684356173%, 34.51611178188095% 97.536361717373%, 31.381667200873597% 96.2672544630143%, 28.9718928972282% 95.50265561109532%, 25.895808548245828% 93.91212702945172%, 22.88850724680943% 92.55608857007854%, 20.618325293209153% 90.09948499655569%, 18.27484276895361% 88.03789405337145%, 16.074369184094476% 86.2722899072315%, 13.721287056274702% 84.49945887043731%, 11.424954539853516% 82.07316294969438%, 9.646945082451431% 79.13215919866914%, 7.5810381442448325% 76.90609510145451%, 6.038243523282664% 74.2246831986489%, 4.717604325909945% 71.24748832625339%, 3.5031119843182155% 68.40868898449654%, 2.447174185242318% 65.45084971874735%, 1.624961837074681% 62.41028492951133%, 0.9388156955004615% 59.442438308774896%, 0.5340719006677533% 56.14927752665967%, 0.061570873876044596% 53.28156509638768%, -0.014091679684293701% 49.84193945083166%, 0.1382958796120371% 47.03589816078264%, 0.2787891682873128% 43.74798189597431%, 1.2483778963385819% 40.92684094423791%, 1.1883711138482538% 37.275700467362725%, 2.119074091021404% 34.85403410715731%, 3.2085546377330005% 31.386193157859843%, 4.7597204712893655% 28.41165191767878%, 6.352784093891641% 26.04549072020932%, 7.729730295382815% 23.392028097010787%, 9.708879183924253% 20.604621210046353%, 11.470022961236143% 18.05529416135014%, 13.52951578617344% 15.822488631861571%, 15.772644703565568% 13.551568628929424%, 18.16795639712448% 11.4914767704518%, 20.653801259095673% 9.524716548105332%, 23.054277261488572% 7.73097978692602%, 25.796269410056112% 5.991671746457868%, 28.80789181087921% 4.8215141258757175%, 31.718175574140208% 3.516966470989668%, 34.84949462476045% 2.1625855678135273%, 37.176978175807896% 1.9477948428797651%, 40.588959790369906% 1.1601511103077222%, 43.979946680078555% 0.4473472472682677%, 46.79023266357849% -0.1118619467452156%, 49.94005117648756% -0.31433555824627346%, 53.262841419488936% 0.03368093026618521%, 56.34120586630567% 0.5258156708237812%, 59.23851683404125% 1.0447613676843697%, 62.376977753188655% 1.472937282182083%, 65.46356647152341% 2.4471261297012066%, 68.40622763423391% 3.5111757055874406%, 71.32909295300001% 4.742196991146818%, 74.17834691113649% 6.265013017458595%, 76.71853873468218% 7.819142202073987%, 79.45325672911918% 9.352685540944782%, 82.12753809435465% 11.261894913562482%, 84.00245447510261% 13.661749294347274%, 86.58972699275937% 15.780490948720107%, 88.62772062287914% 18.533330923298834%, 90.36044342068969% 20.306141400100493%, 92.1806850062741% 23.443494446920063%, 93.65771598071774% 25.56265055499728%, 95.53188598196783% 28.566401813314975%, 96.58430495143799% 31.862309509274194%, 97.5984370791546% 34.445094566543354%, 98.27405615468922% 37.6202916047321%, 99.09177997307566% 40.70279204401514%, 99.55562439093413% 43.76324402649736%, 99.90133642141357% 46.86047402353434%);\n}\n60%   { clip-path: polygon(100.18553676959687% 50.00130594498669%, 99.77202551267123% 53.5172610948233%, 99.50109269274529% 56.2444806746654%, 99.21957923467166% 59.1970213017485%, 98.55804035712892% 62.51885341322284%, 97.52869774668245% 65.42544726812393%, 96.49086750377828% 68.36551236994768%, 95.25312596077337% 71.17837770589611%, 93.93626192884156% 74.26143429213593%, 92.5188551685649% 76.6561308739018%, 90.7880755043676% 79.11057812652906%, 88.06163303922253% 81.4401931975644%, 86.79289498557284% 84.59856844539844%, 84.3546133883332% 86.51187558543569%, 81.70017421165278% 88.42647999930975%, 79.3993180332147% 90.42472642204442%, 76.76443252009304% 92.21476615478944%, 74.05002824700462% 93.85110420755669%, 71.18589934534455% 95.36636183679164%, 68.3271118817229% 96.5859633963487%, 65.3048161108002% 97.78176722619202%, 62.81478706565228% 98.47481195004602%, 59.118122936294654% 98.67536714441503%, 56.24579099883499% 99.80900981517571%, 53.1134119018374% 99.88511834339985%, 50.17912551041723% 100.17580397505056%, 46.95504831908858% 99.96153996865759%, 43.725563134731296% 99.60825672511989%, 40.63804854535469% 99.07558778606403%, 37.457508645147314% 98.31943899896088%, 34.55485978320661% 97.69207745489769%, 31.595590877789046% 96.19852402171779%, 28.689860790810343% 95.24819595663217%, 25.593202543603347% 93.45745204268572%, 23.195827436071394% 92.34048306436962%, 20.363578611971192% 90.2817021790308%, 17.975419666592284% 88.5136727413986%, 15.764510072760338% 86.35818200056237%, 13.53267534479357% 84.25861550210097%, 11.433285244698585% 81.84944192364034%, 9.64682461585769% 79.26904599314427%, 7.757202695349241% 76.64569207837177%, 6.312301363520428% 74.02766503367813%, 5.06884916120848% 70.97927971004195%, 3.563177831598464% 68.01072119661747%, 2.353412249371405% 65.57074483886608%, 1.512551123912273% 62.54470832788403%, 0.7475003920264695% 59.55699903704983%, 0.3469367395634332% 56.13594458750694%, 0.08612687990624389% 53.10477681839425%, 0.023344197190741323% 49.99435777756977%, -0.004685813881356221% 46.7400219459902%, 0.18032999753960194% 43.822747929504956%, 0.6342965735432033% 40.81037652080455%, 1.8083462942942505% 37.49639305539175%, 2.4459173465723745% 34.28078563501662%, 3.124292244360808% 31.41138405289808%, 4.657348909208224% 28.938308231282846%, 6.32867750421254% 25.921769350943276%, 7.91738062794912% 23.09311778784924%, 9.578941964126226% 20.56624720797382%, 11.445311580421096% 18.147392345641325%, 13.41899697287426% 15.886978182366692%, 15.946946568603819% 13.363191027035228%, 18.433470752853562% 11.258814113467363%, 20.472228846200196% 9.336665805157189%, 23.41755126856594% 7.777008108994227%, 26.224914019554923% 5.951987258550668%, 28.93220673996726% 4.470808898548855%, 31.729536796452365% 3.4094908604026295%, 34.67911896074529% 2.4706462503439544%, 37.534044590200665% 1.5684302939363615%, 40.64378939928438% 0.8625969617453936%, 43.602985162073615% 0.3899020776498318%, 46.73851659517822% -0.05959821905543944%, 49.789829075376744% 0.21412720467183627%, 53.237517741170095% -0.1654374110547287%, 56.524830190187735% 0.5565691302121905%, 59.623785330953126% 0.5567742055268035%, 62.3571960203182% 1.3756694709458206%, 65.39051643758849% 2.2670258904437763%, 68.30162347719708% 3.5597431198913%, 71.3321034538432% 4.782100423643636%, 74.077583961889% 6.220766951801023%, 76.7531994146864% 7.904319493165783%, 79.19598982585974% 9.628284892278034%, 82.0371502672468% 11.244305234164596%, 84.30962278911966% 13.681800124795787%, 86.5681349841287% 15.664462073219703%, 88.35860121572772% 17.799663247339787%, 90.2827168829261% 20.635521958154513%, 92.27095588349718% 23.22202629816755%, 93.70056953025019% 25.806486976700285%, 95.25066071842699% 28.67540042305818%, 96.45769811670324% 31.614806698976118%, 97.51021838143295% 34.51399408766909%, 98.50459270204611% 37.772081577542146%, 99.05103371271429% 40.39496248303828%, 99.2967471569379% 43.484264788564175%, 100.19295714154207% 46.46444108022244%);\n}\n70%   { clip-path: polygon(99.58522347408123% 49.67151002607422%, 99.48365512840915% 52.8989794039363%, 99.28796784123945% 56.49535027791925%, 99.06526079846147% 59.13522768210759%, 98.2620715381231% 62.24404298402796%, 97.54821349964396% 65.45473837157438%, 96.50783023728548% 68.40515862290168%, 95.26805500998357% 71.2760700390098%, 93.90763529077883% 74.0574309987913%, 92.31192560347105% 76.68221473260692%, 90.4498402064527% 79.1276688240538%, 88.33089103848147% 81.80034256657262%, 86.66327124500152% 84.3373410715706%, 84.11766749234022% 86.32097859427816%, 81.53784671718132% 88.22957024491302%, 79.68556622930585% 90.61752643409004%, 76.71260540874768% 92.12959841281359%, 74.05481703451615% 93.73787136755384%, 71.20077349687138% 95.13296332826478%, 68.40444114905912% 96.52639615104896%, 65.41689654294002% 97.51673589510885%, 62.449547845251196% 98.52367542950549%, 59.187568279112625% 99.0236953745421%, 56.45997780189566% 99.52470220529126%, 53.18946797100526% 99.86097996457609%, 49.58501874182678% 99.85348539544397%, 46.91055859817226% 100.04147903944894%, 43.35656056673216% 99.81001194561165%, 40.37794126587696% 98.99373078847371%, 37.76443707719033% 98.67773944192086%, 34.43615175493435% 97.65729267620007%, 31.63954541151986% 96.49727261987525%, 28.676214665355793% 95.23836757638676%, 25.887468854752896% 93.83443286995639%, 23.323520898372113% 92.278494544813%, 20.525835038697338% 90.59162788287222%, 18.219364308319363% 88.68459869594369%, 15.740713548353208% 86.22656527824577%, 13.295271935819311% 84.44781180955131%, 11.477292873244904% 82.09368717295212%, 9.603075733446902% 79.0000363658709%, 7.703337586007324% 76.70759846305968%, 6.142363782374229% 73.96245305482259%, 4.819112370045753% 71.43884926347333%, 3.427748012525725% 68.37438372281939%, 2.4213529335123924% 65.45483223503919%, 1.5646255257179162% 62.458489887595384%, 0.9546563797226646% 59.290719976574415%, 0.27173125511839724% 56.335219292169846%, -0.09078818425832827% 53.34468693259433%, 0.07737878770357576% 50.06206111076289%, 0.4278635625976505% 46.83164555020009%, 0.36843584900566717% 43.468404432473136%, 0.9864081740211743% 40.84240213536327%, 1.2932093952852188% 37.781765668762056%, 2.4867994802953146% 34.37353688808586%, 3.579922147488013% 31.615748692839677%, 4.6629564536070784% 28.604614874675818%, 6.204383048011435% 25.873901539518055%, 7.751338188596739% 23.23605348034069%, 9.4831830141668% 20.50108361684853%, 11.437640718363506% 18.076542242883097%, 13.460023606768052% 15.984315097748478%, 15.63656749129442% 13.803988963475252%, 17.848271995351652% 11.866265305581473%, 20.946740575151562% 9.514617655907918%, 23.222119269614073% 8.12850041901494%, 26.022338013764735% 6.383885837463623%, 28.873310091492666% 4.669270929098496%, 31.54359904528916% 3.383606320151336%, 34.52749368749274% 2.522474895883926%, 37.55963817743381% 1.599258195524727%, 40.651345536907584% 0.9135439617079628%, 43.73044781903481% 0.42902388793377194%, 46.852627330045735% 0.22924827894877728%, 50.19800830913404% 0.2059184255610627%, 53.48385821087261% 0.2608110071142071%, 56.07278201962163% 0.7737502437117745%, 59.127999745540826% 0.9078061246444789%, 62.65593436372304% 1.1744801102756495%, 65.62544395018139% 2.2551308207502165%, 68.21307830623215% 3.4920549289820983%, 71.0992068334438% 4.821394188965828%, 73.98807729361972% 6.2587907673088%, 76.77986928075126% 7.766164940773827%, 79.36011024752088% 9.546029246171113%, 81.9863071222741% 11.478494433957676%, 84.04706488571358% 13.366556156802366%, 86.39741631268943% 15.528535915328309%, 88.6933875862333% 18.044285083092596%, 90.68213841932284% 20.456844872812336%, 91.73953367381502% 23.52557558699495%, 94.03302923753101% 25.566562628169674%, 95.19781944039576% 28.785089965640292%, 96.47181478482733% 31.55808926202109%, 97.39431482980069% 34.432832976808534%, 98.5328861997846% 37.487917475332615%, 99.07961558546319% 40.646016626284634%, 99.57537437291984% 43.75428340704901%, 99.83285026969263% 46.75845795046321%);\n}\n80%   { clip-path: polygon(100.21144185602309% 50.14209526171082%, 100.01884207853416% 53.47856374960882%, 99.67685312571814% 56.46868893867706%, 99.12515061811246% 59.25905891192256%, 98.28262360509336% 62.31475272569934%, 97.59948746544497% 65.33730769858961%, 96.45395480444458% 68.41662354322743%, 95.27634116750593% 71.299597377101%, 93.77623966454017% 74.02761718276673%, 92.4072335937111% 76.91118195056679%, 90.33510335165431% 79.35347323850839%, 88.67680581922816% 82.12642372692702%, 86.39078602544595% 84.43552008560906%, 84.38729690662424% 86.00288332654522%, 82.00296689906062% 88.91168492733135%, 79.36125912704105% 90.27082717287433%, 76.58713187464821% 91.9609981029498%, 74.1214038662151% 93.9636986490788%, 71.3302929034132% 95.30472424136396%, 68.41006916187712% 96.46644579927073%, 65.41265606854992% 97.53532374014911%, 62.51465704709473% 98.3211115957915%, 59.2157208956954% 99.19342450521049%, 56.103033011584536% 99.51701672278215%, 52.92631671467906% 99.61548296243068%, 50.05644921008665% 99.92325240186848%, 46.50708641271451% 99.54246274557312%, 43.63126306737799% 99.62266485959238%, 40.73200149552872% 99.29894142297749%, 37.54948578113205% 98.60106680180058%, 34.58179538921296% 97.41655530911244%, 31.669777624504885% 96.47820655737836%, 28.68106681831001% 95.2499999088724%, 25.927396546955713% 93.77759484611266%, 23.209576526457344% 92.1039268908346%, 20.468296068485405% 90.53279989634771%, 18.143635828572837% 88.71399678120963%, 15.57874306030627% 86.49419368970518%, 13.413749457554811% 83.96653789377746%, 11.95116400619607% 81.97715297970535%, 9.500939254188278% 78.97343788937019%, 7.720924883164239% 76.89526600585862%, 6.26440673241122% 74.23109125585768%, 4.61685761259537% 71.1369145506795%, 3.5719589350933294% 68.31432788430384%, 2.4556218531661447% 65.42064520819528%, 1.5408018959132435% 62.40544249587851%, 0.9156299972066904% 59.375875822899566%, 0.4404569497930492% 56.35637175576566%, 0.28177973598994843% 53.2051640937029%, -0.21746299225602347% 50.00314868176385%, 0.476474790335287% 47.17792349543903%, 0.6751262922641896% 43.34585725591469%, 0.9718781018183864% 40.885509901595604%, 1.426051936360191% 37.2609715529615%, 2.527908091726517% 34.685184988996824%, 3.5426345302895377% 31.73382996332458%, 4.783599260763706% 28.616137664982325%, 6.193442525569268% 25.905943062585905%, 7.808308567719717% 23.210278693592056%, 9.63308068764667% 20.630584103686044%, 11.533687440485943% 18.019764682571378%, 13.506762220469755% 15.915971941669623%, 16.07818093995938% 13.877591695734461%, 18.22764723629572% 11.1704912159804%, 20.37435179895427% 9.769435800763144%, 23.503754901364232% 7.378595274162304%, 26.10245636740316% 6.398152508639642%, 28.659649927736808% 4.934816197677996%, 31.431316406011145% 3.4877031071379974%, 34.52486267301776% 2.411661058516249%, 37.56392370035399% 1.5813505955165101%, 40.619992595774676% 0.9045695426893813%, 43.79780154666462% 0.35494050878074324%, 46.76100518162985% -0.056181657199455365%, 50.22259898922784% -0.22035872670456907%, 53.15674274366433% 0.14130369679519766%, 56.24100428009442% 0.720056961897346%, 59.23376983526128% 0.866030488293261%, 62.55498119233585% 1.7998985054154226%, 65.6954384488868% 2.1161273536792002%, 68.4447111266804% 3.4908881842140675%, 71.17805692373344% 4.623289097983295%, 74.02846441381645% 6.1465550072353965%, 76.78693431558855% 7.745650707095803%, 79.41368500005363% 9.526781693322048%, 81.91373165532309% 11.53835292964387%, 84.38714716534214% 13.514807431813555%, 86.32699968627358% 15.803674201101543%, 88.74490921309676% 18.347450358683496%, 90.86698682567955% 20.841002241585976%, 91.78139742426767% 22.746291150240676%, 93.69763719409308% 26.23515916570219%, 94.93985431193222% 28.544754779059787%, 96.24204155529293% 31.693135319743973%, 97.68513443956897% 34.595634151609175%, 98.39132094721478% 37.61073507158648%, 99.11420581846178% 40.62568995732751%, 99.61810631897713% 43.74760725568251%, 99.99718960125092% 46.77399427886359%);\n}\n90%   { clip-path: polygon(99.80024199660993% 49.623827020423256%, 99.78865083960383% 53.53346849734378%, 99.61182719594885% 56.07653707032843%, 99.04260827130872% 59.29237935632404%, 98.42091991757246% 62.41155966749478%, 97.55282581475768% 65.45084971874736%, 96.42976055194323% 68.46832483581144%, 95.25464581576128% 71.37482740277095%, 94.07486052785052% 73.99816916388595%, 92.23680320746479% 76.63149426101347%, 90.85491260695046% 79.11788476112642%, 88.79752436366424% 81.53333900036075%, 86.57187341923559% 84.40414194011383%, 84.37994784188972% 86.34711544764934%, 81.82025408328983% 88.60948495937298%, 79.38926261462365% 90.45084971874738%, 76.82176453984485% 92.2777994291955%, 73.94845723541764% 93.87269991081469%, 71.3891358695974% 95.1635799570256%, 68.62913328914857% 96.13696287372338%, 65.63965010974395% 97.38855635753671%, 62.494359686375404% 98.13470900388604%, 59.6658531794634% 99.40327851447178%, 56.419490128002515% 99.78818054086425%, 53.0525108965326% 99.82497648129089%, 49.99999999999999% 100%, 46.885854924391474% 99.89383459006179%, 43.59872194676948% 99.44128114369971%, 40.813139872547055% 99.40659229529227%, 37.53782326816406% 98.6569737096027%, 34.95273134571561% 97.47236970914489%, 31.240948871086992% 96.6909824254198%, 28.524563315723174% 95.45740457200414%, 26.00115536476558% 93.69859245552838%, 23.245947990170322% 92.22311672435562%, 20.61073738537635% 90.45084971874738%, 18.077847849862223% 88.4492716788311%, 15.598370983281885% 86.54560080320672%, 13.645391229134594% 84.28844454133474%, 11.480954519196583% 81.76419143772674%, 9.172233723873003% 78.94227454601818%, 7.418252248015443% 76.84631769905954%, 6.150834324058242% 73.79986171330908%, 4.56615977633216% 71.26591383854444%, 3.5027998117398496% 68.43387402449929%, 2.447174185242318% 65.45084971874735%, 1.6367058625098243% 62.42858177180588%, 1.0598362943191595% 59.43104560438913%, 0.20506422811943598% 56.5290678654681%, 0.20510740198964827% 53.27156341630692%, 0.16098113426672178% 49.76008060662237%, -0.04743572857269135% 46.60557769187108%, 0.2507783563293521% 43.80039382884756%, 1.0600728499942191% 40.762726656479096%, 1.657347543377907% 37.532779983954654%, 2.447174185242325% 34.549150281252615%, 3.5693657671926067% 31.63464516430766%, 4.6454872093856885% 28.73794482431395%, 6.276380380409531% 25.854126257941882%, 8.122049500204213% 22.88565625107198%, 9.877622314847224% 20.217645688092386%, 11.830583593039455% 18.007361694702627%, 13.31497524197578% 15.539623494570176%, 15.736167778406017% 13.544731692990268%, 18.221942328004737% 11.44171692705579%, 20.61073738537634% 9.549150281252636%, 23.271323190776528% 7.842572730592765%, 26.084609622112286% 6.29308335984953%, 28.492086130366477% 4.661446388868113%, 31.898991308870304% 3.6317542873240085%, 34.83809423449425% 2.9330734636964637%, 37.320790620269506% 1.839284392620311%, 40.4937112866013% 0.5884440962486439%, 43.5762535883901% 0.5247744914342325%, 46.8274430990807% 0.07020803187173227%, 49.99999999999999% 0%, 53.1765611677737% 0.133838224737208%, 56.32432424394698% 0.4733332484640663%, 59.50049008584549% 1.1070251954980714%, 62.81484157430258% 1.2314411949031432%, 65.71281370170124% 2.242927379149272%, 68.51175466915228% 3.135146398136046%, 71.3828397520268% 4.600793194519326%, 73.95213681771376% 6.128734872538314%, 76.78579070086981% 7.709076080188102%, 79.38926261462369% 9.54915028125265%, 81.78677232393191% 11.457631583186812%, 84.07955214931225% 13.662449363896522%, 86.5244401163524% 15.72495259911159%, 88.13106868927399% 17.950247329469576%, 90.32002444966061% 20.987563071995993%, 92.1746176913994% 23.09019690497024%, 94.0701824656651% 26.030124137586935%, 95.08135307529052% 28.82449955728899%, 96.43077454154319% 31.652818090963983%, 97.55282581475768% 34.549150281252665%, 98.39578841735144% 37.652247584732%, 99.09148650233173% 40.6887037709254%, 99.7087817805164% 43.7208153711062%, 100.10894627276971% 47.22768157948261%);\n}\n100%  { clip-path: polygon(100.0013525494543% 50.420606904602806%, 99.51922603702278% 52.876548823476035%, 99.295858234221% 56.03891721038508%, 99.08589602372187% 59.17439529868828%, 98.3102376357907% 62.472592085493694%, 97.516315430315% 65.47356781257433%, 96.51783111659414% 68.39371982924972%, 95.35884450971787% 71.24026043778632%, 93.77802305727869% 74.06462799428046%, 92.06198742366574% 76.73280402652694%, 90.84801355979508% 79.24491985609701%, 88.87541426277298% 81.90965211388628%, 86.17991225505547% 84.45690151374524%, 84.25330559602898% 86.57786478435672%, 82.09577037682193% 88.63200700898797%, 79.44316799217286% 90.42582267285187%, 76.80037236972116% 92.18966110771579%, 74.10320445141558% 93.83981638634584%, 71.24545935026752% 95.16544499204086%, 68.23033039636283% 96.40539764865187%, 65.59293211736207% 97.75146737842026%, 62.395419939229654% 98.0977848501953%, 59.474864443386764% 99.4178610797512%, 56.63972151125929% 99.22257596716138%, 53.23392319017987% 99.94761442926317%, 49.88367221765294% 99.97915581390349%, 46.73934612334784% 99.78771071405625%, 43.693677315768724% 99.64221731196672%, 40.618678717709436% 99.15668121976073%, 37.48364243132577% 98.50567933434375%, 34.38982797735198% 97.53225227382767%, 31.880142452497616% 96.75360099031649%, 28.513311883735323% 95.45593192136447%, 25.64345508781172% 93.46000804862659%, 23.093717866485267% 92.25185760888631%, 20.623534310225622% 90.49262058169495%, 18.073863749011036% 88.57291233482432%, 15.872392745494512% 86.4989132401952%, 13.587835070508682% 84.23580924936823%, 11.450598992539824% 81.83608604135708%, 9.472177160256678% 79.39527299583517%, 7.986053461194437% 76.69362304073452%, 5.8944402520611066% 74.35618941715059%, 4.555870780978608% 71.10498346588466%, 3.051208932822198% 68.59398810478822%, 2.4374783192515794% 65.55076993674612%, 1.6317202245632438% 62.38206078082797%, 0.9536363026106963% 59.49589964749256%, 0.3548867321160954% 56.36497020624285%, 0.0924961983598243% 53.15100975490989%, 0.016851656880261974% 50.01527588628868%, 0.2238721172004441% 46.84872611600265%, 0.21842397666301788% 43.59498817787458%, 1.103053986550902% 40.50596438316711%, 1.6930420440204805% 37.41936891930863%, 2.128393149345595% 34.987058161527266%, 3.8716258936460926% 31.20635838950673%, 4.937946923074422% 28.764862236058118%, 6.078147626250296% 26.018756449737094%, 7.718775277176928% 23.153805848435212%, 9.53587571274804% 20.60576952670515%, 11.484819128917538% 18.140803254919632%, 13.558179566322753% 15.703433668056718%, 15.731304212581781% 13.473567282253889%, 18.336378917375143% 11.669394310718843%, 20.692223335882677% 9.56670702876738%, 23.552269202228942% 8.27067424727224%, 25.933256610745392% 5.824364808059279%, 28.725799311647187% 4.67381716725295%, 31.61752272151105% 3.284139707097063%, 34.67665236980506% 2.517463576394185%, 37.5633677782432% 1.593176031838923%, 40.58781466413279% 0.8525017308780292%, 43.80582509764811% 0.3806113389688051%, 46.96917913449024% -0.10316198862564752%, 50.201461658592606% -0.2687531319708936%, 52.7747094439456% -0.003917138718862734%, 56.337851409582626% 0.8535336496486516%, 59.25006423409721% 1.240940255456025%, 62.308781668704476% 1.637461703323492%, 65.38043634397384% 2.416834698948247%, 68.28724774081243% 3.448591258841245%, 71.28350690764354% 4.741264402509677%, 74.08445296304649% 6.222806737144537%, 76.9158055906233% 7.655707914550635%, 79.4298282027957% 9.528372421569966%, 81.97639497712069% 11.65246269760104%, 84.24224388866172% 13.612237643406408%, 86.8910345899589% 15.762818892211198%, 88.66010578319089% 18.13076655651277%, 90.50962425692184% 20.35783220479872%, 92.34169462857712% 23.057548169358878%, 93.79897456283851% 25.95399499416067%, 95.26640844432114% 28.666494977315605%, 96.45423627016048% 31.61789595721732%, 97.68573106386701% 34.62045149197918%, 98.32549493069783% 37.526691851731854%, 99.05109675764913% 40.86096804434711%, 99.91539593605457% 43.92575672923337%, 100.2663480546243% 47.25823864883509%);\n}\n}\n@keyframes outer-squish-data-v-662b4a84 {\n0%    { clip-path: polygon(99.59031797501751% 49.67900713055795%, 100.08868524661746% 52.93826113421749%, 99.4147361062575% 56.47892112295856%, 98.84025455665385% 59.336629753982834%, 98.32211611360147% 62.568770569323384%, 97.36595369996189% 65.28374245491585%, 96.51898035772476% 68.37010038825434%, 95.21093153789693% 71.26206922388839%, 93.81533400219318% 74.08768370508577%, 92.21064306095084% 76.83974489097129%, 90.5586249740036% 79.46008553224499%, 88.37622886481859% 81.72569527225318%, 86.43418744000022% 84.0052246053499%, 84.2170783419395% 86.6241608914723%, 82.13450223666706% 88.69811384154026%, 79.02419203664365% 90.5878852557836%, 76.53141682744236% 92.69204973565233%, 73.78371749913428% 94.23273843040877%, 71.3409944531755% 95.17102224614601%, 68.4868326598759% 96.50795278499741%, 65.38487521334135% 97.722431967501%, 62.27821583516336% 98.54253682222846%, 59.29396879182936% 99.01485442651239%, 56.21693734075439% 99.56734234599476%, 53.13952597646566% 99.90133642141357%, 50.00505524250351% 99.95811878275924%, 46.74322568669889% 99.84712293919208%, 43.86456680985741% 99.72837510590034%, 40.47302013195056% 99.27696519480133%, 37.79648072849785% 98.61506798017719%, 34.846385171229635% 97.47315538283111%, 31.58763414515611% 96.7327056550044%, 29.017678844407488% 95.41320397615509%, 25.871544549417198% 93.83382630561195%, 23.348732212626793% 91.86273746598295%, 20.64894524066441% 90.32851005060256%, 18.146326977739825% 88.47039192298112%, 15.899081990837313% 86.28553043052574%, 13.542734555659484% 84.1315364038326%, 11.436923553996849% 81.86455248716389%, 9.549150281252636% 79.38926261462366%, 7.777747465826676% 76.81556547941457%, 6.076817467642993% 74.15294844823917%, 4.714716221456507% 71.28448322657816%, 3.5549254274437296% 68.2987657427296%, 2.4073837405797978% 65.1847677451542%, 1.4325490504346645% 62.32211964451311%, 0.8209444559148533% 59.54265484975898%, 0.7327975056975196% 56.10793262569155%, 0.2479661827547921% 52.71440672521769%, -0.23970798934662668% 49.890603464714886%, 0.3265125154595697% 46.759530265778096%, 0.25782744039075023% 43.923081575570706%, 0.8875772976004301% 40.544895583426374%, 1.5493382173052335% 37.594977715597786%, 2.41916358880596% 34.55116601142573%, 3.5111757055874406% 31.593772365766085%, 4.773703271782176% 28.699954122503076%, 6.169326579471139% 25.9323688636158%, 7.743812461275693% 23.234288909260744%, 9.582231895199689% 20.69646684595838%, 11.75078068624396% 18.141174948991704%, 13.6391652760682% 15.472116058613073%, 15.535053499833232% 13.510664753434218%, 17.705668494308803% 11.050428728316456%, 20.210110730106795% 9.426058372160234%, 23.248536193097635% 7.426677952499877%, 25.97845555074677% 6.081227559603957%, 28.838997299293283% 4.69024340458983%, 31.73474147035244% 3.688064272755475%, 34.47701141098514% 2.414651434261441%, 37.547805956071734% 1.5625325557067253%, 40.630934270713766% 0.8856374635655655%, 43.675676056891156% 0.38116969883199037%, 46.97570925101736% 0.08154315734526585%, 49.90875383543751% -0.010370343603985088%, 53.01375499196154% -0.07577922632857148%, 56.13557827365206% 0.4416892952556618%, 59.70742667952991% 1.0160931183502697%, 62.82007224242433% 1.6120484329971367%, 65.1363570552551% 2.3981768799225383%, 68.08449364453227% 3.274756785685797%, 71.11278791226543% 4.669237646458303%, 73.96657320803158% 6.231396690140457%, 76.78716233521152% 7.731804102420846%, 79.50781239885322% 9.516260893932143%, 81.80445863218466% 11.377094114268045%, 84.2789388816694% 13.585439626802398%, 86.4484313710706% 15.77264470356559%, 88.52452242743342% 18.122502556569216%, 90.44857757328678% 20.687354201687693%, 92.16184541475043% 23.055635198175196%, 93.83062347573991% 25.988316063847527%, 95.40213755914218% 29.007294170725398%, 96.32574888673638% 31.24777345769057%, 97.97257129170073% 34.89564270011351%, 98.82878943461371% 37.34373419484285%, 99.01546338528348% 40.28196248198222%, 99.3643698125267% 43.72159420797989%, 99.9412525921233% 46.84295119495757%);\n}\n10%   { clip-path: polygon(99.69109401177866% 49.85468982327585%, 100.09866338026436% 52.70864831783664%, 99.72304232952698% 56.37227273661391%, 99.40718866021147% 59.11992422474939%, 98.294753993988% 62.34812597352972%, 97.65777273451502% 65.33489598133671%, 96.4016804655178% 68.35878115586704%, 95.26512470032966% 71.26815107067073%, 93.81410168461026% 74.08364291731857%, 92.21828041455447% 76.71033434054543%, 90.47330910823813% 79.23932230360221%, 88.55162963774993% 81.80524647862012%, 86.14918945881979% 84.50248325686191%, 84.15811535668131% 86.65683779469691%, 81.8821757641729% 88.46984317457073%, 78.99013500712744% 90.55161756198731%, 76.90626788102743% 92.13587353970864%, 74.44950609076766% 93.45326315187171%, 71.49687884630453% 95.34047537053904%, 68.29471157433656% 96.55710585857496%, 65.48265934672335% 97.40736569300839%, 62.37800781717116% 98.43716512217559%, 59.39877482453323% 99.10717289790382%, 56.27254167645013% 99.63536705925111%, 53.07544867632205% 99.8142977565813%, 49.999984393915526% 100.05250651749809%, 46.71549745801013% 99.96424719758441%, 43.91959265853074% 99.74392861391902%, 40.72968510263587% 99.07399570822461%, 37.70494925566272% 98.46182103729147%, 34.389058102319105% 97.4495732526174%, 31.601469073645575% 96.31081734158404%, 28.818174616976645% 95.44800275834605%, 25.92240668728902% 93.57392434259474%, 23.330439538575792% 92.1542557524208%, 20.747830391455047% 90.41461072314084%, 18.08574823909135% 88.58052666262492%, 15.798299952710275% 86.46768899543414%, 13.559509562690819% 84.22458043109378%, 11.54368379328214% 81.86348893184078%, 9.672173967655075% 79.2314625235942%, 7.637234774325658% 77.02301882977886%, 6.1837811323689245% 73.82505492761366%, 4.664700022022638% 71.14834089191335%, 3.6502829518608033% 68.749928425638%, 2.847208454083161% 65.46926129891514%, 1.4283068118343853% 62.59478130454578%, 1.0101948515035772% 59.16653198065851%, 0.4277083693115853% 56.370988816229286%, 0.1282293253269552% 53.16534625465493%, -0.12321260582309579% 50.16607416933322%, 0.1544039850952426% 46.868185736648%, 0.4179894631009258% 43.74284039859933%, 0.8604541941895271% 40.601964757708615%, 1.5191336076130215% 37.64060334095938%, 2.503403159280478% 34.695608133776986%, 3.3783224972337327% 31.77791449392181%, 4.842713489530941% 28.439147211067187%, 5.856366865629092% 25.84054062917885%, 7.7792401330171135% 22.969371497225115%, 9.963625803250116% 20.489117529201486%, 11.128826539789763% 18.185633826487116%, 13.82884840766784% 15.996631616711417%, 15.806896700553377% 13.260344191835783%, 17.908043877073727% 11.423723072383803%, 20.641531765839197% 9.406963873215311%, 23.307892220842163% 7.7397417316899615%, 25.894960984168602% 6.175426277688823%, 28.696001430844383% 4.751393805313382%, 31.613036795088124% 3.5556391080293146%, 34.44241167638008% 2.3662015868811497%, 37.598205933624726% 1.358517928316831%, 40.68689502508997% 1.062194861928805%, 44.001589093511676% 0.09329214677825903%, 46.82545671349783% -0.04803947520711038%, 49.698130139954124% -0.10452294201254175%, 52.93904139847691% -0.14703740742547053%, 56.606156548095974% 0.194966670147142%, 59.29465078523867% 1.1810578700492478%, 62.43736881898426% 1.5297748648632439%, 65.53630546068096% 2.294654666425201%, 68.39268285178125% 3.545317384675003%, 71.25999954087115% 4.7457977752746%, 74.0959446367142% 6.166008479668625%, 76.85985100704598% 7.829893391331166%, 79.30003439550917% 9.446781596354814%, 81.98995564306288% 11.580153494596207%, 84.45375838558756% 13.414554540718779%, 86.53013982367956% 16.010373478217538%, 88.67395408158563% 18.29342443456075%, 90.86676436653137% 20.44683975779574%, 92.45863421093426% 23.29787933326716%, 93.96501590442044% 26.030416674271766%, 95.26074739651877% 28.96559985991409%, 96.39217739949062% 31.700685811446764%, 97.48452273569852% 34.611438778979675%, 98.42884195174484% 37.49692417914992%, 99.09811794286735% 40.66364936542535%, 99.62772227669288% 43.758496232659965%, 99.94565809070767% 46.93930132688198%);\n}\n20%   { clip-path: polygon(100.29899017644257% 50.315453927478465%, 99.96714357848766% 52.965527507009746%, 99.65077402906279% 56.15398200283488%, 99.13690991894256% 59.25179297154013%, 98.27349694039519% 62.27922077223122%, 97.55848798844961% 65.4551868313718%, 96.48882429441257% 68.4062276342339%, 95.320163016145% 71.28120541489149%, 93.90013056188363% 74.21822969148091%, 92.10148825799095% 76.89186018516494%, 90.27628430747068% 79.31109993905167%, 88.85833142982388% 81.7946458582315%, 85.96232194192905% 84.13923078398227%, 84.0037530729509% 86.75574164911116%, 81.88109937403799% 88.36168015369869%, 79.61999000149859% 90.48934097634788%, 76.92343657612052% 92.25862095403677%, 74.06666649349253% 93.80997972751676%, 71.28896457825363% 95.24135262330097%, 68.41136280238167% 96.4527000694642%, 65.29612777420076% 97.56285571776732%, 62.53099244528393% 98.61575599445712%, 59.26350759019723% 99.17430201029578%, 56.63100710815323% 99.82350915160283%, 53.38483194108601% 99.83328962189907%, 49.882963056181936% 100.31677423192919%, 46.65990650474748% 100.04503117130005%, 43.51784008775299% 99.61844516763212%, 40.46446623016935% 99.08431928932467%, 37.572885310492836% 98.38267270900134%, 34.54915028125262% 97.55282581475768%, 31.59991065103456% 96.53681557792183%, 28.757471607919722% 95.34734107543034%, 25.731022945639662% 93.96805655379194%, 23.238225696593176% 92.06683352011534%, 20.483354469398368% 90.19974162609391%, 18.43830354875584% 88.73342858639826%, 15.967631936800688% 86.40129745816628%, 13.764162351942595% 84.1477578832935%, 11.593610454121425% 81.95869770169307%, 9.62844510889819% 79.28578069118981%, 7.800005414811905% 76.83951081968713%, 6.1846659978068175% 74.08768370508577%, 4.831725833591276% 71.24616952332886%, 3.4976140886144163% 68.39301412858306%, 2.2702694559395606% 65.4846961422164%, 1.3497989625538493% 62.65578076892662%, 1.2822349507173039% 59.48607973586962%, -0.10218163293465499% 56.68277949985402%, -0.2112770186679621% 53.19929645567205%, -0.14246185748806908% 49.81369224295815%, 0.10381698537903294% 46.94406719237691%, 0.4235942240999092% 43.83625611021896%, 0.9370515875701543% 40.658150599040944%, 1.5708419435684462% 37.56550564175725%, 2.4835051070527765% 34.54653006610614%, 3.361152672518951% 31.500643498209456%, 4.9315901893060445% 28.684918190589165%, 6.199667071259534% 25.926290043302927%, 8.075955055108434% 23.09715178271868%, 9.447427788190994% 21.067464270149582%, 11.327260595310142% 18.380179269131684%, 13.861055448127628% 15.700137351859333%, 15.590361641154539% 13.79057411933681%, 18.05567684380002% 11.390794978182544%, 20.601658049036136% 9.559730738813874%, 23.208660251050183% 7.783603724899237%, 25.97492077692033% 6.203947088678897%, 28.734784532274077% 4.618072766785515%, 31.732506602413803% 3.382375428233249%, 34.79131681220503% 2.7532771836360745%, 37.922769203682705% 1.7629759899144883%, 40.66234041942212% 1.0334684969359063%, 43.52391274050349% 0.6670320099720937%, 47.05897593838143% -0.20014657974225625%, 49.92873588832609% 0.1161992507376145%, 53.04265729589364% 0.2488747336471039%, 56.196042290450045% 0.3875362967350782%, 59.369065729286255% 0.8856374635655726%, 62.5025440824445% 1.6464580680968761%, 65.51666487664983% 2.546906526209889%, 68.42693953036861% 3.5000046767013147%, 70.97779288526309% 5.067596411485654%, 74.1765868719558% 6.244748571825713%, 76.87219709922552% 7.299162685393323%, 79.6460225711255% 9.324806143064873%, 81.55274966743536% 11.468760794753415%, 84.44831987937575% 13.513850921541113%, 86.45566725947987% 15.834106957837193%, 88.54033351881607% 18.174134116281163%, 90.45084971874739% 20.61073738537637%, 92.1567301506672% 23.177732590974042%, 93.89823229295231% 25.951955229206153%, 95.13638922653148% 28.902361039182495%, 96.54199984308175% 31.64071014174873%, 97.72682227317776% 34.25945998557376%, 98.19980389430445% 37.56955039956759%, 99.16506038922431% 40.68573861751426%, 99.71641594071232% 43.839248509681006%, 99.79747528527858% 46.74017960908951%);\n}\n30%   { clip-path: polygon(99.9082364045633% 49.5910902611941%, 99.86390537647593% 53.20956133470089%, 99.36303927951334% 56.051831947125386%, 99.09125840764827% 59.32723028716615%, 98.44898925017554% 62.45076777114856%, 97.55282581475768% 65.45084971874736%, 96.50043350812341% 68.39216650077091%, 95.1475671293216% 71.30546350890506%, 93.66408172965689% 74.0034852240321%, 92.57518348451853% 76.57478125245778%, 90.80221875024753% 79.36991156077788%, 88.59540293065551% 81.75507778686233%, 86.59658447002872% 84.16198889770207%, 84.42373920902047% 86.59407786057912%, 81.88230415896929% 88.6196573986852%, 79.38926261462365% 90.45084971874738%, 76.85140156612903% 92.29452922197758%, 74.03488211818245% 93.91414806143673%, 71.54800095669009% 94.98628114493843%, 68.57797191355866% 96.14572505491374%, 65.5321497613466% 97.82053724667648%, 62.25738626975167% 98.1037966690841%, 59.426542591866244% 99.33734367801996%, 56.44854552364878% 99.6166971072384%, 53.10115618353342% 99.98508769781277%, 49.99999999999999% 100%, 46.7995573620281% 99.82213039842912%, 43.60754248203938% 99.71907801797074%, 40.62274921359368% 98.83987969582991%, 37.92705411537471% 98.78602871191937%, 34.064513021947064% 97.66293507595917%, 31.949658293978587% 96.40147335738433%, 28.6285441754537% 95.32607370786158%, 25.80260721109068% 93.68180999994753%, 23.24415149686634% 92.29893772728664%, 20.61073738537635% 90.45084971874738%, 18.084705334940303% 88.56279644404722%, 15.60107869296443% 86.38800775343435%, 13.327111824134231% 84.26328630872034%, 11.36649779483376% 81.87036146310531%, 9.709483741357465% 78.9504909910222%, 7.64755492619601% 76.52477265634083%, 6.003093915614211% 74.23386657476324%, 4.661935255100569% 71.30070228174402%, 3.4661563058379405% 68.4501926275957%, 2.447174185242318% 65.45084971874735%, 1.6641610078153872% 62.34358565892537%, 0.9740986959644782% 59.35499611356337%, 0.2809270484399973% 56.12453281558951%, -0.16743853046096824% 52.81042169568629%, -0.2586837999081941% 49.69974566637344%, 0.07038918255897342% 46.97184543582973%, 0.14065890875729192% 43.49540540116417%, 0.8448578931385607% 40.43701210800457%, 1.5009448701125998% 37.559889653163836%, 2.447174185242325% 34.549150281252615%, 3.4344011268860286% 31.499836781635643%, 4.933252648995298% 28.8583739175631%, 6.324330805644989% 26.01330195125518%, 7.395647303583125% 23.03148634430129%, 9.12219271409888% 20.68717781209869%, 11.811360777804628% 17.915063526877486%, 13.67070494225692% 15.90719097308369%, 15.83146760624855% 13.443563922981783%, 18.216858756252957% 11.569098951481209%, 20.61073738537634% 9.549150281252636%, 23.18782886921005% 7.842264293797349%, 26.07299431365236% 6.1305193474839275%, 28.72681347973541% 4.500797167660911%, 31.498976181656985% 3.5069913697340245%, 34.63636815296457% 2.6534340748720586%, 37.327710581433394% 1.6852442510237509%, 40.666153541583625% 1.1063895568573063%, 43.891397189410604% 0.39496501381733895%, 46.81628087810681% 0.16360362771447187%, 49.99999999999999% 0%, 53.06758761732472% 0.013309202611549192%, 56.36594339733148% 0.40705509659802913%, 59.37474319401783% 0.7869933570666557%, 62.50570786014136% 1.5631211626941688%, 65.48509382561522% 2.8192603721406853%, 68.45337022055686% 3.3636532563243158%, 71.26477131513789% 5.049089047307327%, 74.21144699242363% 6.177387284137007%, 76.86726126854516% 7.845275776573097%, 79.38926261462369% 9.54915028125265%, 81.92975722300791% 11.534847209699008%, 84.3035458499036% 13.507559568962828%, 86.4633879646211% 15.499899446903402%, 88.23539731135244% 17.79882741051596%, 90.5036654806017% 20.85769637355157%, 92.02526310393743% 23.58375619288853%, 93.77688548962635% 25.887313878726115%, 95.34578243306811% 28.58410387833317%, 96.48008047415206% 31.581689745290877%, 97.55282581475768% 34.549150281252665%, 98.34451607834951% 37.64649159677246%, 99.19625279768437% 40.80398490024844%, 99.32693791559247% 43.518540855788366%, 99.6191819600046% 46.59297201796394%);\n}\n40%   { clip-path: polygon(100.18198782132623% 49.82980763930903%, 100.25012870252344% 53.50291664388345%, 99.33785863290825% 56.61617875839382%, 99.0635689461905% 59.11016028482004%, 98.39152030962944% 62.40251273362778%, 97.59057164114772% 65.44580211746057%, 96.64440454614879% 68.55081035882709%, 95.26992259069533% 71.171485374549%, 93.74858177274753% 74.01464084982176%, 92.23952388060604% 76.77532532229651%, 90.43514627084424% 79.40296655012926%, 88.46610565326473% 81.7966659782704%, 86.50648198552484% 84.23029299732123%, 84.34476623499592% 86.47843046694646%, 81.67989380175275% 88.67663930047178%, 79.4332490285241% 90.64567247808777%, 77.113786212221% 91.89981843263416%, 74.07766368316341% 93.87083887260937%, 71.67871433224146% 95.24830499669966%, 68.54882099333992% 96.14169948052954%, 65.0742868415788% 97.78962366187255%, 62.81017266358233% 98.48291674069522%, 59.49103990896531% 98.98712054547973%, 56.35386267698751% 99.80426022109248%, 52.92972785058899% 99.93262059427727%, 50.14949912977524% 99.84034366852228%, 46.75082026483191% 100.03209445540638%, 43.66717752362836% 99.54644279234898%, 40.643045706739294% 99.11232663516982%, 37.58950010775973% 98.43959353216495%, 34.5112756645364% 97.50977197048108%, 31.70583372779982% 96.41253765495463%, 28.63396214891693% 95.24902970067785%, 25.797789502122264% 93.92775218536782%, 22.98138507308904% 92.22736222175968%, 20.301093680670615% 90.16387247745799%, 17.815869069790622% 88.66626274851433%, 15.758364488578296% 86.48040249523953%, 13.734204217527283% 84.36549699031947%, 11.253153922007808% 82.08278230706205%, 9.171099694263381% 79.61090789705146%, 7.636090906460854% 76.75841821407764%, 6.073707652565565% 73.86702492559792%, 4.581582361643786% 71.10754036365904%, 3.533921320388939% 68.49804593714326%, 2.4174161373246985% 65.50158131582448%, 1.5397482637898463% 62.42713436794641%, 0.8735143649823784% 59.35750928250913%, 0.39229467736836593% 56.28440813241661%, 0.047290006784002664% 53.1180267942031%, -0.09217367853451403% 50.09008249719056%, 0.08767334644659477% 47.019557281950064%, 0.23969757064402258% 43.90879884227038%, 0.8741613976780915% 40.41360137472964%, 1.6739267395022437% 37.69545796897879%, 2.302406450113409% 34.74859493252859%, 3.6000232083927246% 31.170614845218637%, 4.436876195581085% 28.753445751469698%, 6.290839737693688% 26.0340971428779%, 7.642574345036606% 22.814105040599514%, 9.621824011296193% 20.352228017528006%, 11.263145580668565% 18.184999103813357%, 13.718552085238656% 15.723255249592308%, 15.896881543731691% 13.575933125355062%, 18.178923531623674% 11.57748733071792%, 20.598435066145743% 9.60300554426934%, 23.222999650988143% 7.771310990572949%, 25.926666095994683% 6.182321979011846%, 28.689336989422763% 4.821000187144842%, 31.564813883651833% 3.416583907475522%, 34.406187069653406% 2.6119455765222686%, 37.354847479917794% 1.4104284430049059%, 40.759769615397154% 0.7946907046857654%, 43.80207810002139% 0.1267456788807385%, 47.17945869162412% 0.08605257074472283%, 50.0006125657401% 0.014836057228466593%, 52.67160961268242% 0.3992518590056475%, 56.07931403064376% 0.5166751281116877%, 59.31228218985676% 0.8989527294984183%, 62.75338693477149% 1.5542626264497676%, 65.61510048169845% 2.233322646734961%, 68.50909155656937% 3.290903870745299%, 71.18021540695943% 4.594272268210906%, 74.13709895271184% 6.138181368516002%, 76.8579305857951% 7.813375756274586%, 79.41492962105336% 9.568796766320931%, 81.88559045107047% 11.497095679759363%, 84.19944393723118% 13.5517293023885%, 86.4680538242551% 15.743449954556414%, 88.63829555981606% 18.25719277099087%, 90.37145589480934% 20.463488274123108%, 92.05546287480075% 23.47940011985897%, 94.05026295048081% 25.859473859081923%, 95.21485012068408% 28.826817796717172%, 96.2888854314512% 31.261820339128374%, 97.16422957585874% 35.01512279923509%, 98.79780195627201% 37.65583183818369%, 99.11251435905461% 41.020890954910186%, 99.35356333071739% 43.5464481881547%, 99.80818491685382% 47.01103930576573%);\n}\n50%   { clip-path: polygon(100.43084201920284% 49.71937694663717%, 99.66239744628723% 53.532422622947315%, 99.43724623961779% 56.24394927907473%, 99.1384285652998% 59.503187962575105%, 98.31691499117747% 62.22896620952142%, 97.74922474107255% 65.55484441253698%, 96.57069169991372% 68.3951492148012%, 95.34164740475218% 71.21636693309904%, 93.78289308703708% 74.09527476101886%, 92.21639627510075% 76.79133974894984%, 90.47431039062997% 79.42510558529747%, 88.41750875336268% 81.92005263083507%, 86.45143823562331% 84.27955448414151%, 84.3586432358208% 86.38013971918376%, 81.67709078336071% 88.59353824465366%, 79.29958797428377% 90.42021823332654%, 77.07628275581878% 91.87275010067391%, 74.22386049823179% 94.17215996944844%, 70.99232685966551% 95.63963124304286%, 68.15815733189895% 96.58220652366397%, 65.37407381533181% 97.4492113708507%, 62.19264089027722% 98.57833821278076%, 59.13733456350862% 99.13288555031787%, 56.33131937804983% 99.47718422337391%, 53.19164547876685% 99.75911272786102%, 50.085360562696906% 100.07424884756172%, 46.82307460064156% 99.85964238812807%, 43.733338321784785% 99.60573506572389%, 40.63463836640613% 99.09828267495747%, 37.596107843704374% 98.48541467452279%, 34.43558075514006% 97.451934059879%, 31.420455146622338% 96.6102342891229%, 28.924231582424213% 95.22088884654214%, 25.73701694102067% 93.55760227369665%, 23.456589911103496% 92.27822562254273%, 20.980283606607117% 90.01776475293711%, 17.681878436046134% 88.3682838644915%, 15.57315999626423% 86.26239105993065%, 13.854405157078764% 83.9701980709776%, 11.48152652229777% 81.67361315893663%, 9.31421848419514% 79.26549293267452%, 7.815966810167723% 76.79403013495063%, 6.210826139764331% 74.12789151011704%, 4.671055465543249% 71.30714084424952%, 3.4960769990202034% 68.40472376544514%, 2.447174185242318% 65.45084971874735%, 1.5998270595536483% 62.38839839925488%, 0.8276118892687163% 59.267385215628046%, 0.5541874467041527% 56.4127264762735%, 0.0783958003395375% 53.2205523804925%, 0.17773522558689853% 49.74877367092154%, -0.05413685458410972% 46.80723087411664%, 0.631665123676898% 44.050117963499886%, 1.2539457214814878% 40.489588963942495%, 1.985521153940355% 37.54121767505619%, 2.783019756398089% 34.65467159223174%, 3.1453727991780926% 31.25226306479375%, 4.9641172851725095% 28.988708838787407%, 5.979532375617521% 26.003835278665907%, 7.579887632671962% 23.249932902714136%, 9.403868710134471% 20.589276411435677%, 11.365767404397552% 18.12520529519606%, 13.563622501230297% 15.78937530715018%, 15.772644703565568% 13.551568628929424%, 18.156802312086523% 11.51077297588708%, 20.701738339234975% 9.484427400359909%, 23.348353797923988% 7.9227037681459915%, 26.005172050749643% 6.151401159543257%, 28.970568958222% 4.5327226298017225%, 31.72629894804838% 3.3843884530128343%, 34.69716955825831% 2.0861702399402606%, 37.446103274564535% 1.428132530373245%, 41.11016919797086% 0.6347930536462616%, 44.01243398020733% 0.6239388685690316%, 47.0667879744605% 0.06509800709212754%, 50.022052466690006% -0.23412594366480613%, 52.96421073579545% 0.2187713580894936%, 56.35008593685901% 0.26014045448565465%, 59.24974115052359% 0.9414723026889767%, 62.51020702183097% 1.680259289753834%, 65.46887862046854% 2.446928616222869%, 68.40622763423391% 3.5111757055874406%, 71.278217925526% 4.788956487253154%, 74.09353163975351% 6.112727494510083%, 76.72487126788766% 7.7120041682722436%, 79.55166041494408% 9.712012438345434%, 81.89149477199973% 11.29942481804153%, 84.5136578070212% 13.275352904117792%, 86.32298797577083% 16.038102731718798%, 88.0852762676411% 18.084013386045154%, 89.99109995700998% 20.33752653360041%, 92.25040967621082% 23.237661405726794%, 93.9924196950286% 26.15337859069587%, 95.3974044822476% 28.644094643190115%, 96.56523317697864% 31.443983376680393%, 97.61009683031891% 34.48254936323779%, 98.32474465984046% 37.46773241803302%, 99.04906104361277% 40.53007182187385%, 99.59285005633816% 43.688069752962896%, 99.90133642141357% 46.86047402353434%);\n}\n60%   { clip-path: polygon(99.87130766159792% 49.80991198048299%, 99.7847223814552% 53.32776216264877%, 99.3211506060626% 56.16863987940449%, 99.1700772843195% 59.534560128885346%, 98.4488016689541% 62.47059808059982%, 97.55282581475768% 65.45084971874736%, 96.48224404850096% 68.45079331034067%, 95.2566343615248% 71.4304193185497%, 93.95127442838574% 74.26644411502625%, 92.24967550215172% 76.999698753623%, 90.5970136505044% 79.78186833810173%, 88.24264587603356% 82.18242825241315%, 86.21557713730574% 83.92888165206331%, 84.34889163807587% 86.54208588268197%, 81.88059241597512% 88.50630370210085%, 79.38926261462365% 90.45084971874738%, 76.80072357923147% 92.26010368759454%, 74.17462506880976% 93.68902328105969%, 71.52507131861717% 95.01880923467583%, 68.0462682976326% 96.31681715283783%, 65.09196507126798% 97.74786578613114%, 62.407772679098116% 98.27392453348452%, 59.415358201232245% 99.26718544425839%, 56.14324827711221% 99.6831774378776%, 53.13695928089343% 99.82513712411576%, 49.99999999999999% 100%, 46.93638457724174% 99.89086136144232%, 43.70412932767803% 99.4382765812234%, 40.476718072746934% 99.03194343627513%, 37.52657370626184% 98.12378097282297%, 34.27309212362549% 97.64480635431073%, 31.46467852520026% 96.26899082226844%, 28.833882301041555% 95.43647906401647%, 26.092564358490957% 93.64322681162815%, 23.275003492087052% 92.1698895961629%, 20.61073738537635% 90.45084971874738%, 18.07103193774565% 88.51035436278495%, 15.636202826597035% 86.28385971970101%, 13.851183374818943% 84.01085352110125%, 11.504385309901219% 81.8192043789274%, 9.986655537058528% 79.23872485842979%, 8.097767152696385% 76.58818637826222%, 6.444738863659865% 73.82659495845792%, 4.7714565799600726% 71.32440006670481%, 3.435658218227756% 68.48387606926352%, 2.447174185242318% 65.45084971874735%, 1.5824278909850358% 62.39913998588939%, 0.7644637446402115% 59.5636774031356%, 0.18203581975252991% 56.00884322594741%, 0.41239904612043643% 53.05048098462498%, -0.4959101048733572% 49.881052376240284%, -0.04161664892128736% 47.13389139129554%, 0.18961243471907324% 43.794022077604495%, 0.9981354352772682% 40.82921563653133%, 1.5032820114529617% 37.46780880896325%, 2.447174185242325% 34.549150281252615%, 3.473257042151314% 31.595416392092012%, 4.8140633136508395% 28.769495872669555%, 6.446993042805794% 25.665866730992242%, 7.922153561394722% 23.582171784875584%, 9.395458752639456% 20.758925385365174%, 11.38516527077763% 18.25720612510931%, 13.761703259891307% 15.960385360478897%, 15.829964519975054% 13.622930974054666%, 18.21518704784162% 11.497915810342043%, 20.61073738537634% 9.549150281252636%, 23.185196261670505% 7.822544314642951%, 26.033427693417227% 6.367552623882703%, 28.909994957598705% 4.835036010360798%, 31.20173110836942% 3.805212044827467%, 34.270473639242724% 2.3405319995551137%, 37.82311029382629% 1.5710298378321974%, 40.56318483194232% 0.8891247204028488%, 43.73436420764312% 0.34278909325578133%, 46.79866629416233% 0.09349066045926505%, 49.99999999999999% 0%, 53.10050251023247% 0.06510960386808264%, 56.25537257708022% 0.32092368325458354%, 59.164801637139234% 1.0946698533589085%, 62.57814673628794% 1.75246719607862%, 65.14372142648402% 2.0779187216615127%, 68.32773055483787% 3.7414980241783167%, 71.55082286894533% 4.534297760499125%, 74.16833215049654% 6.041645878973931%, 76.76804136523877% 7.687418809848275%, 79.38926261462369% 9.54915028125265%, 81.90636160517586% 11.44783399899184%, 84.03221574230237% 13.437266252242594%, 86.15004342938697% 16.001163035336376%, 88.55889124380403% 18.25357552172517%, 90.66466190417651% 20.987041528027408%, 92.09042238339089% 23.530450976456283%, 93.54286024232825% 26.174242517467505%, 95.28227085399689% 28.613620127310842%, 96.54183650084566% 31.651150903258436%, 97.55282581475768% 34.549150281252665%, 98.39436079359447% 37.56464815058992%, 99.05026676754947% 40.456242305647564%, 99.82408766550482% 43.494742586268494%, 100.17375902724751% 46.818850788669764%);\n}\n70%   { clip-path: polygon(100.48703713635267% 50.22052768831009%, 99.53827864674822% 53.155211841239975%, 99.81428263427941% 56.178652608975014%, 99.24323704415796% 59.3493909027578%, 98.44382578682175% 62.396097515414176%, 97.55282581475768% 65.45084971874736%, 96.39333961824211% 68.39202794654341%, 95.32199636574519% 71.41911013045271%, 94.07789383803419% 73.84701618744808%, 91.85477974897294% 76.53531350293923%, 90.72688632628606% 78.99762230306006%, 88.29405850776772% 82.11843200848507%, 86.70443943053748% 84.30879070280986%, 84.13833113572697% 86.52549189561455%, 81.8909041496453% 88.5258473103355%, 79.38926261462365% 90.45084971874738%, 76.71456009355443% 92.2634681272455%, 74.27053484472684% 93.65218347092107%, 71.16150476619849% 95.28939554943705%, 68.5119488680986% 96.88244390640935%, 65.42614110757955% 97.99464947108461%, 62.444014988682625% 98.22760149810797%, 59.11215736140757% 99.21880600350234%, 56.25240986344598% 99.41953610746246%, 53.14009620204713% 99.93042487511323%, 49.99999999999999% 100%, 46.83358103190358% 99.83211915447588%, 43.66283724015417% 99.62503638370357%, 40.43209302977801% 99.16859744527514%, 37.729151372363% 98.16393283982339%, 34.08117783469877% 98.00343464206462%, 31.358969338743083% 96.18942204842773%, 28.9657819043692% 95.03110018932136%, 25.845966198347202% 93.93941846230723%, 23.194999914427914% 92.17032369414892%, 20.61073738537635% 90.45084971874738%, 18.191874007778043% 88.46974754035406%, 15.968482586751461% 86.49869012173839%, 13.808715704386877% 84.13106543098542%, 11.22702307859289% 81.50683538097913%, 9.241257844424055% 78.94830902713447%, 7.696051689223626% 76.82020698393059%, 6.044384440948568% 74.12080693095967%, 4.573222799126265% 71.36482256177821%, 3.6083784899414706% 68.3364960748483%, 2.447174185242318% 65.45084971874735%, 1.6253969622371331% 62.41532650134259%, 1.070551591485842% 59.5367856407851%, 0.135956121889579% 56.28979715791952%, 0.31914644006325776% 52.836610051777%, 0.2221398806478878% 49.71707279252096%, 0.1351925492543657% 46.667813119037646%, 0.2746422402610652% 43.93024721447792%, 0.9963266919913942% 40.60319209885166%, 1.4910273829734368% 37.53031501525436%, 2.447174185242325% 34.549150281252615%, 3.5099815827435243% 31.59048475233176%, 4.890853617215605% 28.62288749108778%, 6.087082282188202% 26.05648400471857%, 7.932807432318211% 23.336198906358195%, 9.749313133575562% 20.22952170222059%, 11.207558952200333% 18.51268397024075%, 13.301136407332901% 15.716283733875493%, 15.859342271129284% 13.647676513621866%, 18.037555314482354% 11.379664697059393%, 20.61073738537634% 9.549150281252636%, 23.253414187877148% 7.846493151573223%, 25.861084586910184% 6.3394537491591665%, 28.474633004497658% 4.518801019442165%, 31.84380458302293% 3.4550920888407064%, 34.354388878426306% 2.251770302859366%, 37.61319856523374% 1.8861295478870883%, 40.646657803823636% 1.0648010635465799%, 43.551042105588465% 0.2655561862266228%, 46.76873260883111% 0.16214941467909508%, 49.99999999999999% 0%, 53.200391464820356% 0.18459640199831356%, 56.317060147249975% 0.356466299068555%, 59.160263545215535% 0.747387256823005%, 62.672576069688716% 1.5158971330271327%, 65.38246457043434% 2.176689407531272%, 68.20383566836608% 3.2902172092229587%, 71.20032710901488% 4.535841871697918%, 74.06950009498438% 6.178697863816207%, 76.78323557937829% 7.867968517831891%, 79.38926261462369% 9.54915028125265%, 81.9446300631607% 11.40090533629339%, 84.124816317681% 13.693825641247727%, 86.74540284301386% 15.530429230295816%, 88.19056119699636% 17.734844619327575%, 90.3636754803529% 20.28217265380264%, 92.35656789184516% 23.273500670463196%, 94.0973448734245% 25.66182937698837%, 95.22415455995797% 28.857526078353686%, 96.4329764009191% 31.61386193219005%, 97.55282581475768% 34.549150281252665%, 98.4553844359608% 37.62865953362693%, 99.13063012129165% 40.631951309629045%, 99.37846563688059% 43.74414448458856%, 99.65626392921266% 46.86889556071877%);\n}\n80%   { clip-path: polygon(99.82969411411054% 50.46971295234561%, 100.16040566455017% 53.408607319834154%, 99.27114908253635% 56.30968297740565%, 99.34252764389058% 59.59843574844916%, 98.59239151784848% 62.380110519047236%, 97.59755164450226% 65.57054783832132%, 96.4358951549853% 68.4003130951018%, 95.24135262330097% 71.28896457825364%, 93.81710350816017% 74.05496421390464%, 92.18117254067235% 76.80207691857713%, 90.54193428621635% 79.52468708895852%, 88.3613589937928% 81.86392735309627%, 86.61583858928735% 84.26917870811003%, 84.48638791749896% 86.42593844087313%, 82.01772809727328% 88.30912318256497%, 78.98488184163098% 90.06764719235365%, 76.64047930848363% 91.91824194803903%, 74.07447137521024% 94.04591906865961%, 71.16922518091648% 95.36528033997163%, 68.53267783269716% 96.57460743429337%, 65.468536403106% 97.5324536289066%, 62.43449435824274% 98.42915805643156%, 59.36508860605496% 99.14460881545138%, 56.226172092587944% 99.56095190700783%, 53.29804804255545% 100.0524654051265%, 50.11274451614896% 99.7636157782128%, 47.12121492325097% 99.85351303039504%, 43.401486807182415% 99.70641833821134%, 40.19454167412901% 99.4011236150467%, 37.521018233897024% 98.62545498734244%, 34.825574328862096% 97.4978757146501%, 31.480946070078613% 96.2592858686268%, 28.817237968888442% 95.34416619616327%, 26.05153285400781% 93.73082811922944%, 23.164896510889307% 92.28193069545667%, 20.61073738537635% 90.45084971874738%, 18.19305237796843% 88.55415555526614%, 15.723740253222731% 86.59101944484247%, 13.759054473997864% 84.30884329465827%, 11.483900136204932% 81.727090173281%, 9.255891825360402% 79.61258418657395%, 7.815590606231717% 76.69280603998345%, 5.697729775175479% 73.94403105500149%, 4.75645922069538% 71.6506334152695%, 3.5804276214110113% 68.2900679000985%, 2.4028172693244474% 65.71915520835569%, 1.5207744486822223% 62.54975344555306%, 1.0248409899733908% 59.34922076598413%, 0.4591124274683181% 56.245334297842746%, 0.09866357858642516% 53.139525976465656%, 0.015418959943798827% 50.0353904652485%, 0.06434936414076338% 46.894331445814466%, 0.2782886571389709% 43.75292647812731%, 0.7064083144349028% 40.80784122555027%, 1.3875167780658724% 37.59914705574774%, 2.028690998705666% 34.206449451252944%, 3.8706771327091634% 31.97755722366092%, 4.976855450913309% 28.475403728011255%, 6.274962806739407% 25.770594572166907%, 7.5863149251230775% 23.140618520691902%, 9.618667311424836% 20.769658784982923%, 11.47213443201642% 18.160105833778996%, 13.516947145681973% 15.737274210882605%, 15.772644703565568% 13.551568628929424%, 18.197259014858943% 11.480386149688847%, 20.682145003577453% 9.517191883034709%, 23.214880389363337% 7.854798047896253%, 25.885484147224993% 6.102411554583232%, 28.604450944462357% 5.069953830099405%, 31.855383637077644% 3.1846356355813006%, 34.52446974592495% 2.452354532263627%, 37.228542726185594% 1.4055676808763895%, 40.34549795535073% 0.5679211501697901%, 43.76466050130726% 0.42102646925368603%, 46.84743299513121% -0.04794760829400563%, 50.072106789366664% -0.05840517322927376%, 53.09608494860332% 0.0556561587017151%, 56.266661678215215% 0.39426493427610865%, 59.39570169570693% 0.9282763619276038%, 62.31631713027535% 1.6680714260966194%, 65.29032573598691% 2.357560087178382%, 68.60379534911937% 3.2591673094897287%, 71.497680043885% 4.636278493470924%, 74.21670544030178% 6.002266356814723%, 76.49155733696166% 8.04097905237642%, 79.59289646524459% 9.619177589730038%, 81.97765879468923% 11.411401432454003%, 84.37200535115986% 13.752504568448122%, 86.25047762712732% 15.652375122874352%, 88.59344599014172% 18.07363790527249%, 90.48536874932356% 20.645574023373253%, 92.21639627510075% 23.208660251050183%, 93.842913745351% 25.924060068190517%, 95.2678109787431% 28.57108807548696%, 96.42716929097143% 31.735417655159786%, 97.50964084546678% 34.70693552621588%, 98.71329981081568% 37.56458971953421%, 99.06645245114166% 40.803334378081395%, 99.6103160719131% 43.54269554646342%, 99.88393350406399% 46.930379811689065%);\n}\n90%   { clip-path: polygon(100.30268196425538% 49.967951981298086%, 100.03495840630433% 52.96225085312919%, 99.3164996581622% 55.96984708823165%, 99.24686727697936% 59.53522928105738%, 98.49109824829134% 62.49076168951159%, 97.55282581475768% 65.45084971874736%, 96.57268239542084% 68.30768968505777%, 95.40099389152343% 71.41079786283554%, 93.77332204544089% 73.95459012584091%, 91.81769595784908% 77.00840131706155%, 90.55037604789754% 79.771534827309%, 88.12954392466234% 81.59453454179778%, 86.29705379554473% 84.51080019303853%, 84.33553243432002% 86.47768340836939%, 81.87977220570062% 88.57183286551957%, 79.38926261462365% 90.45084971874738%, 76.87702663529687% 92.27884735112004%, 73.92758654634746% 93.8982187615428%, 71.58320986780923% 95.43997925673159%, 68.42060758174735% 96.4625060449897%, 65.53512217303046% 97.38329503126735%, 62.246089942227464% 98.72611543309343%, 59.44912417840403% 99.23277117905135%, 56.42676986132269% 99.54004779098355%, 53.19956043027254% 99.90775815590729%, 49.99999999999999% 100%, 46.8083844541198% 99.84335547319692%, 43.70013573962622% 99.62672700249786%, 40.34641168101066% 99.0057187556875%, 37.5664468078331% 98.72761330014237%, 34.11819681509615% 97.89213754531308%, 31.831276470826637% 96.77577552676262%, 28.47017877842771% 95.32754912210545%, 25.894187079081696% 93.87491868956504%, 23.305804429921576% 92.17587932848215%, 20.61073738537635% 90.45084971874738%, 18.192163270317046% 88.50632920081277%, 15.805536555851306% 86.44664988594678%, 13.490631526180747% 83.95294858231624%, 11.578829743802412% 82.23074398834274%, 9.58602777698955% 79.30496949505584%, 7.637698105906941% 76.55007283446926%, 6.184066120706659% 73.99890073357162%, 4.891773918778559% 71.39505218181978%, 3.5647529813719765% 68.3665548849573%, 2.447174185242318% 65.45084971874735%, 1.6488127637899512% 62.406927684158354%, 1.0614095253274258% 59.25275096520268%, 0.59044778752064% 56.45092558651262%, -0.2058087710977171% 53.044204387292844%, 0.047063225826686095% 49.8866255951771%, -0.23562206363976146% 46.55617639086604%, 0.5351730507308329% 43.80739763450854%, 0.9615202595942584% 40.49338577804096%, 1.4868793246304173% 37.529382804349375%, 2.447174185242325% 34.549150281252615%, 3.5493489685273536% 31.66485909926392%, 4.819849750248552% 28.73326451877099%, 5.929545808193057% 26.003169239804524%, 7.512893887197776% 23.530697605374158%, 9.756723991003483% 20.63770179129494%, 11.500429411358333% 18.293923377113057%, 13.477341345646835% 16.04806637988652%, 15.93842889561399% 13.357571584870627%, 18.111687721384392% 11.44372971244158%, 20.61073738537634% 9.549150281252636%, 23.252283467160407% 7.741863177550342%, 25.85596518879736% 6.312758656425247%, 28.764319192686436% 5.036440380807717%, 31.729128963150544% 3.574004226198337%, 34.43052599588581% 2.279110381321698%, 37.78901227825232% 1.5884197909933788%, 40.79489874713184% 1.0766150059661512%, 43.68806103463394% 0.4084868043169922%, 46.842056748810386% 0.02272139602085041%, 49.99999999999999% 0%, 53.11052143486264% 0.15695200096198839%, 56.363846774073764% 0.3086774442174092%, 59.64914878970299% 0.9757563316910015%, 62.28626571343443% 1.7442275881237894%, 65.91649217884351% 2.803587979666073%, 68.50092012160334% 3.2188744706212034%, 71.17962078204566% 4.550575143151371%, 74.07446558868217% 6.003842288393045%, 76.78103190890016% 7.743513693177101%, 79.38926261462369% 9.54915028125265%, 81.89661149380674% 11.515112257127104%, 84.07568398412295% 13.469599600466022%, 86.47814036574955% 15.492413571751623%, 88.69046766451535% 18.465198193005623%, 90.32486207008546% 20.216741466682198%, 91.94849966417391% 23.175310094879794%, 93.94835976086276% 25.92860261758717%, 95.36700912941204% 28.784042574744458%, 96.5750037073713% 31.619009303238084%, 97.55282581475768% 34.549150281252665%, 98.51496654268178% 37.476620405032655%, 99.15528019407627% 40.53517215325349%, 99.71157542396242% 43.54293765616793%, 100.2211972037729% 46.93150658271232%);\n}\n100%  { clip-path: polygon(99.59031797501751% 49.67900713055795%, 100.08868524661746% 52.93826113421749%, 99.4147361062575% 56.47892112295856%, 98.84025455665385% 59.336629753982834%, 98.32211611360147% 62.568770569323384%, 97.36595369996189% 65.28374245491585%, 96.51898035772476% 68.37010038825434%, 95.21093153789693% 71.26206922388839%, 93.81533400219318% 74.08768370508577%, 92.21064306095084% 76.83974489097129%, 90.5586249740036% 79.46008553224499%, 88.37622886481859% 81.72569527225318%, 86.43418744000022% 84.0052246053499%, 84.2170783419395% 86.6241608914723%, 82.13450223666706% 88.69811384154026%, 79.02419203664365% 90.5878852557836%, 76.53141682744236% 92.69204973565233%, 73.78371749913428% 94.23273843040877%, 71.3409944531755% 95.17102224614601%, 68.4868326598759% 96.50795278499741%, 65.38487521334135% 97.722431967501%, 62.27821583516336% 98.54253682222846%, 59.29396879182936% 99.01485442651239%, 56.21693734075439% 99.56734234599476%, 53.13952597646566% 99.90133642141357%, 50.00505524250351% 99.95811878275924%, 46.74322568669889% 99.84712293919208%, 43.86456680985741% 99.72837510590034%, 40.47302013195056% 99.27696519480133%, 37.79648072849785% 98.61506798017719%, 34.846385171229635% 97.47315538283111%, 31.58763414515611% 96.7327056550044%, 29.017678844407488% 95.41320397615509%, 25.871544549417198% 93.83382630561195%, 23.348732212626793% 91.86273746598295%, 20.64894524066441% 90.32851005060256%, 18.146326977739825% 88.47039192298112%, 15.899081990837313% 86.28553043052574%, 13.542734555659484% 84.1315364038326%, 11.436923553996849% 81.86455248716389%, 9.549150281252636% 79.38926261462366%, 7.777747465826676% 76.81556547941457%, 6.076817467642993% 74.15294844823917%, 4.714716221456507% 71.28448322657816%, 3.5549254274437296% 68.2987657427296%, 2.4073837405797978% 65.1847677451542%, 1.4325490504346645% 62.32211964451311%, 0.8209444559148533% 59.54265484975898%, 0.7327975056975196% 56.10793262569155%, 0.2479661827547921% 52.71440672521769%, -0.23970798934662668% 49.890603464714886%, 0.3265125154595697% 46.759530265778096%, 0.25782744039075023% 43.923081575570706%, 0.8875772976004301% 40.544895583426374%, 1.5493382173052335% 37.594977715597786%, 2.41916358880596% 34.55116601142573%, 3.5111757055874406% 31.593772365766085%, 4.773703271782176% 28.699954122503076%, 6.169326579471139% 25.9323688636158%, 7.743812461275693% 23.234288909260744%, 9.582231895199689% 20.69646684595838%, 11.75078068624396% 18.141174948991704%, 13.6391652760682% 15.472116058613073%, 15.535053499833232% 13.510664753434218%, 17.705668494308803% 11.050428728316456%, 20.210110730106795% 9.426058372160234%, 23.248536193097635% 7.426677952499877%, 25.97845555074677% 6.081227559603957%, 28.838997299293283% 4.69024340458983%, 31.73474147035244% 3.688064272755475%, 34.47701141098514% 2.414651434261441%, 37.547805956071734% 1.5625325557067253%, 40.630934270713766% 0.8856374635655655%, 43.675676056891156% 0.38116969883199037%, 46.97570925101736% 0.08154315734526585%, 49.90875383543751% -0.010370343603985088%, 53.01375499196154% -0.07577922632857148%, 56.13557827365206% 0.4416892952556618%, 59.70742667952991% 1.0160931183502697%, 62.82007224242433% 1.6120484329971367%, 65.1363570552551% 2.3981768799225383%, 68.08449364453227% 3.274756785685797%, 71.11278791226543% 4.669237646458303%, 73.96657320803158% 6.231396690140457%, 76.78716233521152% 7.731804102420846%, 79.50781239885322% 9.516260893932143%, 81.80445863218466% 11.377094114268045%, 84.2789388816694% 13.585439626802398%, 86.4484313710706% 15.77264470356559%, 88.52452242743342% 18.122502556569216%, 90.44857757328678% 20.687354201687693%, 92.16184541475043% 23.055635198175196%, 93.83062347573991% 25.988316063847527%, 95.40213755914218% 29.007294170725398%, 96.32574888673638% 31.24777345769057%, 97.97257129170073% 34.89564270011351%, 98.82878943461371% 37.34373419484285%, 99.01546338528348% 40.28196248198222%, 99.3643698125267% 43.72159420797989%, 99.9412525921233% 46.84295119495757%);\n}\n}\n", ""]);

// exports


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(21));
var _createClass2 = _interopRequireDefault(__webpack_require__(22));
var DrawManager = exports["default"] = /*#__PURE__*/function () {
  function DrawManager(canvas, options) {
    (0, _classCallCheck2["default"])(this, DrawManager);
    this.isLocked = true;
    this.canvas = canvas;
    this.context = this.canvas.getContext('2d');
    this.mouse = {
      x: 0,
      y: 0
    };
    this.currentAction = [];
    this.actionHistory = [];
    this.currentColor = '';
    this.currentSize = 10;
    this.currentIndex = 0;
    this.cachedImage = null;
    this._options = {
      actionLimit: 20,
      pointLimit: 100
    };
    Object.assign(this._options, options);
  }
  return (0, _createClass2["default"])(DrawManager, [{
    key: "startDrawing",
    value: function startDrawing(e, erase) {
      if (this.isLocked) return;
      this.startAction(e, erase);
    }
  }, {
    key: "draw",
    value: function draw(e, erase) {
      if (this.isLocked) {
        return;
      }
      this.updateAction(this.mouse.x, this.mouse.y, this.currentColor, this.currentSize, true, erase);
      this.render();
    }
  }, {
    key: "stopDrawing",
    value: function stopDrawing() {
      this.endAction();
    }
  }, {
    key: "startAction",
    value: function startAction(e, erase) {
      if (this.isLocked) {
        return;
      }
      this.updateAction(this.mouse.x, this.mouse.y, this.currentColor, this.currentSize, false, erase);
      this.render();
    }
  }, {
    key: "updateAction",
    value: function updateAction(x, y, color, size, drag, erase) {
      var action = {
        x: x,
        y: y,
        color: color,
        size: size,
        drag: drag,
        erase: erase
      };
      this.currentAction.push(action);
      if (this.currentAction.length >= this._options.pointLimit) {
        this.endAction();
        this.currentAction.push(action);
      }
    }
  }, {
    key: "endAction",
    value: function endAction() {
      if (this.currentAction.length === 0) {
        return;
      }
      this.saveCurrentAction();
    }
  }, {
    key: "saveCurrentAction",
    value: function saveCurrentAction() {
      this.actionHistory = this.actionHistory.slice(0, this.currentIndex);
      this.actionHistory.push(this.currentAction);
      this.currentAction = [];
      this.currentIndex++;
    }
  }, {
    key: "cacheImage",
    value: function cacheImage() {
      this.cachedImage = new Image();
      this.cachedImage.src = this.canvas.toDataURL();
    }
  }, {
    key: "drawBackground",
    value: function drawBackground(color) {
      this.context.globalCompositeOperation = 'source-over';
      this.context.fillStyle = color;
      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);
    }
  }, {
    key: "drawFinalImage",
    value: function drawFinalImage(color) {
      var _this = this;
      return new Promise(function (resolve, reject) {
        _this.cachedImage = new Image();
        _this.cachedImage.onload = function () {
          _this.drawBackground(color);
          _this.renderCachedImage();
          resolve();
        };
        _this.cachedImage.onerror = function () {
          reject();
        };
        _this.cachedImage.src = _this.canvas.toDataURL();
      });
    }
  }, {
    key: "render",
    value: function render(keepContent) {
      if (this.isLocked) return;
      if (!keepContent) {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
      }
      this.renderCachedImage();
      this.renderActions();
    }
  }, {
    key: "renderCachedImage",
    value: function renderCachedImage() {
      if (this.cachedImage) {
        this.context.globalCompositeOperation = 'source-over';
        this.context.drawImage(this.cachedImage, 0, 0);
      }
    }
  }, {
    key: "renderActions",
    value: function renderActions() {
      for (var i = 0; i < this.currentIndex; i++) {
        var action = this.actionHistory[i];
        if (action) {
          this.renderAction(action, this.context);
        }
        if (this.actionHistory.length > this._options.actionLimit && i == 0) {
          this.cacheImage();
        }
      }
      this.renderAction(this.currentAction, this.context);
      this.clearOldActions();
    }
  }, {
    key: "clearOldActions",
    value: function clearOldActions() {
      if (this.actionHistory.length > this._options.actionLimit) {
        var diff = this.actionHistory.length - this._options.actionLimit;
        this.actionHistory = this.actionHistory.slice(-this._options.actionLimit);
        this.currentIndex -= diff;
      }
    }
  }, {
    key: "renderAction",
    value: function renderAction(action, context) {
      for (var i = 0; i < action.length; i++) {
        context.beginPath();
        context.globalCompositeOperation = action[i].erase ? 'destination-out' : 'source-over';
        context.lineJoin = 'round';
        if (action[i].drag && i) {
          context.moveTo(action[i - 1].x, action[i - 1].y);
        } else {
          context.moveTo(action[i].x, action[i].y);
        }
        context.lineTo(action[i].x - 0.01, action[i].y);
        context.closePath();
        context.strokeStyle = action[i].color;
        context.lineWidth = action[i].size;
        context.stroke();
      }
    }
  }, {
    key: "changeColor",
    value: function changeColor(color) {
      this.currentColor = color;
    }
  }, {
    key: "changeSize",
    value: function changeSize(size) {
      this.currentSize = size;
    }
  }, {
    key: "changeBackgroundColor",
    value: function changeBackgroundColor(color) {
      this.canvas.style.backgroundColor = color;
    }
  }, {
    key: "undo",
    value: function undo() {
      if (this.currentIndex <= 0) {
        return;
      }
      this.currentIndex--;
      this.render();
    }
  }, {
    key: "redo",
    value: function redo() {
      if (this.currentIndex > this.actionHistory.length - 1) {
        return;
      }
      this.currentIndex++;
      this.render();
    }
  }, {
    key: "canClear",
    value: function canClear() {
      return this.currentIndex > 0 || this.cachedImage;
    }
  }, {
    key: "canUndo",
    value: function canUndo() {
      return this.currentIndex > 0;
    }
  }, {
    key: "canRedo",
    value: function canRedo() {
      return this.currentIndex < this.actionHistory.length;
    }
  }, {
    key: "clearCanvas",
    value: function clearCanvas(force) {
      if (!this.canClear()) {
        return;
      }
      if (force) this.isLocked = false;
      this.reset();
      this.render();
      if (force) this.isLocked = true;
    }
  }, {
    key: "updateMousePosition",
    value: function updateMousePosition(e) {
      var rect = this.canvas.getBoundingClientRect();
      var borderTop = parseInt(getComputedStyle(this.canvas, null).getPropertyValue('border-top-width'));
      var borderLeft = parseInt(getComputedStyle(this.canvas, null).getPropertyValue('border-left-width'));
      this.mouse = {
        x: e.clientX - rect.left - borderLeft,
        y: e.clientY - rect.top - borderTop
      };
    }
  }, {
    key: "isMouseOnCanvas",
    value: function isMouseOnCanvas() {
      var x = this.mouse.x;
      var y = this.mouse.y;
      return x >= 0 && y >= 0 && x <= this.canvas.width && y <= this.canvas.height;
    }
  }, {
    key: "lock",
    value: function lock() {
      this.stopDrawing();
      this.isLocked = true;
    }
  }, {
    key: "unlock",
    value: function unlock() {
      this.isLocked = false;
    }
  }, {
    key: "getImageData",
    value: function getImageData() {
      return this.context.getImageData(0, 0, this.canvas.width, this.canvas.height).data;
    }
  }, {
    key: "canvasToDataURL",
    value: function canvasToDataURL(type, quality) {
      return this.canvas.toDataURL(type, quality);
    }
  }, {
    key: "drawCanvasData",
    value: function drawCanvasData(data) {
      var _this2 = this;
      if (!this.cachedImage) {
        this.cachedImage = new Image();
      }
      this.cachedImage.onload = function () {
        _this2.render(true);
      };
      this.cachedImage.src = data;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.actionHistory = [];
      this.currentAction = [];
      this.currentIndex = 0;
      this.cachedImage = null;
    }
  }, {
    key: "getCanvasData",
    value: function getCanvasData() {
      return this.canvas.toDataURL();
    }
  }]);
}();

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Colors = void 0;
var Colors = exports.Colors = Object.freeze({
  GREEN: 0,
  YELLOW: 1,
  ORANGE: 2,
  RED: 3,
  PURPLE: 4,
  PINK: 5,
  BLUE: 6,
  CYAN: 7,
  WHITE: 8,
  BLACK: 9
});

/***/ }),
/* 618 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a71c1aca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PurchaseCompleteDialog_vue__ = __webpack_require__(621);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(619)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PurchaseCompleteDialog_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a71c1aca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PurchaseCompleteDialog_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a71c1aca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PurchaseCompleteDialog_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/common/PurchaseCompleteDialog.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-a71c1aca", Component.options)
  } else {
    hotAPI.reload("data-v-a71c1aca", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(620);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("07f81f9b", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PurchaseCompleteDialog.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./PurchaseCompleteDialog.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#purchase-complete-dialog {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n}\n#purchase-complete-dialog .purchase-complete-wrapper {\n  background-color: #fff;\n  border-radius: 10px;\n  min-width: 280px;\n  padding: 15px;\n  z-index: 9999;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n#purchase-complete-dialog .purchase-complete-blocker {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n#purchase-complete-dialog .purchase-complete-title {\n    color: #000;\n    font-size: 24px;\n    margin: 0 0 10px 0;\n    text-align: center;\n}\n#purchase-complete-dialog .purchase-complete-message {\n    background-color: #F5F5F5;\n    color: #000;\n    position: relative;\n    padding: 20px;\n    text-align: center;\n    border-radius: 5px;\n}\n#purchase-complete-dialog .purchase-complete-product-name {\n    display: inline-block;\n}\n#purchase-complete-dialog .purchase-complete-product-name + .purchase-complete-product-name,\n#purchase-complete-dialog .purchase-complete-product-name > span + span {\n    margin-left: 5px;\n}\n#purchase-complete-dialog .purchase-complete-product-name > span {\n    display: inline-block;\n}\n#purchase-complete-dialog .purchase-complete-products {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n#purchase-complete-dialog .purchase-complete-products > li {\n    width: 120px;\n    display: inline-block;\n}\n#purchase-complete-dialog .purchase-complete-products > li > img {\n    width: 120px;\n    float: left;\n    border-radius: 50%;\n}\n#purchase-complete-dialog .purchase-complete-products > li.expanded {\n    width: 160px;\n}\n#purchase-complete-dialog .purchase-complete-products > li > img + span {\n    float: left;\n    font-size: 100px;\n    line-height: 90px;\n    color: #FFCC03;\n}\n#purchase-complete-dialog button.action-button {\n        width: 265px;\n        height: 50px;\n        display: block;\n        color: #fff;\n        background-color: #54c800;\n        border-color: #54c800;\n        font-size: 20px;\n        font-weight: bold;\n        line-height: 1.42857143;\n        text-align: center;\n        white-space: nowrap;\n        touch-action: manipulation;\n        cursor: pointer;\n        user-select: none;\n        background-image: none;\n        border: 1px solid transparent;\n        border-radius: 4px;\n        margin: 10px auto 0 auto;\n}\n#purchase-complete-dialog .social-buttons {\n        position: relative;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-evenly;\n        margin-top: 10px;\n}\n", ""]);

// exports


/***/ }),
/* 621 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.visible
    ? _c("div", { attrs: { id: "purchase-complete-dialog" } }, [
        _vm._m(0),
        _vm._v(" "),
        _c("div", { staticClass: "purchase-complete-wrapper" }, [
          _c("span", {
            staticClass: "leagues-inner-close sprite-main Close",
            on: {
              click: function($event) {
                return _vm.onClickClose()
              }
            }
          }),
          _vm._v(" "),
          _c("div", [
            _c("h4", { staticClass: "purchase-complete-title" }, [
              _vm._v(_vm._s(_vm.getPurchaseCompleteTitle()))
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "purchase-complete-message" }, [
            _vm.isError
              ? _c("h4", { staticClass: "purchase-complete-description" }, [
                  _vm._v(_vm._s(_vm.getPurchaseCompleteDescription()))
                ])
              : _vm._e(),
            _vm._v(" "),
            _c(
              "ul",
              {
                staticClass: "purchase-complete-products",
                attrs: { if: _vm.products.length > 0 }
              },
              _vm._l(_vm.validProducts, function(product, index) {
                return _c(
                  "li",
                  {
                    key: product.productId + "_" + index,
                    class: { expanded: index < product.length - 1 }
                  },
                  [
                    _c("img", {
                      style: {
                        borderColor: product.gamePlayInfo
                          ? product.gamePlayInfo.cellColor
                          : "none",
                        borderWidth: product.gamePlayInfo ? "4px" : "0",
                        borderStyle: product.gamePlayInfo ? "solid" : "none"
                      },
                      attrs: { src: _vm.getProductImage(product), alt: "" }
                    }),
                    _vm._v(" "),
                    index < product.length - 1
                      ? _c("span", [_vm._v("+")])
                      : _vm._e()
                  ]
                )
              }),
              0
            ),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "purchase-complete-label" },
              _vm._l(_vm.validProducts, function(product, index) {
                return _c(
                  "div",
                  {
                    key: product.productId,
                    staticClass: "purchase-complete-product-name"
                  },
                  [
                    _c("span", [_vm._v(_vm._s(_vm.getProductName(product)))]),
                    _vm._v(" "),
                    index < _vm.products.length - 1
                      ? _c("span", [_vm._v("+")])
                      : _vm._e()
                  ]
                )
              }),
              0
            ),
            _vm._v(" "),
            _vm.isSharable()
              ? _c("div", { staticClass: "social-buttons" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-primary btn-login btn-fb btn-share",
                      on: {
                        click: function($event) {
                          return _vm.share("facebook")
                        }
                      }
                    },
                    [
                      _c("span", {
                        staticClass: "social social-facebook facebook-icon"
                      }),
                      _vm._v(" "),
                      _c("span", { staticClass: "btn-text" }, [
                        _vm._v(_vm._s(_vm.shareButtonLabel))
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass:
                        "btn btn-primary btn-login btn-twitter btn-share",
                      on: {
                        click: function($event) {
                          return _vm.share("twitter")
                        }
                      }
                    },
                    [
                      _c("span", { staticClass: "social Twitter-icon" }),
                      _vm._v(" "),
                      _c("span", { staticClass: "btn-text" }, [
                        _vm._v(_vm._s(_vm.shareButtonLabel))
                      ])
                    ]
                  )
                ])
              : _vm._e(),
            _vm._v(" "),
            _vm.isPlayable()
              ? _c(
                  "button",
                  {
                    staticClass: "action-button",
                    on: { click: _vm.onClickPlay }
                  },
                  [_c("span", [_vm._v(_vm._s(_vm.buttonLabel))])]
                )
              : _vm._e()
          ])
        ])
      ])
    : _vm._e()
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "purchase-complete-blocker" }, [
      _c("div", { staticClass: "disabler" })
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-a71c1aca", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 622 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue__ = __webpack_require__(227);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0406cebc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinSaveDialog_vue__ = __webpack_require__(625);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(623)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SkinSaveDialog_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0406cebc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinSaveDialog_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0406cebc_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SkinSaveDialog_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/skineditor/SkinSaveDialog.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0406cebc", Component.options)
  } else {
    hotAPI.reload("data-v-0406cebc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(624);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("88f1f308", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SkinSaveDialog.vue", function() {
     var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SkinSaveDialog.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#skin-save-dialog {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n}\n#skin-save-dialog .skin-save-blocker {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background-color: rgba(0,0,0,0.1);\n}\n#skin-save-dialog .skin-save-dialog-title {\n    color: #666666;\n    font-size: 24px;\n    margin: 0 0 10px 0;\n    text-align: center;\n}\n#skin-save-dialog .skin-save-dialog-message {\n    background-color: #F5F5F5;\n    color: #7B7B7B;\n    position: relative;\n    padding: 20px;\n    text-align: center;\n    border-radius: 10px;\n}\n#skin-save-dialog .skin-save-dialog-message span {\n    width: 180px;\n    display: inline-block;\n    font-size: 18px;\n}\n#skin-save-dialog .skin-save-dialog-message input {\n    margin: 0 auto;\n    width: 90%;\n    height: 32px;\n    border-radius: 5px;\n    border-style: solid;\n    color: #7B7B7B;\n    border-color: #C1C1C1;\n    padding: 0 10px;\n    margin-top: 15px;\n    text-align: center;\n    font-size: 20px;\n}\n#skin-save-dialog .skin-save-dialog-message input::placeholder {\n  color: #C1C1C1;\n}\n#skin-save-dialog .skin-save-dialog-wrapper {\n    background-color: #fff;\n    border-radius: 10px;\n    width: 280px;\n    padding: 15px;\n    z-index: 9999;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n#skin-save-dialog .btn.save {\n    width: 40%;\n    background-color: #54c800;\n    border-color:#429f00;\n    color: #FFF;\n    margin: 15px auto 0;\n    display: block;\n    border-radius: 5px;\n}\n#skin-save-dialog .btn.save:hover {\n    background-color: #347F01;\n    border-color: #347F01;\n}\n#skin-save-dialog .buy-button {\n    position: relative;\n    width: 50%;\n    margin: 15px auto 0;\n    height: 40px;\n    border-radius: 5px;\n    color: #FFF;\n    font-size: 17px;\n    font-weight: bold;\n    text-align: center;\n    text-indent: 20px;\n    line-height: 30px;\n    cursor: pointer;\n    display: block;\n}\n#skin-save-dialog .buy-button.blue {\n    background-color: #56C0E1;\n}\n#skin-save-dialog .buy-button.green {\n    background-color: #54c800;\n}\n#skin-save-dialog .buy-button.blue:hover {\n    background-color: #497D92;\n    color: #FFF;\n}\n#skin-save-dialog .buy-button.green:hover {\n    background-color: #347F01;\n    color: #FFF;\n}\n#skin-save-dialog .buy-button .price {\n    position: absolute;\n    top: 0;\n    left: 25%;\n}\n#skin-save-dialog .dna-button-icon {\n    transform: matrix(0.8,0,0,0.8,-3,6);\n}\n\n", ""]);

// exports


/***/ }),
/* 625 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "drop" } }, [
    _vm.visible
      ? _c("div", { attrs: { id: "skin-save-dialog" } }, [
          _c("div", { staticClass: "skin-save-blocker" }, [
            _c("div", { staticClass: "disabler" })
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "skin-save-dialog-wrapper" }, [
            _c("span", {
              staticClass: "leagues-inner-close sprite-main Close",
              on: {
                click: function($event) {
                  return _vm.onClickCancel()
                }
              }
            }),
            _vm._v(" "),
            _c("div", [
              _c("h4", { staticClass: "skin-save-dialog-title" }, [
                _vm._v(_vm._s(_vm.getSaveTitle()))
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "skin-save-dialog-message" }, [
                _c("span", [_vm._v("Nice job! Name your skin and save it.")]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.name,
                      expression: "name"
                    }
                  ],
                  attrs: {
                    type: "text",
                    name: "skin-name",
                    id: "skin-name",
                    maxLength: _vm.getMaxNameSize(),
                    placeholder: "My Skin...",
                    pattern: "\\S+.*",
                    required: ""
                  },
                  domProps: { value: _vm.name },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.name = $event.target.value
                    }
                  }
                })
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "clearfix" }, [
                _vm.customSkinTokensCount > 0
                  ? _c(
                      "button",
                      {
                        staticClass: "btn btn-primary save btn-dialog green",
                        on: {
                          click: function($event) {
                            return _vm.onClickConfirm()
                          }
                        }
                      },
                      [_vm._v("Free")]
                    )
                  : _vm._e(),
                _vm._v(" "),
                !_vm.customSkinTokensCount || _vm.customSkinTokensCount <= 0
                  ? _c(
                      "button",
                      {
                        staticClass: "btn buy-button green",
                        on: {
                          click: function($event) {
                            return _vm.onClickConfirm()
                          }
                        }
                      },
                      [
                        _c("div", { staticClass: "price" }, [
                          _c("span", { staticClass: "price-value" }, [
                            _vm._v(_vm._s(_vm.getCustomSkinValue()))
                          ]),
                          _vm._v(" "),
                          _vm.getCustomSkinCurrency() == "dna"
                            ? _c("span", {
                                staticClass:
                                  "dna-small-icon sprite-main dna-button-icon price-icon"
                              })
                            : _vm.getCustomSkinCurrency() == "coin"
                            ? _c("span", {
                                staticClass:
                                  "dna-small-icon sprite-main coins-button-icon price-icon"
                              })
                            : _vm._e()
                        ])
                      ]
                    )
                  : _vm._e()
              ])
            ])
          ])
        ])
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-0406cebc", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 626 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue__ = __webpack_require__(228);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_58683e21_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ConfirmationDialog_vue__ = __webpack_require__(629);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(1);
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(627)
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-58683e21"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__["a" /* default */])(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ConfirmationDialog_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_58683e21_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ConfirmationDialog_vue__["a" /* render */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_58683e21_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ConfirmationDialog_vue__["b" /* staticRenderFns */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "html/src/js/home/menu/components/elements/ConfirmationDialog.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-58683e21", Component.options)
  } else {
    hotAPI.reload("data-v-58683e21", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(628);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(3).default
var update = add("29858244", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-58683e21\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ConfirmationDialog.vue", function() {
     var newContent = require("!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-58683e21\",\"scoped\":true,\"sourceMap\":false}!../../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ConfirmationDialog.vue");
     if(newContent.__esModule) newContent = newContent.default;
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)();
// imports


// module
exports.push([module.i, "\n#confirmation-app[data-v-58683e21]{\n    position: absolute;\n    z-index: 1499;\n}\n.confirmation-dialog[data-v-58683e21] {\n    top: 50%;\n    left: 50%;\n    width: 400px;\n    height: 300px;\n    position: absolute;\n    transform-origin: center top 0px;\n    transform: translate(-50%, -50%);\n    z-index: 1501;\n    background-color: white;\n    border-radius: 10px;\n    padding: 10px;\n    color: #666;\n}\n.confirmation-dialog-blocker .disabler[data-v-58683e21]{\n    z-index: 1500;\n}\n.confirmation-dialog .inner-close[data-v-58683e21] {\n    display: block;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    cursor: pointer;\n    margin: 10px;\n    opacity: 0.5;\n}\n.confirmation-dialog .inner-close[data-v-58683e21]:hover {\n    opacity: 1;\n}\n.confirmation-dialog .title[data-v-58683e21] {\n    font-size: 28px;\n    font-weight: bold;\n    width: 100%;\n    text-align: center;\n    margin: 15px 0;\n}\n.confirmation-dialog .description[data-v-58683e21] {\n    position: relative;\n    width: 80%;\n    height: 40%;\n    margin: 5px auto;\n    background-color: #EEE;\n    border-radius: 10px;\n    padding: 25px;\n    font-size: 18px;\n    font-weight: bold;\n    text-align: center;\n    display: table;\n}\n.confirmation-dialog span[data-v-58683e21] {\n    display: table-cell;\n    vertical-align: middle;\n}\n.clearfix[data-v-58683e21] {\n    display: flex;\n    justify-content: center;\n    padding-top: 10px;\n}\n.clearfix button[data-v-58683e21] {\n    margin: 0 10px;\n    width: 150px;\n    height: 50px;\n    font-size: 20px;\n    font-weight: bold;\n}\n.btn-confirm[data-v-58683e21] {\n    background-color: #54c800;\n    border-color: #54c800;\n}\n.btn-confirm[data-v-58683e21]:hover {\n    background-color: #347F01;\n    border-color: #347F01;\n}\n.btn-cancel[data-v-58683e21] {\n    background-color: #ed2d2d;\n    border-color: #ed2d2d;\n}\n.btn-cancel[data-v-58683e21]:hover {\n    background-color: #921919;\n    border-color: #921919;\n}\n", ""]);

// exports


/***/ }),
/* 629 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "confirmation-app" } }, [
    _c(
      "div",
      {
        staticClass: "confirmation-dialog-blocker",
        on: { click: _vm.cancelCallback }
      },
      [_c("div", { staticClass: "disabler" })]
    ),
    _vm._v(" "),
    _c("div", { staticClass: "confirmation-dialog" }, [
      _c("span", {
        staticClass: "inner-close sprite-main Close",
        on: { click: _vm.cancelCallback }
      }),
      _vm._v(" "),
      _c("div", {
        staticClass: "title",
        domProps: { innerHTML: _vm._s(_vm.title) }
      }),
      _vm._v(" "),
      _c("div", { staticClass: "description" }, [
        _c("span", { domProps: { innerHTML: _vm._s(_vm.description) } })
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "clearfix" }, [
        _c("button", {
          staticClass: "btn btn-primary btn-confirm",
          domProps: { innerHTML: _vm._s(_vm.confirmLabel) },
          on: { click: _vm.confirmCallback }
        }),
        _vm._v(" "),
        _c("button", {
          staticClass: "btn btn-primary btn-cancel",
          domProps: { innerHTML: _vm._s(_vm.cancelLabel) },
          on: { click: _vm.cancelCallback }
        })
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-58683e21", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Parser functions.
 */

var parserFunctions = __webpack_require__(631);
Object.keys(parserFunctions).forEach(function (k) { exports[k] = parserFunctions[k]; });

/**
 * Builder functions.
 */

var builderFunctions = __webpack_require__(638);
Object.keys(builderFunctions).forEach(function (k) { exports[k] = builderFunctions[k]; });


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/**
 * Module dependencies.
 */

const { DOMParser } = __webpack_require__(634);

/**
 * Module exports.
 */

exports.parse = parse;

var TEXT_NODE = 3;
var CDATA_NODE = 4;
var COMMENT_NODE = 8;


/**
 * We ignore raw text (usually whitespace), <!-- xml comments -->,
 * and raw CDATA nodes.
 *
 * @param {Element} node
 * @returns {Boolean}
 * @api private
 */

function shouldIgnoreNode (node) {
  return node.nodeType === TEXT_NODE
    || node.nodeType === COMMENT_NODE
    || node.nodeType === CDATA_NODE;
}

/**
 * Check if the node is empty. Some plist file has such node:
 * <key />
 * this node shoud be ignored.
 *
 * @see https://github.com/TooTallNate/plist.js/issues/66
 * @param {Element} node
 * @returns {Boolean}
 * @api private
 */
function isEmptyNode(node){
  if(!node.childNodes || node.childNodes.length === 0) {
    return true;
  } else {
    return false;
  }
}

function invariant(test, message) {
  if (!test) {
    throw new Error(message);
  }
}

/**
 * Parses a Plist XML string. Returns an Object.
 *
 * @param {String} xml - the XML String to decode
 * @returns {Mixed} the decoded value from the Plist XML
 * @api public
 */

function parse (xml) {
  var doc = new DOMParser().parseFromString(xml);
  invariant(
    doc.documentElement.nodeName === 'plist',
    'malformed document. First element should be <plist>'
  );
  var plist = parsePlistXML(doc.documentElement);

  // the root <plist> node gets interpreted as an Array,
  // so pull out the inner data first
  if (plist.length == 1) plist = plist[0];

  return plist;
}

/**
 * Convert an XML based plist document into a JSON representation.
 *
 * @param {Object} xml_node - current XML node in the plist
 * @returns {Mixed} built up JSON object
 * @api private
 */

function parsePlistXML (node) {
  var i, new_obj, key, val, new_arr, res, counter, type;

  if (!node)
    return null;

  if (node.nodeName === 'plist') {
    new_arr = [];
    if (isEmptyNode(node)) {
      return new_arr;
    }
    for (i=0; i < node.childNodes.length; i++) {
      if (!shouldIgnoreNode(node.childNodes[i])) {
        new_arr.push( parsePlistXML(node.childNodes[i]));
      }
    }
    return new_arr;
  } else if (node.nodeName === 'dict') {
    new_obj = {};
    key = null;
    counter = 0;
    if (isEmptyNode(node)) {
      return new_obj;
    }
    for (i=0; i < node.childNodes.length; i++) {
      if (shouldIgnoreNode(node.childNodes[i])) continue;
      if (counter % 2 === 0) {
        invariant(
          node.childNodes[i].nodeName === 'key',
          'Missing key while parsing <dict/>.'
        );
        key = parsePlistXML(node.childNodes[i]);
      } else {
        invariant(
          node.childNodes[i].nodeName !== 'key',
          'Unexpected key "'
            + parsePlistXML(node.childNodes[i])
            + '" while parsing <dict/>.'
        );
        new_obj[key] = parsePlistXML(node.childNodes[i]);
      }
      counter += 1;
    }
    if (counter % 2 === 1) {
      new_obj[key] = '';
    }
    
    return new_obj;

  } else if (node.nodeName === 'array') {
    new_arr = [];
    if (isEmptyNode(node)) {
      return new_arr;
    }
    for (i=0; i < node.childNodes.length; i++) {
      if (!shouldIgnoreNode(node.childNodes[i])) {
        res = parsePlistXML(node.childNodes[i]);
        if (null != res) new_arr.push(res);
      }
    }
    return new_arr;

  } else if (node.nodeName === '#text') {
    // TODO: what should we do with text types? (CDATA sections)

  } else if (node.nodeName === 'key') {
    if (isEmptyNode(node)) {
      return '';
    }

    invariant(
      node.childNodes[0].nodeValue !== '__proto__',
      '__proto__ keys can lead to prototype pollution. More details on CVE-2022-22912'
    );

    return node.childNodes[0].nodeValue;
  } else if (node.nodeName === 'string') {
    res = '';
    if (isEmptyNode(node)) {
      return res;
    }
    for (i=0; i < node.childNodes.length; i++) {
      var type = node.childNodes[i].nodeType;
      if (type === TEXT_NODE || type === CDATA_NODE) {
        res += node.childNodes[i].nodeValue;
      }
    }
    return res;

  } else if (node.nodeName === 'integer') {
    invariant(
      !isEmptyNode(node),
      'Cannot parse "" as integer.'
    );
    return parseInt(node.childNodes[0].nodeValue, 10);

  } else if (node.nodeName === 'real') {
    invariant(
      !isEmptyNode(node),
      'Cannot parse "" as real.'
    );
    res = '';
    for (i=0; i < node.childNodes.length; i++) {
      if (node.childNodes[i].nodeType === TEXT_NODE) {
        res += node.childNodes[i].nodeValue;
      }
    }
    return parseFloat(res);

  } else if (node.nodeName === 'data') {
    res = '';
    if (isEmptyNode(node)) {
      return Buffer.from(res, 'base64');
    }
    for (i=0; i < node.childNodes.length; i++) {
      if (node.childNodes[i].nodeType === TEXT_NODE) {
        res += node.childNodes[i].nodeValue.replace(/\s+/g, '');
      }
    }
    return Buffer.from(res, 'base64');

  } else if (node.nodeName === 'date') {
    invariant(
      !isEmptyNode(node),
      'Cannot parse "" as Date.'
    )
    return new Date(node.childNodes[0].nodeValue);

  } else if (node.nodeName === 'null') {
    return null;

  } else if (node.nodeName === 'true') {
    return true;

  } else if (node.nodeName === 'false') {
    return false;
  } else {
    throw new Error('Invalid PLIST tag ' + node.nodeName);
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(229).Buffer))

/***/ }),
/* 632 */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 633 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

var dom = __webpack_require__(231)
exports.DOMImplementation = dom.DOMImplementation
exports.XMLSerializer = dom.XMLSerializer
exports.DOMParser = __webpack_require__(635).DOMParser


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

var conventions = __webpack_require__(57);
var dom = __webpack_require__(231)
var entities = __webpack_require__(636);
var sax = __webpack_require__(637);

var DOMImplementation = dom.DOMImplementation;

var NAMESPACE = conventions.NAMESPACE;

var ParseError = sax.ParseError;
var XMLReader = sax.XMLReader;

/**
 * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:
 *
 * > XML parsed entities are often stored in computer files which,
 * > for editing convenience, are organized into lines.
 * > These lines are typically separated by some combination
 * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).
 * >
 * > To simplify the tasks of applications, the XML processor must behave
 * > as if it normalized all line breaks in external parsed entities (including the document entity)
 * > on input, before parsing, by translating all of the following to a single #xA character:
 * >
 * > 1. the two-character sequence #xD #xA
 * > 2. the two-character sequence #xD #x85
 * > 3. the single character #x85
 * > 4. the single character #x2028
 * > 5. any #xD character that is not immediately followed by #xA or #x85.
 *
 * @param {string} input
 * @returns {string}
 */
function normalizeLineEndings(input) {
	return input
		.replace(/\r[\n\u0085]/g, '\n')
		.replace(/[\r\u0085\u2028]/g, '\n')
}

/**
 * @typedef Locator
 * @property {number} [columnNumber]
 * @property {number} [lineNumber]
 */

/**
 * @typedef DOMParserOptions
 * @property {DOMHandler} [domBuilder]
 * @property {Function} [errorHandler]
 * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing
 * 						defaults to `normalizeLineEndings`
 * @property {Locator} [locator]
 * @property {Record<string, string>} [xmlns]
 *
 * @see normalizeLineEndings
 */

/**
 * The DOMParser interface provides the ability to parse XML or HTML source code
 * from a string into a DOM `Document`.
 *
 * _xmldom is different from the spec in that it allows an `options` parameter,
 * to override the default behavior._
 *
 * @param {DOMParserOptions} [options]
 * @constructor
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization
 */
function DOMParser(options){
	this.options = options ||{locator:{}};
}

DOMParser.prototype.parseFromString = function(source,mimeType){
	var options = this.options;
	var sax =  new XMLReader();
	var domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler
	var errorHandler = options.errorHandler;
	var locator = options.locator;
	var defaultNSMap = options.xmlns||{};
	var isHTML = /\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;
  	var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;
	if(locator){
		domBuilder.setDocumentLocator(locator)
	}

	sax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);
	sax.domBuilder = options.domBuilder || domBuilder;
	if(isHTML){
		defaultNSMap[''] = NAMESPACE.HTML;
	}
	defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;
	var normalize = options.normalizeLineEndings || normalizeLineEndings;
	if (source && typeof source === 'string') {
		sax.parse(
			normalize(source),
			defaultNSMap,
			entityMap
		)
	} else {
		sax.errorHandler.error('invalid doc source')
	}
	return domBuilder.doc;
}
function buildErrorHandler(errorImpl,domBuilder,locator){
	if(!errorImpl){
		if(domBuilder instanceof DOMHandler){
			return domBuilder;
		}
		errorImpl = domBuilder ;
	}
	var errorHandler = {}
	var isCallback = errorImpl instanceof Function;
	locator = locator||{}
	function build(key){
		var fn = errorImpl[key];
		if(!fn && isCallback){
			fn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;
		}
		errorHandler[key] = fn && function(msg){
			fn('[xmldom '+key+']\t'+msg+_locator(locator));
		}||function(){};
	}
	build('warning');
	build('error');
	build('fatalError');
	return errorHandler;
}

//console.log('#\n\n\n\n\n\n\n####')
/**
 * +ContentHandler+ErrorHandler
 * +LexicalHandler+EntityResolver2
 * -DeclHandler-DTDHandler
 *
 * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
 * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
 * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
 */
function DOMHandler() {
    this.cdata = false;
}
function position(locator,node){
	node.lineNumber = locator.lineNumber;
	node.columnNumber = locator.columnNumber;
}
/**
 * @see org.xml.sax.ContentHandler#startDocument
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
 */
DOMHandler.prototype = {
	startDocument : function() {
    	this.doc = new DOMImplementation().createDocument(null, null, null);
    	if (this.locator) {
        	this.doc.documentURI = this.locator.systemId;
    	}
	},
	startElement:function(namespaceURI, localName, qName, attrs) {
		var doc = this.doc;
	    var el = doc.createElementNS(namespaceURI, qName||localName);
	    var len = attrs.length;
	    appendElement(this, el);
	    this.currentElement = el;

		this.locator && position(this.locator,el)
	    for (var i = 0 ; i < len; i++) {
	        var namespaceURI = attrs.getURI(i);
	        var value = attrs.getValue(i);
	        var qName = attrs.getQName(i);
			var attr = doc.createAttributeNS(namespaceURI, qName);
			this.locator &&position(attrs.getLocator(i),attr);
			attr.value = attr.nodeValue = value;
			el.setAttributeNode(attr)
	    }
	},
	endElement:function(namespaceURI, localName, qName) {
		var current = this.currentElement
		var tagName = current.tagName;
		this.currentElement = current.parentNode;
	},
	startPrefixMapping:function(prefix, uri) {
	},
	endPrefixMapping:function(prefix) {
	},
	processingInstruction:function(target, data) {
	    var ins = this.doc.createProcessingInstruction(target, data);
	    this.locator && position(this.locator,ins)
	    appendElement(this, ins);
	},
	ignorableWhitespace:function(ch, start, length) {
	},
	characters:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
		//console.log(chars)
		if(chars){
			if (this.cdata) {
				var charNode = this.doc.createCDATASection(chars);
			} else {
				var charNode = this.doc.createTextNode(chars);
			}
			if(this.currentElement){
				this.currentElement.appendChild(charNode);
			}else if(/^\s*$/.test(chars)){
				this.doc.appendChild(charNode);
				//process xml
			}
			this.locator && position(this.locator,charNode)
		}
	},
	skippedEntity:function(name) {
	},
	endDocument:function() {
		this.doc.normalize();
	},
	setDocumentLocator:function (locator) {
	    if(this.locator = locator){// && !('lineNumber' in locator)){
	    	locator.lineNumber = 0;
	    }
	},
	//LexicalHandler
	comment:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
	    var comm = this.doc.createComment(chars);
	    this.locator && position(this.locator,comm)
	    appendElement(this, comm);
	},

	startCDATA:function() {
	    //used in characters() methods
	    this.cdata = true;
	},
	endCDATA:function() {
	    this.cdata = false;
	},

	startDTD:function(name, publicId, systemId) {
		var impl = this.doc.implementation;
	    if (impl && impl.createDocumentType) {
	        var dt = impl.createDocumentType(name, publicId, systemId);
	        this.locator && position(this.locator,dt)
	        appendElement(this, dt);
					this.doc.doctype = dt;
	    }
	},
	/**
	 * @see org.xml.sax.ErrorHandler
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
	 */
	warning:function(error) {
		console.warn('[xmldom warning]\t'+error,_locator(this.locator));
	},
	error:function(error) {
		console.error('[xmldom error]\t'+error,_locator(this.locator));
	},
	fatalError:function(error) {
		throw new ParseError(error, this.locator);
	}
}
function _locator(l){
	if(l){
		return '\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'
	}
}
function _toString(chars,start,length){
	if(typeof chars == 'string'){
		return chars.substr(start,length)
	}else{//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
		if(chars.length >= start+length || start){
			return new java.lang.String(chars,start,length)+'';
		}
		return chars;
	}
}

/*
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
 * used method of org.xml.sax.ext.LexicalHandler:
 *  #comment(chars, start, length)
 *  #startCDATA()
 *  #endCDATA()
 *  #startDTD(name, publicId, systemId)
 *
 *
 * IGNORED method of org.xml.sax.ext.LexicalHandler:
 *  #endDTD()
 *  #startEntity(name)
 *  #endEntity(name)
 *
 *
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
 * IGNORED method of org.xml.sax.ext.DeclHandler
 * 	#attributeDecl(eName, aName, type, mode, value)
 *  #elementDecl(name, model)
 *  #externalEntityDecl(name, publicId, systemId)
 *  #internalEntityDecl(name, value)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
 * IGNORED method of org.xml.sax.EntityResolver2
 *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
 *  #resolveEntity(publicId, systemId)
 *  #getExternalSubset(name, baseURI)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
 * IGNORED method of org.xml.sax.DTDHandler
 *  #notationDecl(name, publicId, systemId) {};
 *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
 */
"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){
	DOMHandler.prototype[key] = function(){return null}
})

/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */
function appendElement (hander,node) {
    if (!hander.currentElement) {
        hander.doc.appendChild(node);
    } else {
        hander.currentElement.appendChild(node);
    }
}//appendChild and setAttributeNS are preformance key

exports.__DOMHandler = DOMHandler;
exports.normalizeLineEndings = normalizeLineEndings;
exports.DOMParser = DOMParser;


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var freeze = __webpack_require__(57).freeze;

/**
 * The entities that are predefined in every XML document.
 *
 * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1
 * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0
 * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia
 */
exports.XML_ENTITIES = freeze({
	amp: '&',
	apos: "'",
	gt: '>',
	lt: '<',
	quot: '"',
});

/**
 * A map of all entities that are detected in an HTML document.
 * They contain all entries from `XML_ENTITIES`.
 *
 * @see XML_ENTITIES
 * @see DOMParser.parseFromString
 * @see DOMImplementation.prototype.createHTMLDocument
 * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec
 * @see https://html.spec.whatwg.org/entities.json JSON
 * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names
 * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML
 * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)
 * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)
 */
exports.HTML_ENTITIES = freeze({
	Aacute: '\u00C1',
	aacute: '\u00E1',
	Abreve: '\u0102',
	abreve: '\u0103',
	ac: '\u223E',
	acd: '\u223F',
	acE: '\u223E\u0333',
	Acirc: '\u00C2',
	acirc: '\u00E2',
	acute: '\u00B4',
	Acy: '\u0410',
	acy: '\u0430',
	AElig: '\u00C6',
	aelig: '\u00E6',
	af: '\u2061',
	Afr: '\uD835\uDD04',
	afr: '\uD835\uDD1E',
	Agrave: '\u00C0',
	agrave: '\u00E0',
	alefsym: '\u2135',
	aleph: '\u2135',
	Alpha: '\u0391',
	alpha: '\u03B1',
	Amacr: '\u0100',
	amacr: '\u0101',
	amalg: '\u2A3F',
	AMP: '\u0026',
	amp: '\u0026',
	And: '\u2A53',
	and: '\u2227',
	andand: '\u2A55',
	andd: '\u2A5C',
	andslope: '\u2A58',
	andv: '\u2A5A',
	ang: '\u2220',
	ange: '\u29A4',
	angle: '\u2220',
	angmsd: '\u2221',
	angmsdaa: '\u29A8',
	angmsdab: '\u29A9',
	angmsdac: '\u29AA',
	angmsdad: '\u29AB',
	angmsdae: '\u29AC',
	angmsdaf: '\u29AD',
	angmsdag: '\u29AE',
	angmsdah: '\u29AF',
	angrt: '\u221F',
	angrtvb: '\u22BE',
	angrtvbd: '\u299D',
	angsph: '\u2222',
	angst: '\u00C5',
	angzarr: '\u237C',
	Aogon: '\u0104',
	aogon: '\u0105',
	Aopf: '\uD835\uDD38',
	aopf: '\uD835\uDD52',
	ap: '\u2248',
	apacir: '\u2A6F',
	apE: '\u2A70',
	ape: '\u224A',
	apid: '\u224B',
	apos: '\u0027',
	ApplyFunction: '\u2061',
	approx: '\u2248',
	approxeq: '\u224A',
	Aring: '\u00C5',
	aring: '\u00E5',
	Ascr: '\uD835\uDC9C',
	ascr: '\uD835\uDCB6',
	Assign: '\u2254',
	ast: '\u002A',
	asymp: '\u2248',
	asympeq: '\u224D',
	Atilde: '\u00C3',
	atilde: '\u00E3',
	Auml: '\u00C4',
	auml: '\u00E4',
	awconint: '\u2233',
	awint: '\u2A11',
	backcong: '\u224C',
	backepsilon: '\u03F6',
	backprime: '\u2035',
	backsim: '\u223D',
	backsimeq: '\u22CD',
	Backslash: '\u2216',
	Barv: '\u2AE7',
	barvee: '\u22BD',
	Barwed: '\u2306',
	barwed: '\u2305',
	barwedge: '\u2305',
	bbrk: '\u23B5',
	bbrktbrk: '\u23B6',
	bcong: '\u224C',
	Bcy: '\u0411',
	bcy: '\u0431',
	bdquo: '\u201E',
	becaus: '\u2235',
	Because: '\u2235',
	because: '\u2235',
	bemptyv: '\u29B0',
	bepsi: '\u03F6',
	bernou: '\u212C',
	Bernoullis: '\u212C',
	Beta: '\u0392',
	beta: '\u03B2',
	beth: '\u2136',
	between: '\u226C',
	Bfr: '\uD835\uDD05',
	bfr: '\uD835\uDD1F',
	bigcap: '\u22C2',
	bigcirc: '\u25EF',
	bigcup: '\u22C3',
	bigodot: '\u2A00',
	bigoplus: '\u2A01',
	bigotimes: '\u2A02',
	bigsqcup: '\u2A06',
	bigstar: '\u2605',
	bigtriangledown: '\u25BD',
	bigtriangleup: '\u25B3',
	biguplus: '\u2A04',
	bigvee: '\u22C1',
	bigwedge: '\u22C0',
	bkarow: '\u290D',
	blacklozenge: '\u29EB',
	blacksquare: '\u25AA',
	blacktriangle: '\u25B4',
	blacktriangledown: '\u25BE',
	blacktriangleleft: '\u25C2',
	blacktriangleright: '\u25B8',
	blank: '\u2423',
	blk12: '\u2592',
	blk14: '\u2591',
	blk34: '\u2593',
	block: '\u2588',
	bne: '\u003D\u20E5',
	bnequiv: '\u2261\u20E5',
	bNot: '\u2AED',
	bnot: '\u2310',
	Bopf: '\uD835\uDD39',
	bopf: '\uD835\uDD53',
	bot: '\u22A5',
	bottom: '\u22A5',
	bowtie: '\u22C8',
	boxbox: '\u29C9',
	boxDL: '\u2557',
	boxDl: '\u2556',
	boxdL: '\u2555',
	boxdl: '\u2510',
	boxDR: '\u2554',
	boxDr: '\u2553',
	boxdR: '\u2552',
	boxdr: '\u250C',
	boxH: '\u2550',
	boxh: '\u2500',
	boxHD: '\u2566',
	boxHd: '\u2564',
	boxhD: '\u2565',
	boxhd: '\u252C',
	boxHU: '\u2569',
	boxHu: '\u2567',
	boxhU: '\u2568',
	boxhu: '\u2534',
	boxminus: '\u229F',
	boxplus: '\u229E',
	boxtimes: '\u22A0',
	boxUL: '\u255D',
	boxUl: '\u255C',
	boxuL: '\u255B',
	boxul: '\u2518',
	boxUR: '\u255A',
	boxUr: '\u2559',
	boxuR: '\u2558',
	boxur: '\u2514',
	boxV: '\u2551',
	boxv: '\u2502',
	boxVH: '\u256C',
	boxVh: '\u256B',
	boxvH: '\u256A',
	boxvh: '\u253C',
	boxVL: '\u2563',
	boxVl: '\u2562',
	boxvL: '\u2561',
	boxvl: '\u2524',
	boxVR: '\u2560',
	boxVr: '\u255F',
	boxvR: '\u255E',
	boxvr: '\u251C',
	bprime: '\u2035',
	Breve: '\u02D8',
	breve: '\u02D8',
	brvbar: '\u00A6',
	Bscr: '\u212C',
	bscr: '\uD835\uDCB7',
	bsemi: '\u204F',
	bsim: '\u223D',
	bsime: '\u22CD',
	bsol: '\u005C',
	bsolb: '\u29C5',
	bsolhsub: '\u27C8',
	bull: '\u2022',
	bullet: '\u2022',
	bump: '\u224E',
	bumpE: '\u2AAE',
	bumpe: '\u224F',
	Bumpeq: '\u224E',
	bumpeq: '\u224F',
	Cacute: '\u0106',
	cacute: '\u0107',
	Cap: '\u22D2',
	cap: '\u2229',
	capand: '\u2A44',
	capbrcup: '\u2A49',
	capcap: '\u2A4B',
	capcup: '\u2A47',
	capdot: '\u2A40',
	CapitalDifferentialD: '\u2145',
	caps: '\u2229\uFE00',
	caret: '\u2041',
	caron: '\u02C7',
	Cayleys: '\u212D',
	ccaps: '\u2A4D',
	Ccaron: '\u010C',
	ccaron: '\u010D',
	Ccedil: '\u00C7',
	ccedil: '\u00E7',
	Ccirc: '\u0108',
	ccirc: '\u0109',
	Cconint: '\u2230',
	ccups: '\u2A4C',
	ccupssm: '\u2A50',
	Cdot: '\u010A',
	cdot: '\u010B',
	cedil: '\u00B8',
	Cedilla: '\u00B8',
	cemptyv: '\u29B2',
	cent: '\u00A2',
	CenterDot: '\u00B7',
	centerdot: '\u00B7',
	Cfr: '\u212D',
	cfr: '\uD835\uDD20',
	CHcy: '\u0427',
	chcy: '\u0447',
	check: '\u2713',
	checkmark: '\u2713',
	Chi: '\u03A7',
	chi: '\u03C7',
	cir: '\u25CB',
	circ: '\u02C6',
	circeq: '\u2257',
	circlearrowleft: '\u21BA',
	circlearrowright: '\u21BB',
	circledast: '\u229B',
	circledcirc: '\u229A',
	circleddash: '\u229D',
	CircleDot: '\u2299',
	circledR: '\u00AE',
	circledS: '\u24C8',
	CircleMinus: '\u2296',
	CirclePlus: '\u2295',
	CircleTimes: '\u2297',
	cirE: '\u29C3',
	cire: '\u2257',
	cirfnint: '\u2A10',
	cirmid: '\u2AEF',
	cirscir: '\u29C2',
	ClockwiseContourIntegral: '\u2232',
	CloseCurlyDoubleQuote: '\u201D',
	CloseCurlyQuote: '\u2019',
	clubs: '\u2663',
	clubsuit: '\u2663',
	Colon: '\u2237',
	colon: '\u003A',
	Colone: '\u2A74',
	colone: '\u2254',
	coloneq: '\u2254',
	comma: '\u002C',
	commat: '\u0040',
	comp: '\u2201',
	compfn: '\u2218',
	complement: '\u2201',
	complexes: '\u2102',
	cong: '\u2245',
	congdot: '\u2A6D',
	Congruent: '\u2261',
	Conint: '\u222F',
	conint: '\u222E',
	ContourIntegral: '\u222E',
	Copf: '\u2102',
	copf: '\uD835\uDD54',
	coprod: '\u2210',
	Coproduct: '\u2210',
	COPY: '\u00A9',
	copy: '\u00A9',
	copysr: '\u2117',
	CounterClockwiseContourIntegral: '\u2233',
	crarr: '\u21B5',
	Cross: '\u2A2F',
	cross: '\u2717',
	Cscr: '\uD835\uDC9E',
	cscr: '\uD835\uDCB8',
	csub: '\u2ACF',
	csube: '\u2AD1',
	csup: '\u2AD0',
	csupe: '\u2AD2',
	ctdot: '\u22EF',
	cudarrl: '\u2938',
	cudarrr: '\u2935',
	cuepr: '\u22DE',
	cuesc: '\u22DF',
	cularr: '\u21B6',
	cularrp: '\u293D',
	Cup: '\u22D3',
	cup: '\u222A',
	cupbrcap: '\u2A48',
	CupCap: '\u224D',
	cupcap: '\u2A46',
	cupcup: '\u2A4A',
	cupdot: '\u228D',
	cupor: '\u2A45',
	cups: '\u222A\uFE00',
	curarr: '\u21B7',
	curarrm: '\u293C',
	curlyeqprec: '\u22DE',
	curlyeqsucc: '\u22DF',
	curlyvee: '\u22CE',
	curlywedge: '\u22CF',
	curren: '\u00A4',
	curvearrowleft: '\u21B6',
	curvearrowright: '\u21B7',
	cuvee: '\u22CE',
	cuwed: '\u22CF',
	cwconint: '\u2232',
	cwint: '\u2231',
	cylcty: '\u232D',
	Dagger: '\u2021',
	dagger: '\u2020',
	daleth: '\u2138',
	Darr: '\u21A1',
	dArr: '\u21D3',
	darr: '\u2193',
	dash: '\u2010',
	Dashv: '\u2AE4',
	dashv: '\u22A3',
	dbkarow: '\u290F',
	dblac: '\u02DD',
	Dcaron: '\u010E',
	dcaron: '\u010F',
	Dcy: '\u0414',
	dcy: '\u0434',
	DD: '\u2145',
	dd: '\u2146',
	ddagger: '\u2021',
	ddarr: '\u21CA',
	DDotrahd: '\u2911',
	ddotseq: '\u2A77',
	deg: '\u00B0',
	Del: '\u2207',
	Delta: '\u0394',
	delta: '\u03B4',
	demptyv: '\u29B1',
	dfisht: '\u297F',
	Dfr: '\uD835\uDD07',
	dfr: '\uD835\uDD21',
	dHar: '\u2965',
	dharl: '\u21C3',
	dharr: '\u21C2',
	DiacriticalAcute: '\u00B4',
	DiacriticalDot: '\u02D9',
	DiacriticalDoubleAcute: '\u02DD',
	DiacriticalGrave: '\u0060',
	DiacriticalTilde: '\u02DC',
	diam: '\u22C4',
	Diamond: '\u22C4',
	diamond: '\u22C4',
	diamondsuit: '\u2666',
	diams: '\u2666',
	die: '\u00A8',
	DifferentialD: '\u2146',
	digamma: '\u03DD',
	disin: '\u22F2',
	div: '\u00F7',
	divide: '\u00F7',
	divideontimes: '\u22C7',
	divonx: '\u22C7',
	DJcy: '\u0402',
	djcy: '\u0452',
	dlcorn: '\u231E',
	dlcrop: '\u230D',
	dollar: '\u0024',
	Dopf: '\uD835\uDD3B',
	dopf: '\uD835\uDD55',
	Dot: '\u00A8',
	dot: '\u02D9',
	DotDot: '\u20DC',
	doteq: '\u2250',
	doteqdot: '\u2251',
	DotEqual: '\u2250',
	dotminus: '\u2238',
	dotplus: '\u2214',
	dotsquare: '\u22A1',
	doublebarwedge: '\u2306',
	DoubleContourIntegral: '\u222F',
	DoubleDot: '\u00A8',
	DoubleDownArrow: '\u21D3',
	DoubleLeftArrow: '\u21D0',
	DoubleLeftRightArrow: '\u21D4',
	DoubleLeftTee: '\u2AE4',
	DoubleLongLeftArrow: '\u27F8',
	DoubleLongLeftRightArrow: '\u27FA',
	DoubleLongRightArrow: '\u27F9',
	DoubleRightArrow: '\u21D2',
	DoubleRightTee: '\u22A8',
	DoubleUpArrow: '\u21D1',
	DoubleUpDownArrow: '\u21D5',
	DoubleVerticalBar: '\u2225',
	DownArrow: '\u2193',
	Downarrow: '\u21D3',
	downarrow: '\u2193',
	DownArrowBar: '\u2913',
	DownArrowUpArrow: '\u21F5',
	DownBreve: '\u0311',
	downdownarrows: '\u21CA',
	downharpoonleft: '\u21C3',
	downharpoonright: '\u21C2',
	DownLeftRightVector: '\u2950',
	DownLeftTeeVector: '\u295E',
	DownLeftVector: '\u21BD',
	DownLeftVectorBar: '\u2956',
	DownRightTeeVector: '\u295F',
	DownRightVector: '\u21C1',
	DownRightVectorBar: '\u2957',
	DownTee: '\u22A4',
	DownTeeArrow: '\u21A7',
	drbkarow: '\u2910',
	drcorn: '\u231F',
	drcrop: '\u230C',
	Dscr: '\uD835\uDC9F',
	dscr: '\uD835\uDCB9',
	DScy: '\u0405',
	dscy: '\u0455',
	dsol: '\u29F6',
	Dstrok: '\u0110',
	dstrok: '\u0111',
	dtdot: '\u22F1',
	dtri: '\u25BF',
	dtrif: '\u25BE',
	duarr: '\u21F5',
	duhar: '\u296F',
	dwangle: '\u29A6',
	DZcy: '\u040F',
	dzcy: '\u045F',
	dzigrarr: '\u27FF',
	Eacute: '\u00C9',
	eacute: '\u00E9',
	easter: '\u2A6E',
	Ecaron: '\u011A',
	ecaron: '\u011B',
	ecir: '\u2256',
	Ecirc: '\u00CA',
	ecirc: '\u00EA',
	ecolon: '\u2255',
	Ecy: '\u042D',
	ecy: '\u044D',
	eDDot: '\u2A77',
	Edot: '\u0116',
	eDot: '\u2251',
	edot: '\u0117',
	ee: '\u2147',
	efDot: '\u2252',
	Efr: '\uD835\uDD08',
	efr: '\uD835\uDD22',
	eg: '\u2A9A',
	Egrave: '\u00C8',
	egrave: '\u00E8',
	egs: '\u2A96',
	egsdot: '\u2A98',
	el: '\u2A99',
	Element: '\u2208',
	elinters: '\u23E7',
	ell: '\u2113',
	els: '\u2A95',
	elsdot: '\u2A97',
	Emacr: '\u0112',
	emacr: '\u0113',
	empty: '\u2205',
	emptyset: '\u2205',
	EmptySmallSquare: '\u25FB',
	emptyv: '\u2205',
	EmptyVerySmallSquare: '\u25AB',
	emsp: '\u2003',
	emsp13: '\u2004',
	emsp14: '\u2005',
	ENG: '\u014A',
	eng: '\u014B',
	ensp: '\u2002',
	Eogon: '\u0118',
	eogon: '\u0119',
	Eopf: '\uD835\uDD3C',
	eopf: '\uD835\uDD56',
	epar: '\u22D5',
	eparsl: '\u29E3',
	eplus: '\u2A71',
	epsi: '\u03B5',
	Epsilon: '\u0395',
	epsilon: '\u03B5',
	epsiv: '\u03F5',
	eqcirc: '\u2256',
	eqcolon: '\u2255',
	eqsim: '\u2242',
	eqslantgtr: '\u2A96',
	eqslantless: '\u2A95',
	Equal: '\u2A75',
	equals: '\u003D',
	EqualTilde: '\u2242',
	equest: '\u225F',
	Equilibrium: '\u21CC',
	equiv: '\u2261',
	equivDD: '\u2A78',
	eqvparsl: '\u29E5',
	erarr: '\u2971',
	erDot: '\u2253',
	Escr: '\u2130',
	escr: '\u212F',
	esdot: '\u2250',
	Esim: '\u2A73',
	esim: '\u2242',
	Eta: '\u0397',
	eta: '\u03B7',
	ETH: '\u00D0',
	eth: '\u00F0',
	Euml: '\u00CB',
	euml: '\u00EB',
	euro: '\u20AC',
	excl: '\u0021',
	exist: '\u2203',
	Exists: '\u2203',
	expectation: '\u2130',
	ExponentialE: '\u2147',
	exponentiale: '\u2147',
	fallingdotseq: '\u2252',
	Fcy: '\u0424',
	fcy: '\u0444',
	female: '\u2640',
	ffilig: '\uFB03',
	fflig: '\uFB00',
	ffllig: '\uFB04',
	Ffr: '\uD835\uDD09',
	ffr: '\uD835\uDD23',
	filig: '\uFB01',
	FilledSmallSquare: '\u25FC',
	FilledVerySmallSquare: '\u25AA',
	fjlig: '\u0066\u006A',
	flat: '\u266D',
	fllig: '\uFB02',
	fltns: '\u25B1',
	fnof: '\u0192',
	Fopf: '\uD835\uDD3D',
	fopf: '\uD835\uDD57',
	ForAll: '\u2200',
	forall: '\u2200',
	fork: '\u22D4',
	forkv: '\u2AD9',
	Fouriertrf: '\u2131',
	fpartint: '\u2A0D',
	frac12: '\u00BD',
	frac13: '\u2153',
	frac14: '\u00BC',
	frac15: '\u2155',
	frac16: '\u2159',
	frac18: '\u215B',
	frac23: '\u2154',
	frac25: '\u2156',
	frac34: '\u00BE',
	frac35: '\u2157',
	frac38: '\u215C',
	frac45: '\u2158',
	frac56: '\u215A',
	frac58: '\u215D',
	frac78: '\u215E',
	frasl: '\u2044',
	frown: '\u2322',
	Fscr: '\u2131',
	fscr: '\uD835\uDCBB',
	gacute: '\u01F5',
	Gamma: '\u0393',
	gamma: '\u03B3',
	Gammad: '\u03DC',
	gammad: '\u03DD',
	gap: '\u2A86',
	Gbreve: '\u011E',
	gbreve: '\u011F',
	Gcedil: '\u0122',
	Gcirc: '\u011C',
	gcirc: '\u011D',
	Gcy: '\u0413',
	gcy: '\u0433',
	Gdot: '\u0120',
	gdot: '\u0121',
	gE: '\u2267',
	ge: '\u2265',
	gEl: '\u2A8C',
	gel: '\u22DB',
	geq: '\u2265',
	geqq: '\u2267',
	geqslant: '\u2A7E',
	ges: '\u2A7E',
	gescc: '\u2AA9',
	gesdot: '\u2A80',
	gesdoto: '\u2A82',
	gesdotol: '\u2A84',
	gesl: '\u22DB\uFE00',
	gesles: '\u2A94',
	Gfr: '\uD835\uDD0A',
	gfr: '\uD835\uDD24',
	Gg: '\u22D9',
	gg: '\u226B',
	ggg: '\u22D9',
	gimel: '\u2137',
	GJcy: '\u0403',
	gjcy: '\u0453',
	gl: '\u2277',
	gla: '\u2AA5',
	glE: '\u2A92',
	glj: '\u2AA4',
	gnap: '\u2A8A',
	gnapprox: '\u2A8A',
	gnE: '\u2269',
	gne: '\u2A88',
	gneq: '\u2A88',
	gneqq: '\u2269',
	gnsim: '\u22E7',
	Gopf: '\uD835\uDD3E',
	gopf: '\uD835\uDD58',
	grave: '\u0060',
	GreaterEqual: '\u2265',
	GreaterEqualLess: '\u22DB',
	GreaterFullEqual: '\u2267',
	GreaterGreater: '\u2AA2',
	GreaterLess: '\u2277',
	GreaterSlantEqual: '\u2A7E',
	GreaterTilde: '\u2273',
	Gscr: '\uD835\uDCA2',
	gscr: '\u210A',
	gsim: '\u2273',
	gsime: '\u2A8E',
	gsiml: '\u2A90',
	Gt: '\u226B',
	GT: '\u003E',
	gt: '\u003E',
	gtcc: '\u2AA7',
	gtcir: '\u2A7A',
	gtdot: '\u22D7',
	gtlPar: '\u2995',
	gtquest: '\u2A7C',
	gtrapprox: '\u2A86',
	gtrarr: '\u2978',
	gtrdot: '\u22D7',
	gtreqless: '\u22DB',
	gtreqqless: '\u2A8C',
	gtrless: '\u2277',
	gtrsim: '\u2273',
	gvertneqq: '\u2269\uFE00',
	gvnE: '\u2269\uFE00',
	Hacek: '\u02C7',
	hairsp: '\u200A',
	half: '\u00BD',
	hamilt: '\u210B',
	HARDcy: '\u042A',
	hardcy: '\u044A',
	hArr: '\u21D4',
	harr: '\u2194',
	harrcir: '\u2948',
	harrw: '\u21AD',
	Hat: '\u005E',
	hbar: '\u210F',
	Hcirc: '\u0124',
	hcirc: '\u0125',
	hearts: '\u2665',
	heartsuit: '\u2665',
	hellip: '\u2026',
	hercon: '\u22B9',
	Hfr: '\u210C',
	hfr: '\uD835\uDD25',
	HilbertSpace: '\u210B',
	hksearow: '\u2925',
	hkswarow: '\u2926',
	hoarr: '\u21FF',
	homtht: '\u223B',
	hookleftarrow: '\u21A9',
	hookrightarrow: '\u21AA',
	Hopf: '\u210D',
	hopf: '\uD835\uDD59',
	horbar: '\u2015',
	HorizontalLine: '\u2500',
	Hscr: '\u210B',
	hscr: '\uD835\uDCBD',
	hslash: '\u210F',
	Hstrok: '\u0126',
	hstrok: '\u0127',
	HumpDownHump: '\u224E',
	HumpEqual: '\u224F',
	hybull: '\u2043',
	hyphen: '\u2010',
	Iacute: '\u00CD',
	iacute: '\u00ED',
	ic: '\u2063',
	Icirc: '\u00CE',
	icirc: '\u00EE',
	Icy: '\u0418',
	icy: '\u0438',
	Idot: '\u0130',
	IEcy: '\u0415',
	iecy: '\u0435',
	iexcl: '\u00A1',
	iff: '\u21D4',
	Ifr: '\u2111',
	ifr: '\uD835\uDD26',
	Igrave: '\u00CC',
	igrave: '\u00EC',
	ii: '\u2148',
	iiiint: '\u2A0C',
	iiint: '\u222D',
	iinfin: '\u29DC',
	iiota: '\u2129',
	IJlig: '\u0132',
	ijlig: '\u0133',
	Im: '\u2111',
	Imacr: '\u012A',
	imacr: '\u012B',
	image: '\u2111',
	ImaginaryI: '\u2148',
	imagline: '\u2110',
	imagpart: '\u2111',
	imath: '\u0131',
	imof: '\u22B7',
	imped: '\u01B5',
	Implies: '\u21D2',
	in: '\u2208',
	incare: '\u2105',
	infin: '\u221E',
	infintie: '\u29DD',
	inodot: '\u0131',
	Int: '\u222C',
	int: '\u222B',
	intcal: '\u22BA',
	integers: '\u2124',
	Integral: '\u222B',
	intercal: '\u22BA',
	Intersection: '\u22C2',
	intlarhk: '\u2A17',
	intprod: '\u2A3C',
	InvisibleComma: '\u2063',
	InvisibleTimes: '\u2062',
	IOcy: '\u0401',
	iocy: '\u0451',
	Iogon: '\u012E',
	iogon: '\u012F',
	Iopf: '\uD835\uDD40',
	iopf: '\uD835\uDD5A',
	Iota: '\u0399',
	iota: '\u03B9',
	iprod: '\u2A3C',
	iquest: '\u00BF',
	Iscr: '\u2110',
	iscr: '\uD835\uDCBE',
	isin: '\u2208',
	isindot: '\u22F5',
	isinE: '\u22F9',
	isins: '\u22F4',
	isinsv: '\u22F3',
	isinv: '\u2208',
	it: '\u2062',
	Itilde: '\u0128',
	itilde: '\u0129',
	Iukcy: '\u0406',
	iukcy: '\u0456',
	Iuml: '\u00CF',
	iuml: '\u00EF',
	Jcirc: '\u0134',
	jcirc: '\u0135',
	Jcy: '\u0419',
	jcy: '\u0439',
	Jfr: '\uD835\uDD0D',
	jfr: '\uD835\uDD27',
	jmath: '\u0237',
	Jopf: '\uD835\uDD41',
	jopf: '\uD835\uDD5B',
	Jscr: '\uD835\uDCA5',
	jscr: '\uD835\uDCBF',
	Jsercy: '\u0408',
	jsercy: '\u0458',
	Jukcy: '\u0404',
	jukcy: '\u0454',
	Kappa: '\u039A',
	kappa: '\u03BA',
	kappav: '\u03F0',
	Kcedil: '\u0136',
	kcedil: '\u0137',
	Kcy: '\u041A',
	kcy: '\u043A',
	Kfr: '\uD835\uDD0E',
	kfr: '\uD835\uDD28',
	kgreen: '\u0138',
	KHcy: '\u0425',
	khcy: '\u0445',
	KJcy: '\u040C',
	kjcy: '\u045C',
	Kopf: '\uD835\uDD42',
	kopf: '\uD835\uDD5C',
	Kscr: '\uD835\uDCA6',
	kscr: '\uD835\uDCC0',
	lAarr: '\u21DA',
	Lacute: '\u0139',
	lacute: '\u013A',
	laemptyv: '\u29B4',
	lagran: '\u2112',
	Lambda: '\u039B',
	lambda: '\u03BB',
	Lang: '\u27EA',
	lang: '\u27E8',
	langd: '\u2991',
	langle: '\u27E8',
	lap: '\u2A85',
	Laplacetrf: '\u2112',
	laquo: '\u00AB',
	Larr: '\u219E',
	lArr: '\u21D0',
	larr: '\u2190',
	larrb: '\u21E4',
	larrbfs: '\u291F',
	larrfs: '\u291D',
	larrhk: '\u21A9',
	larrlp: '\u21AB',
	larrpl: '\u2939',
	larrsim: '\u2973',
	larrtl: '\u21A2',
	lat: '\u2AAB',
	lAtail: '\u291B',
	latail: '\u2919',
	late: '\u2AAD',
	lates: '\u2AAD\uFE00',
	lBarr: '\u290E',
	lbarr: '\u290C',
	lbbrk: '\u2772',
	lbrace: '\u007B',
	lbrack: '\u005B',
	lbrke: '\u298B',
	lbrksld: '\u298F',
	lbrkslu: '\u298D',
	Lcaron: '\u013D',
	lcaron: '\u013E',
	Lcedil: '\u013B',
	lcedil: '\u013C',
	lceil: '\u2308',
	lcub: '\u007B',
	Lcy: '\u041B',
	lcy: '\u043B',
	ldca: '\u2936',
	ldquo: '\u201C',
	ldquor: '\u201E',
	ldrdhar: '\u2967',
	ldrushar: '\u294B',
	ldsh: '\u21B2',
	lE: '\u2266',
	le: '\u2264',
	LeftAngleBracket: '\u27E8',
	LeftArrow: '\u2190',
	Leftarrow: '\u21D0',
	leftarrow: '\u2190',
	LeftArrowBar: '\u21E4',
	LeftArrowRightArrow: '\u21C6',
	leftarrowtail: '\u21A2',
	LeftCeiling: '\u2308',
	LeftDoubleBracket: '\u27E6',
	LeftDownTeeVector: '\u2961',
	LeftDownVector: '\u21C3',
	LeftDownVectorBar: '\u2959',
	LeftFloor: '\u230A',
	leftharpoondown: '\u21BD',
	leftharpoonup: '\u21BC',
	leftleftarrows: '\u21C7',
	LeftRightArrow: '\u2194',
	Leftrightarrow: '\u21D4',
	leftrightarrow: '\u2194',
	leftrightarrows: '\u21C6',
	leftrightharpoons: '\u21CB',
	leftrightsquigarrow: '\u21AD',
	LeftRightVector: '\u294E',
	LeftTee: '\u22A3',
	LeftTeeArrow: '\u21A4',
	LeftTeeVector: '\u295A',
	leftthreetimes: '\u22CB',
	LeftTriangle: '\u22B2',
	LeftTriangleBar: '\u29CF',
	LeftTriangleEqual: '\u22B4',
	LeftUpDownVector: '\u2951',
	LeftUpTeeVector: '\u2960',
	LeftUpVector: '\u21BF',
	LeftUpVectorBar: '\u2958',
	LeftVector: '\u21BC',
	LeftVectorBar: '\u2952',
	lEg: '\u2A8B',
	leg: '\u22DA',
	leq: '\u2264',
	leqq: '\u2266',
	leqslant: '\u2A7D',
	les: '\u2A7D',
	lescc: '\u2AA8',
	lesdot: '\u2A7F',
	lesdoto: '\u2A81',
	lesdotor: '\u2A83',
	lesg: '\u22DA\uFE00',
	lesges: '\u2A93',
	lessapprox: '\u2A85',
	lessdot: '\u22D6',
	lesseqgtr: '\u22DA',
	lesseqqgtr: '\u2A8B',
	LessEqualGreater: '\u22DA',
	LessFullEqual: '\u2266',
	LessGreater: '\u2276',
	lessgtr: '\u2276',
	LessLess: '\u2AA1',
	lesssim: '\u2272',
	LessSlantEqual: '\u2A7D',
	LessTilde: '\u2272',
	lfisht: '\u297C',
	lfloor: '\u230A',
	Lfr: '\uD835\uDD0F',
	lfr: '\uD835\uDD29',
	lg: '\u2276',
	lgE: '\u2A91',
	lHar: '\u2962',
	lhard: '\u21BD',
	lharu: '\u21BC',
	lharul: '\u296A',
	lhblk: '\u2584',
	LJcy: '\u0409',
	ljcy: '\u0459',
	Ll: '\u22D8',
	ll: '\u226A',
	llarr: '\u21C7',
	llcorner: '\u231E',
	Lleftarrow: '\u21DA',
	llhard: '\u296B',
	lltri: '\u25FA',
	Lmidot: '\u013F',
	lmidot: '\u0140',
	lmoust: '\u23B0',
	lmoustache: '\u23B0',
	lnap: '\u2A89',
	lnapprox: '\u2A89',
	lnE: '\u2268',
	lne: '\u2A87',
	lneq: '\u2A87',
	lneqq: '\u2268',
	lnsim: '\u22E6',
	loang: '\u27EC',
	loarr: '\u21FD',
	lobrk: '\u27E6',
	LongLeftArrow: '\u27F5',
	Longleftarrow: '\u27F8',
	longleftarrow: '\u27F5',
	LongLeftRightArrow: '\u27F7',
	Longleftrightarrow: '\u27FA',
	longleftrightarrow: '\u27F7',
	longmapsto: '\u27FC',
	LongRightArrow: '\u27F6',
	Longrightarrow: '\u27F9',
	longrightarrow: '\u27F6',
	looparrowleft: '\u21AB',
	looparrowright: '\u21AC',
	lopar: '\u2985',
	Lopf: '\uD835\uDD43',
	lopf: '\uD835\uDD5D',
	loplus: '\u2A2D',
	lotimes: '\u2A34',
	lowast: '\u2217',
	lowbar: '\u005F',
	LowerLeftArrow: '\u2199',
	LowerRightArrow: '\u2198',
	loz: '\u25CA',
	lozenge: '\u25CA',
	lozf: '\u29EB',
	lpar: '\u0028',
	lparlt: '\u2993',
	lrarr: '\u21C6',
	lrcorner: '\u231F',
	lrhar: '\u21CB',
	lrhard: '\u296D',
	lrm: '\u200E',
	lrtri: '\u22BF',
	lsaquo: '\u2039',
	Lscr: '\u2112',
	lscr: '\uD835\uDCC1',
	Lsh: '\u21B0',
	lsh: '\u21B0',
	lsim: '\u2272',
	lsime: '\u2A8D',
	lsimg: '\u2A8F',
	lsqb: '\u005B',
	lsquo: '\u2018',
	lsquor: '\u201A',
	Lstrok: '\u0141',
	lstrok: '\u0142',
	Lt: '\u226A',
	LT: '\u003C',
	lt: '\u003C',
	ltcc: '\u2AA6',
	ltcir: '\u2A79',
	ltdot: '\u22D6',
	lthree: '\u22CB',
	ltimes: '\u22C9',
	ltlarr: '\u2976',
	ltquest: '\u2A7B',
	ltri: '\u25C3',
	ltrie: '\u22B4',
	ltrif: '\u25C2',
	ltrPar: '\u2996',
	lurdshar: '\u294A',
	luruhar: '\u2966',
	lvertneqq: '\u2268\uFE00',
	lvnE: '\u2268\uFE00',
	macr: '\u00AF',
	male: '\u2642',
	malt: '\u2720',
	maltese: '\u2720',
	Map: '\u2905',
	map: '\u21A6',
	mapsto: '\u21A6',
	mapstodown: '\u21A7',
	mapstoleft: '\u21A4',
	mapstoup: '\u21A5',
	marker: '\u25AE',
	mcomma: '\u2A29',
	Mcy: '\u041C',
	mcy: '\u043C',
	mdash: '\u2014',
	mDDot: '\u223A',
	measuredangle: '\u2221',
	MediumSpace: '\u205F',
	Mellintrf: '\u2133',
	Mfr: '\uD835\uDD10',
	mfr: '\uD835\uDD2A',
	mho: '\u2127',
	micro: '\u00B5',
	mid: '\u2223',
	midast: '\u002A',
	midcir: '\u2AF0',
	middot: '\u00B7',
	minus: '\u2212',
	minusb: '\u229F',
	minusd: '\u2238',
	minusdu: '\u2A2A',
	MinusPlus: '\u2213',
	mlcp: '\u2ADB',
	mldr: '\u2026',
	mnplus: '\u2213',
	models: '\u22A7',
	Mopf: '\uD835\uDD44',
	mopf: '\uD835\uDD5E',
	mp: '\u2213',
	Mscr: '\u2133',
	mscr: '\uD835\uDCC2',
	mstpos: '\u223E',
	Mu: '\u039C',
	mu: '\u03BC',
	multimap: '\u22B8',
	mumap: '\u22B8',
	nabla: '\u2207',
	Nacute: '\u0143',
	nacute: '\u0144',
	nang: '\u2220\u20D2',
	nap: '\u2249',
	napE: '\u2A70\u0338',
	napid: '\u224B\u0338',
	napos: '\u0149',
	napprox: '\u2249',
	natur: '\u266E',
	natural: '\u266E',
	naturals: '\u2115',
	nbsp: '\u00A0',
	nbump: '\u224E\u0338',
	nbumpe: '\u224F\u0338',
	ncap: '\u2A43',
	Ncaron: '\u0147',
	ncaron: '\u0148',
	Ncedil: '\u0145',
	ncedil: '\u0146',
	ncong: '\u2247',
	ncongdot: '\u2A6D\u0338',
	ncup: '\u2A42',
	Ncy: '\u041D',
	ncy: '\u043D',
	ndash: '\u2013',
	ne: '\u2260',
	nearhk: '\u2924',
	neArr: '\u21D7',
	nearr: '\u2197',
	nearrow: '\u2197',
	nedot: '\u2250\u0338',
	NegativeMediumSpace: '\u200B',
	NegativeThickSpace: '\u200B',
	NegativeThinSpace: '\u200B',
	NegativeVeryThinSpace: '\u200B',
	nequiv: '\u2262',
	nesear: '\u2928',
	nesim: '\u2242\u0338',
	NestedGreaterGreater: '\u226B',
	NestedLessLess: '\u226A',
	NewLine: '\u000A',
	nexist: '\u2204',
	nexists: '\u2204',
	Nfr: '\uD835\uDD11',
	nfr: '\uD835\uDD2B',
	ngE: '\u2267\u0338',
	nge: '\u2271',
	ngeq: '\u2271',
	ngeqq: '\u2267\u0338',
	ngeqslant: '\u2A7E\u0338',
	nges: '\u2A7E\u0338',
	nGg: '\u22D9\u0338',
	ngsim: '\u2275',
	nGt: '\u226B\u20D2',
	ngt: '\u226F',
	ngtr: '\u226F',
	nGtv: '\u226B\u0338',
	nhArr: '\u21CE',
	nharr: '\u21AE',
	nhpar: '\u2AF2',
	ni: '\u220B',
	nis: '\u22FC',
	nisd: '\u22FA',
	niv: '\u220B',
	NJcy: '\u040A',
	njcy: '\u045A',
	nlArr: '\u21CD',
	nlarr: '\u219A',
	nldr: '\u2025',
	nlE: '\u2266\u0338',
	nle: '\u2270',
	nLeftarrow: '\u21CD',
	nleftarrow: '\u219A',
	nLeftrightarrow: '\u21CE',
	nleftrightarrow: '\u21AE',
	nleq: '\u2270',
	nleqq: '\u2266\u0338',
	nleqslant: '\u2A7D\u0338',
	nles: '\u2A7D\u0338',
	nless: '\u226E',
	nLl: '\u22D8\u0338',
	nlsim: '\u2274',
	nLt: '\u226A\u20D2',
	nlt: '\u226E',
	nltri: '\u22EA',
	nltrie: '\u22EC',
	nLtv: '\u226A\u0338',
	nmid: '\u2224',
	NoBreak: '\u2060',
	NonBreakingSpace: '\u00A0',
	Nopf: '\u2115',
	nopf: '\uD835\uDD5F',
	Not: '\u2AEC',
	not: '\u00AC',
	NotCongruent: '\u2262',
	NotCupCap: '\u226D',
	NotDoubleVerticalBar: '\u2226',
	NotElement: '\u2209',
	NotEqual: '\u2260',
	NotEqualTilde: '\u2242\u0338',
	NotExists: '\u2204',
	NotGreater: '\u226F',
	NotGreaterEqual: '\u2271',
	NotGreaterFullEqual: '\u2267\u0338',
	NotGreaterGreater: '\u226B\u0338',
	NotGreaterLess: '\u2279',
	NotGreaterSlantEqual: '\u2A7E\u0338',
	NotGreaterTilde: '\u2275',
	NotHumpDownHump: '\u224E\u0338',
	NotHumpEqual: '\u224F\u0338',
	notin: '\u2209',
	notindot: '\u22F5\u0338',
	notinE: '\u22F9\u0338',
	notinva: '\u2209',
	notinvb: '\u22F7',
	notinvc: '\u22F6',
	NotLeftTriangle: '\u22EA',
	NotLeftTriangleBar: '\u29CF\u0338',
	NotLeftTriangleEqual: '\u22EC',
	NotLess: '\u226E',
	NotLessEqual: '\u2270',
	NotLessGreater: '\u2278',
	NotLessLess: '\u226A\u0338',
	NotLessSlantEqual: '\u2A7D\u0338',
	NotLessTilde: '\u2274',
	NotNestedGreaterGreater: '\u2AA2\u0338',
	NotNestedLessLess: '\u2AA1\u0338',
	notni: '\u220C',
	notniva: '\u220C',
	notnivb: '\u22FE',
	notnivc: '\u22FD',
	NotPrecedes: '\u2280',
	NotPrecedesEqual: '\u2AAF\u0338',
	NotPrecedesSlantEqual: '\u22E0',
	NotReverseElement: '\u220C',
	NotRightTriangle: '\u22EB',
	NotRightTriangleBar: '\u29D0\u0338',
	NotRightTriangleEqual: '\u22ED',
	NotSquareSubset: '\u228F\u0338',
	NotSquareSubsetEqual: '\u22E2',
	NotSquareSuperset: '\u2290\u0338',
	NotSquareSupersetEqual: '\u22E3',
	NotSubset: '\u2282\u20D2',
	NotSubsetEqual: '\u2288',
	NotSucceeds: '\u2281',
	NotSucceedsEqual: '\u2AB0\u0338',
	NotSucceedsSlantEqual: '\u22E1',
	NotSucceedsTilde: '\u227F\u0338',
	NotSuperset: '\u2283\u20D2',
	NotSupersetEqual: '\u2289',
	NotTilde: '\u2241',
	NotTildeEqual: '\u2244',
	NotTildeFullEqual: '\u2247',
	NotTildeTilde: '\u2249',
	NotVerticalBar: '\u2224',
	npar: '\u2226',
	nparallel: '\u2226',
	nparsl: '\u2AFD\u20E5',
	npart: '\u2202\u0338',
	npolint: '\u2A14',
	npr: '\u2280',
	nprcue: '\u22E0',
	npre: '\u2AAF\u0338',
	nprec: '\u2280',
	npreceq: '\u2AAF\u0338',
	nrArr: '\u21CF',
	nrarr: '\u219B',
	nrarrc: '\u2933\u0338',
	nrarrw: '\u219D\u0338',
	nRightarrow: '\u21CF',
	nrightarrow: '\u219B',
	nrtri: '\u22EB',
	nrtrie: '\u22ED',
	nsc: '\u2281',
	nsccue: '\u22E1',
	nsce: '\u2AB0\u0338',
	Nscr: '\uD835\uDCA9',
	nscr: '\uD835\uDCC3',
	nshortmid: '\u2224',
	nshortparallel: '\u2226',
	nsim: '\u2241',
	nsime: '\u2244',
	nsimeq: '\u2244',
	nsmid: '\u2224',
	nspar: '\u2226',
	nsqsube: '\u22E2',
	nsqsupe: '\u22E3',
	nsub: '\u2284',
	nsubE: '\u2AC5\u0338',
	nsube: '\u2288',
	nsubset: '\u2282\u20D2',
	nsubseteq: '\u2288',
	nsubseteqq: '\u2AC5\u0338',
	nsucc: '\u2281',
	nsucceq: '\u2AB0\u0338',
	nsup: '\u2285',
	nsupE: '\u2AC6\u0338',
	nsupe: '\u2289',
	nsupset: '\u2283\u20D2',
	nsupseteq: '\u2289',
	nsupseteqq: '\u2AC6\u0338',
	ntgl: '\u2279',
	Ntilde: '\u00D1',
	ntilde: '\u00F1',
	ntlg: '\u2278',
	ntriangleleft: '\u22EA',
	ntrianglelefteq: '\u22EC',
	ntriangleright: '\u22EB',
	ntrianglerighteq: '\u22ED',
	Nu: '\u039D',
	nu: '\u03BD',
	num: '\u0023',
	numero: '\u2116',
	numsp: '\u2007',
	nvap: '\u224D\u20D2',
	nVDash: '\u22AF',
	nVdash: '\u22AE',
	nvDash: '\u22AD',
	nvdash: '\u22AC',
	nvge: '\u2265\u20D2',
	nvgt: '\u003E\u20D2',
	nvHarr: '\u2904',
	nvinfin: '\u29DE',
	nvlArr: '\u2902',
	nvle: '\u2264\u20D2',
	nvlt: '\u003C\u20D2',
	nvltrie: '\u22B4\u20D2',
	nvrArr: '\u2903',
	nvrtrie: '\u22B5\u20D2',
	nvsim: '\u223C\u20D2',
	nwarhk: '\u2923',
	nwArr: '\u21D6',
	nwarr: '\u2196',
	nwarrow: '\u2196',
	nwnear: '\u2927',
	Oacute: '\u00D3',
	oacute: '\u00F3',
	oast: '\u229B',
	ocir: '\u229A',
	Ocirc: '\u00D4',
	ocirc: '\u00F4',
	Ocy: '\u041E',
	ocy: '\u043E',
	odash: '\u229D',
	Odblac: '\u0150',
	odblac: '\u0151',
	odiv: '\u2A38',
	odot: '\u2299',
	odsold: '\u29BC',
	OElig: '\u0152',
	oelig: '\u0153',
	ofcir: '\u29BF',
	Ofr: '\uD835\uDD12',
	ofr: '\uD835\uDD2C',
	ogon: '\u02DB',
	Ograve: '\u00D2',
	ograve: '\u00F2',
	ogt: '\u29C1',
	ohbar: '\u29B5',
	ohm: '\u03A9',
	oint: '\u222E',
	olarr: '\u21BA',
	olcir: '\u29BE',
	olcross: '\u29BB',
	oline: '\u203E',
	olt: '\u29C0',
	Omacr: '\u014C',
	omacr: '\u014D',
	Omega: '\u03A9',
	omega: '\u03C9',
	Omicron: '\u039F',
	omicron: '\u03BF',
	omid: '\u29B6',
	ominus: '\u2296',
	Oopf: '\uD835\uDD46',
	oopf: '\uD835\uDD60',
	opar: '\u29B7',
	OpenCurlyDoubleQuote: '\u201C',
	OpenCurlyQuote: '\u2018',
	operp: '\u29B9',
	oplus: '\u2295',
	Or: '\u2A54',
	or: '\u2228',
	orarr: '\u21BB',
	ord: '\u2A5D',
	order: '\u2134',
	orderof: '\u2134',
	ordf: '\u00AA',
	ordm: '\u00BA',
	origof: '\u22B6',
	oror: '\u2A56',
	orslope: '\u2A57',
	orv: '\u2A5B',
	oS: '\u24C8',
	Oscr: '\uD835\uDCAA',
	oscr: '\u2134',
	Oslash: '\u00D8',
	oslash: '\u00F8',
	osol: '\u2298',
	Otilde: '\u00D5',
	otilde: '\u00F5',
	Otimes: '\u2A37',
	otimes: '\u2297',
	otimesas: '\u2A36',
	Ouml: '\u00D6',
	ouml: '\u00F6',
	ovbar: '\u233D',
	OverBar: '\u203E',
	OverBrace: '\u23DE',
	OverBracket: '\u23B4',
	OverParenthesis: '\u23DC',
	par: '\u2225',
	para: '\u00B6',
	parallel: '\u2225',
	parsim: '\u2AF3',
	parsl: '\u2AFD',
	part: '\u2202',
	PartialD: '\u2202',
	Pcy: '\u041F',
	pcy: '\u043F',
	percnt: '\u0025',
	period: '\u002E',
	permil: '\u2030',
	perp: '\u22A5',
	pertenk: '\u2031',
	Pfr: '\uD835\uDD13',
	pfr: '\uD835\uDD2D',
	Phi: '\u03A6',
	phi: '\u03C6',
	phiv: '\u03D5',
	phmmat: '\u2133',
	phone: '\u260E',
	Pi: '\u03A0',
	pi: '\u03C0',
	pitchfork: '\u22D4',
	piv: '\u03D6',
	planck: '\u210F',
	planckh: '\u210E',
	plankv: '\u210F',
	plus: '\u002B',
	plusacir: '\u2A23',
	plusb: '\u229E',
	pluscir: '\u2A22',
	plusdo: '\u2214',
	plusdu: '\u2A25',
	pluse: '\u2A72',
	PlusMinus: '\u00B1',
	plusmn: '\u00B1',
	plussim: '\u2A26',
	plustwo: '\u2A27',
	pm: '\u00B1',
	Poincareplane: '\u210C',
	pointint: '\u2A15',
	Popf: '\u2119',
	popf: '\uD835\uDD61',
	pound: '\u00A3',
	Pr: '\u2ABB',
	pr: '\u227A',
	prap: '\u2AB7',
	prcue: '\u227C',
	prE: '\u2AB3',
	pre: '\u2AAF',
	prec: '\u227A',
	precapprox: '\u2AB7',
	preccurlyeq: '\u227C',
	Precedes: '\u227A',
	PrecedesEqual: '\u2AAF',
	PrecedesSlantEqual: '\u227C',
	PrecedesTilde: '\u227E',
	preceq: '\u2AAF',
	precnapprox: '\u2AB9',
	precneqq: '\u2AB5',
	precnsim: '\u22E8',
	precsim: '\u227E',
	Prime: '\u2033',
	prime: '\u2032',
	primes: '\u2119',
	prnap: '\u2AB9',
	prnE: '\u2AB5',
	prnsim: '\u22E8',
	prod: '\u220F',
	Product: '\u220F',
	profalar: '\u232E',
	profline: '\u2312',
	profsurf: '\u2313',
	prop: '\u221D',
	Proportion: '\u2237',
	Proportional: '\u221D',
	propto: '\u221D',
	prsim: '\u227E',
	prurel: '\u22B0',
	Pscr: '\uD835\uDCAB',
	pscr: '\uD835\uDCC5',
	Psi: '\u03A8',
	psi: '\u03C8',
	puncsp: '\u2008',
	Qfr: '\uD835\uDD14',
	qfr: '\uD835\uDD2E',
	qint: '\u2A0C',
	Qopf: '\u211A',
	qopf: '\uD835\uDD62',
	qprime: '\u2057',
	Qscr: '\uD835\uDCAC',
	qscr: '\uD835\uDCC6',
	quaternions: '\u210D',
	quatint: '\u2A16',
	quest: '\u003F',
	questeq: '\u225F',
	QUOT: '\u0022',
	quot: '\u0022',
	rAarr: '\u21DB',
	race: '\u223D\u0331',
	Racute: '\u0154',
	racute: '\u0155',
	radic: '\u221A',
	raemptyv: '\u29B3',
	Rang: '\u27EB',
	rang: '\u27E9',
	rangd: '\u2992',
	range: '\u29A5',
	rangle: '\u27E9',
	raquo: '\u00BB',
	Rarr: '\u21A0',
	rArr: '\u21D2',
	rarr: '\u2192',
	rarrap: '\u2975',
	rarrb: '\u21E5',
	rarrbfs: '\u2920',
	rarrc: '\u2933',
	rarrfs: '\u291E',
	rarrhk: '\u21AA',
	rarrlp: '\u21AC',
	rarrpl: '\u2945',
	rarrsim: '\u2974',
	Rarrtl: '\u2916',
	rarrtl: '\u21A3',
	rarrw: '\u219D',
	rAtail: '\u291C',
	ratail: '\u291A',
	ratio: '\u2236',
	rationals: '\u211A',
	RBarr: '\u2910',
	rBarr: '\u290F',
	rbarr: '\u290D',
	rbbrk: '\u2773',
	rbrace: '\u007D',
	rbrack: '\u005D',
	rbrke: '\u298C',
	rbrksld: '\u298E',
	rbrkslu: '\u2990',
	Rcaron: '\u0158',
	rcaron: '\u0159',
	Rcedil: '\u0156',
	rcedil: '\u0157',
	rceil: '\u2309',
	rcub: '\u007D',
	Rcy: '\u0420',
	rcy: '\u0440',
	rdca: '\u2937',
	rdldhar: '\u2969',
	rdquo: '\u201D',
	rdquor: '\u201D',
	rdsh: '\u21B3',
	Re: '\u211C',
	real: '\u211C',
	realine: '\u211B',
	realpart: '\u211C',
	reals: '\u211D',
	rect: '\u25AD',
	REG: '\u00AE',
	reg: '\u00AE',
	ReverseElement: '\u220B',
	ReverseEquilibrium: '\u21CB',
	ReverseUpEquilibrium: '\u296F',
	rfisht: '\u297D',
	rfloor: '\u230B',
	Rfr: '\u211C',
	rfr: '\uD835\uDD2F',
	rHar: '\u2964',
	rhard: '\u21C1',
	rharu: '\u21C0',
	rharul: '\u296C',
	Rho: '\u03A1',
	rho: '\u03C1',
	rhov: '\u03F1',
	RightAngleBracket: '\u27E9',
	RightArrow: '\u2192',
	Rightarrow: '\u21D2',
	rightarrow: '\u2192',
	RightArrowBar: '\u21E5',
	RightArrowLeftArrow: '\u21C4',
	rightarrowtail: '\u21A3',
	RightCeiling: '\u2309',
	RightDoubleBracket: '\u27E7',
	RightDownTeeVector: '\u295D',
	RightDownVector: '\u21C2',
	RightDownVectorBar: '\u2955',
	RightFloor: '\u230B',
	rightharpoondown: '\u21C1',
	rightharpoonup: '\u21C0',
	rightleftarrows: '\u21C4',
	rightleftharpoons: '\u21CC',
	rightrightarrows: '\u21C9',
	rightsquigarrow: '\u219D',
	RightTee: '\u22A2',
	RightTeeArrow: '\u21A6',
	RightTeeVector: '\u295B',
	rightthreetimes: '\u22CC',
	RightTriangle: '\u22B3',
	RightTriangleBar: '\u29D0',
	RightTriangleEqual: '\u22B5',
	RightUpDownVector: '\u294F',
	RightUpTeeVector: '\u295C',
	RightUpVector: '\u21BE',
	RightUpVectorBar: '\u2954',
	RightVector: '\u21C0',
	RightVectorBar: '\u2953',
	ring: '\u02DA',
	risingdotseq: '\u2253',
	rlarr: '\u21C4',
	rlhar: '\u21CC',
	rlm: '\u200F',
	rmoust: '\u23B1',
	rmoustache: '\u23B1',
	rnmid: '\u2AEE',
	roang: '\u27ED',
	roarr: '\u21FE',
	robrk: '\u27E7',
	ropar: '\u2986',
	Ropf: '\u211D',
	ropf: '\uD835\uDD63',
	roplus: '\u2A2E',
	rotimes: '\u2A35',
	RoundImplies: '\u2970',
	rpar: '\u0029',
	rpargt: '\u2994',
	rppolint: '\u2A12',
	rrarr: '\u21C9',
	Rrightarrow: '\u21DB',
	rsaquo: '\u203A',
	Rscr: '\u211B',
	rscr: '\uD835\uDCC7',
	Rsh: '\u21B1',
	rsh: '\u21B1',
	rsqb: '\u005D',
	rsquo: '\u2019',
	rsquor: '\u2019',
	rthree: '\u22CC',
	rtimes: '\u22CA',
	rtri: '\u25B9',
	rtrie: '\u22B5',
	rtrif: '\u25B8',
	rtriltri: '\u29CE',
	RuleDelayed: '\u29F4',
	ruluhar: '\u2968',
	rx: '\u211E',
	Sacute: '\u015A',
	sacute: '\u015B',
	sbquo: '\u201A',
	Sc: '\u2ABC',
	sc: '\u227B',
	scap: '\u2AB8',
	Scaron: '\u0160',
	scaron: '\u0161',
	sccue: '\u227D',
	scE: '\u2AB4',
	sce: '\u2AB0',
	Scedil: '\u015E',
	scedil: '\u015F',
	Scirc: '\u015C',
	scirc: '\u015D',
	scnap: '\u2ABA',
	scnE: '\u2AB6',
	scnsim: '\u22E9',
	scpolint: '\u2A13',
	scsim: '\u227F',
	Scy: '\u0421',
	scy: '\u0441',
	sdot: '\u22C5',
	sdotb: '\u22A1',
	sdote: '\u2A66',
	searhk: '\u2925',
	seArr: '\u21D8',
	searr: '\u2198',
	searrow: '\u2198',
	sect: '\u00A7',
	semi: '\u003B',
	seswar: '\u2929',
	setminus: '\u2216',
	setmn: '\u2216',
	sext: '\u2736',
	Sfr: '\uD835\uDD16',
	sfr: '\uD835\uDD30',
	sfrown: '\u2322',
	sharp: '\u266F',
	SHCHcy: '\u0429',
	shchcy: '\u0449',
	SHcy: '\u0428',
	shcy: '\u0448',
	ShortDownArrow: '\u2193',
	ShortLeftArrow: '\u2190',
	shortmid: '\u2223',
	shortparallel: '\u2225',
	ShortRightArrow: '\u2192',
	ShortUpArrow: '\u2191',
	shy: '\u00AD',
	Sigma: '\u03A3',
	sigma: '\u03C3',
	sigmaf: '\u03C2',
	sigmav: '\u03C2',
	sim: '\u223C',
	simdot: '\u2A6A',
	sime: '\u2243',
	simeq: '\u2243',
	simg: '\u2A9E',
	simgE: '\u2AA0',
	siml: '\u2A9D',
	simlE: '\u2A9F',
	simne: '\u2246',
	simplus: '\u2A24',
	simrarr: '\u2972',
	slarr: '\u2190',
	SmallCircle: '\u2218',
	smallsetminus: '\u2216',
	smashp: '\u2A33',
	smeparsl: '\u29E4',
	smid: '\u2223',
	smile: '\u2323',
	smt: '\u2AAA',
	smte: '\u2AAC',
	smtes: '\u2AAC\uFE00',
	SOFTcy: '\u042C',
	softcy: '\u044C',
	sol: '\u002F',
	solb: '\u29C4',
	solbar: '\u233F',
	Sopf: '\uD835\uDD4A',
	sopf: '\uD835\uDD64',
	spades: '\u2660',
	spadesuit: '\u2660',
	spar: '\u2225',
	sqcap: '\u2293',
	sqcaps: '\u2293\uFE00',
	sqcup: '\u2294',
	sqcups: '\u2294\uFE00',
	Sqrt: '\u221A',
	sqsub: '\u228F',
	sqsube: '\u2291',
	sqsubset: '\u228F',
	sqsubseteq: '\u2291',
	sqsup: '\u2290',
	sqsupe: '\u2292',
	sqsupset: '\u2290',
	sqsupseteq: '\u2292',
	squ: '\u25A1',
	Square: '\u25A1',
	square: '\u25A1',
	SquareIntersection: '\u2293',
	SquareSubset: '\u228F',
	SquareSubsetEqual: '\u2291',
	SquareSuperset: '\u2290',
	SquareSupersetEqual: '\u2292',
	SquareUnion: '\u2294',
	squarf: '\u25AA',
	squf: '\u25AA',
	srarr: '\u2192',
	Sscr: '\uD835\uDCAE',
	sscr: '\uD835\uDCC8',
	ssetmn: '\u2216',
	ssmile: '\u2323',
	sstarf: '\u22C6',
	Star: '\u22C6',
	star: '\u2606',
	starf: '\u2605',
	straightepsilon: '\u03F5',
	straightphi: '\u03D5',
	strns: '\u00AF',
	Sub: '\u22D0',
	sub: '\u2282',
	subdot: '\u2ABD',
	subE: '\u2AC5',
	sube: '\u2286',
	subedot: '\u2AC3',
	submult: '\u2AC1',
	subnE: '\u2ACB',
	subne: '\u228A',
	subplus: '\u2ABF',
	subrarr: '\u2979',
	Subset: '\u22D0',
	subset: '\u2282',
	subseteq: '\u2286',
	subseteqq: '\u2AC5',
	SubsetEqual: '\u2286',
	subsetneq: '\u228A',
	subsetneqq: '\u2ACB',
	subsim: '\u2AC7',
	subsub: '\u2AD5',
	subsup: '\u2AD3',
	succ: '\u227B',
	succapprox: '\u2AB8',
	succcurlyeq: '\u227D',
	Succeeds: '\u227B',
	SucceedsEqual: '\u2AB0',
	SucceedsSlantEqual: '\u227D',
	SucceedsTilde: '\u227F',
	succeq: '\u2AB0',
	succnapprox: '\u2ABA',
	succneqq: '\u2AB6',
	succnsim: '\u22E9',
	succsim: '\u227F',
	SuchThat: '\u220B',
	Sum: '\u2211',
	sum: '\u2211',
	sung: '\u266A',
	Sup: '\u22D1',
	sup: '\u2283',
	sup1: '\u00B9',
	sup2: '\u00B2',
	sup3: '\u00B3',
	supdot: '\u2ABE',
	supdsub: '\u2AD8',
	supE: '\u2AC6',
	supe: '\u2287',
	supedot: '\u2AC4',
	Superset: '\u2283',
	SupersetEqual: '\u2287',
	suphsol: '\u27C9',
	suphsub: '\u2AD7',
	suplarr: '\u297B',
	supmult: '\u2AC2',
	supnE: '\u2ACC',
	supne: '\u228B',
	supplus: '\u2AC0',
	Supset: '\u22D1',
	supset: '\u2283',
	supseteq: '\u2287',
	supseteqq: '\u2AC6',
	supsetneq: '\u228B',
	supsetneqq: '\u2ACC',
	supsim: '\u2AC8',
	supsub: '\u2AD4',
	supsup: '\u2AD6',
	swarhk: '\u2926',
	swArr: '\u21D9',
	swarr: '\u2199',
	swarrow: '\u2199',
	swnwar: '\u292A',
	szlig: '\u00DF',
	Tab: '\u0009',
	target: '\u2316',
	Tau: '\u03A4',
	tau: '\u03C4',
	tbrk: '\u23B4',
	Tcaron: '\u0164',
	tcaron: '\u0165',
	Tcedil: '\u0162',
	tcedil: '\u0163',
	Tcy: '\u0422',
	tcy: '\u0442',
	tdot: '\u20DB',
	telrec: '\u2315',
	Tfr: '\uD835\uDD17',
	tfr: '\uD835\uDD31',
	there4: '\u2234',
	Therefore: '\u2234',
	therefore: '\u2234',
	Theta: '\u0398',
	theta: '\u03B8',
	thetasym: '\u03D1',
	thetav: '\u03D1',
	thickapprox: '\u2248',
	thicksim: '\u223C',
	ThickSpace: '\u205F\u200A',
	thinsp: '\u2009',
	ThinSpace: '\u2009',
	thkap: '\u2248',
	thksim: '\u223C',
	THORN: '\u00DE',
	thorn: '\u00FE',
	Tilde: '\u223C',
	tilde: '\u02DC',
	TildeEqual: '\u2243',
	TildeFullEqual: '\u2245',
	TildeTilde: '\u2248',
	times: '\u00D7',
	timesb: '\u22A0',
	timesbar: '\u2A31',
	timesd: '\u2A30',
	tint: '\u222D',
	toea: '\u2928',
	top: '\u22A4',
	topbot: '\u2336',
	topcir: '\u2AF1',
	Topf: '\uD835\uDD4B',
	topf: '\uD835\uDD65',
	topfork: '\u2ADA',
	tosa: '\u2929',
	tprime: '\u2034',
	TRADE: '\u2122',
	trade: '\u2122',
	triangle: '\u25B5',
	triangledown: '\u25BF',
	triangleleft: '\u25C3',
	trianglelefteq: '\u22B4',
	triangleq: '\u225C',
	triangleright: '\u25B9',
	trianglerighteq: '\u22B5',
	tridot: '\u25EC',
	trie: '\u225C',
	triminus: '\u2A3A',
	TripleDot: '\u20DB',
	triplus: '\u2A39',
	trisb: '\u29CD',
	tritime: '\u2A3B',
	trpezium: '\u23E2',
	Tscr: '\uD835\uDCAF',
	tscr: '\uD835\uDCC9',
	TScy: '\u0426',
	tscy: '\u0446',
	TSHcy: '\u040B',
	tshcy: '\u045B',
	Tstrok: '\u0166',
	tstrok: '\u0167',
	twixt: '\u226C',
	twoheadleftarrow: '\u219E',
	twoheadrightarrow: '\u21A0',
	Uacute: '\u00DA',
	uacute: '\u00FA',
	Uarr: '\u219F',
	uArr: '\u21D1',
	uarr: '\u2191',
	Uarrocir: '\u2949',
	Ubrcy: '\u040E',
	ubrcy: '\u045E',
	Ubreve: '\u016C',
	ubreve: '\u016D',
	Ucirc: '\u00DB',
	ucirc: '\u00FB',
	Ucy: '\u0423',
	ucy: '\u0443',
	udarr: '\u21C5',
	Udblac: '\u0170',
	udblac: '\u0171',
	udhar: '\u296E',
	ufisht: '\u297E',
	Ufr: '\uD835\uDD18',
	ufr: '\uD835\uDD32',
	Ugrave: '\u00D9',
	ugrave: '\u00F9',
	uHar: '\u2963',
	uharl: '\u21BF',
	uharr: '\u21BE',
	uhblk: '\u2580',
	ulcorn: '\u231C',
	ulcorner: '\u231C',
	ulcrop: '\u230F',
	ultri: '\u25F8',
	Umacr: '\u016A',
	umacr: '\u016B',
	uml: '\u00A8',
	UnderBar: '\u005F',
	UnderBrace: '\u23DF',
	UnderBracket: '\u23B5',
	UnderParenthesis: '\u23DD',
	Union: '\u22C3',
	UnionPlus: '\u228E',
	Uogon: '\u0172',
	uogon: '\u0173',
	Uopf: '\uD835\uDD4C',
	uopf: '\uD835\uDD66',
	UpArrow: '\u2191',
	Uparrow: '\u21D1',
	uparrow: '\u2191',
	UpArrowBar: '\u2912',
	UpArrowDownArrow: '\u21C5',
	UpDownArrow: '\u2195',
	Updownarrow: '\u21D5',
	updownarrow: '\u2195',
	UpEquilibrium: '\u296E',
	upharpoonleft: '\u21BF',
	upharpoonright: '\u21BE',
	uplus: '\u228E',
	UpperLeftArrow: '\u2196',
	UpperRightArrow: '\u2197',
	Upsi: '\u03D2',
	upsi: '\u03C5',
	upsih: '\u03D2',
	Upsilon: '\u03A5',
	upsilon: '\u03C5',
	UpTee: '\u22A5',
	UpTeeArrow: '\u21A5',
	upuparrows: '\u21C8',
	urcorn: '\u231D',
	urcorner: '\u231D',
	urcrop: '\u230E',
	Uring: '\u016E',
	uring: '\u016F',
	urtri: '\u25F9',
	Uscr: '\uD835\uDCB0',
	uscr: '\uD835\uDCCA',
	utdot: '\u22F0',
	Utilde: '\u0168',
	utilde: '\u0169',
	utri: '\u25B5',
	utrif: '\u25B4',
	uuarr: '\u21C8',
	Uuml: '\u00DC',
	uuml: '\u00FC',
	uwangle: '\u29A7',
	vangrt: '\u299C',
	varepsilon: '\u03F5',
	varkappa: '\u03F0',
	varnothing: '\u2205',
	varphi: '\u03D5',
	varpi: '\u03D6',
	varpropto: '\u221D',
	vArr: '\u21D5',
	varr: '\u2195',
	varrho: '\u03F1',
	varsigma: '\u03C2',
	varsubsetneq: '\u228A\uFE00',
	varsubsetneqq: '\u2ACB\uFE00',
	varsupsetneq: '\u228B\uFE00',
	varsupsetneqq: '\u2ACC\uFE00',
	vartheta: '\u03D1',
	vartriangleleft: '\u22B2',
	vartriangleright: '\u22B3',
	Vbar: '\u2AEB',
	vBar: '\u2AE8',
	vBarv: '\u2AE9',
	Vcy: '\u0412',
	vcy: '\u0432',
	VDash: '\u22AB',
	Vdash: '\u22A9',
	vDash: '\u22A8',
	vdash: '\u22A2',
	Vdashl: '\u2AE6',
	Vee: '\u22C1',
	vee: '\u2228',
	veebar: '\u22BB',
	veeeq: '\u225A',
	vellip: '\u22EE',
	Verbar: '\u2016',
	verbar: '\u007C',
	Vert: '\u2016',
	vert: '\u007C',
	VerticalBar: '\u2223',
	VerticalLine: '\u007C',
	VerticalSeparator: '\u2758',
	VerticalTilde: '\u2240',
	VeryThinSpace: '\u200A',
	Vfr: '\uD835\uDD19',
	vfr: '\uD835\uDD33',
	vltri: '\u22B2',
	vnsub: '\u2282\u20D2',
	vnsup: '\u2283\u20D2',
	Vopf: '\uD835\uDD4D',
	vopf: '\uD835\uDD67',
	vprop: '\u221D',
	vrtri: '\u22B3',
	Vscr: '\uD835\uDCB1',
	vscr: '\uD835\uDCCB',
	vsubnE: '\u2ACB\uFE00',
	vsubne: '\u228A\uFE00',
	vsupnE: '\u2ACC\uFE00',
	vsupne: '\u228B\uFE00',
	Vvdash: '\u22AA',
	vzigzag: '\u299A',
	Wcirc: '\u0174',
	wcirc: '\u0175',
	wedbar: '\u2A5F',
	Wedge: '\u22C0',
	wedge: '\u2227',
	wedgeq: '\u2259',
	weierp: '\u2118',
	Wfr: '\uD835\uDD1A',
	wfr: '\uD835\uDD34',
	Wopf: '\uD835\uDD4E',
	wopf: '\uD835\uDD68',
	wp: '\u2118',
	wr: '\u2240',
	wreath: '\u2240',
	Wscr: '\uD835\uDCB2',
	wscr: '\uD835\uDCCC',
	xcap: '\u22C2',
	xcirc: '\u25EF',
	xcup: '\u22C3',
	xdtri: '\u25BD',
	Xfr: '\uD835\uDD1B',
	xfr: '\uD835\uDD35',
	xhArr: '\u27FA',
	xharr: '\u27F7',
	Xi: '\u039E',
	xi: '\u03BE',
	xlArr: '\u27F8',
	xlarr: '\u27F5',
	xmap: '\u27FC',
	xnis: '\u22FB',
	xodot: '\u2A00',
	Xopf: '\uD835\uDD4F',
	xopf: '\uD835\uDD69',
	xoplus: '\u2A01',
	xotime: '\u2A02',
	xrArr: '\u27F9',
	xrarr: '\u27F6',
	Xscr: '\uD835\uDCB3',
	xscr: '\uD835\uDCCD',
	xsqcup: '\u2A06',
	xuplus: '\u2A04',
	xutri: '\u25B3',
	xvee: '\u22C1',
	xwedge: '\u22C0',
	Yacute: '\u00DD',
	yacute: '\u00FD',
	YAcy: '\u042F',
	yacy: '\u044F',
	Ycirc: '\u0176',
	ycirc: '\u0177',
	Ycy: '\u042B',
	ycy: '\u044B',
	yen: '\u00A5',
	Yfr: '\uD835\uDD1C',
	yfr: '\uD835\uDD36',
	YIcy: '\u0407',
	yicy: '\u0457',
	Yopf: '\uD835\uDD50',
	yopf: '\uD835\uDD6A',
	Yscr: '\uD835\uDCB4',
	yscr: '\uD835\uDCCE',
	YUcy: '\u042E',
	yucy: '\u044E',
	Yuml: '\u0178',
	yuml: '\u00FF',
	Zacute: '\u0179',
	zacute: '\u017A',
	Zcaron: '\u017D',
	zcaron: '\u017E',
	Zcy: '\u0417',
	zcy: '\u0437',
	Zdot: '\u017B',
	zdot: '\u017C',
	zeetrf: '\u2128',
	ZeroWidthSpace: '\u200B',
	Zeta: '\u0396',
	zeta: '\u03B6',
	Zfr: '\u2128',
	zfr: '\uD835\uDD37',
	ZHcy: '\u0416',
	zhcy: '\u0436',
	zigrarr: '\u21DD',
	Zopf: '\u2124',
	zopf: '\uD835\uDD6B',
	Zscr: '\uD835\uDCB5',
	zscr: '\uD835\uDCCF',
	zwj: '\u200D',
	zwnj: '\u200C',
});

/**
 * @deprecated use `HTML_ENTITIES` instead
 * @see HTML_ENTITIES
 */
exports.entityMap = exports.HTML_ENTITIES;


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

var NAMESPACE = __webpack_require__(57).NAMESPACE;

//[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
//[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
//[5]   	Name	   ::=   	NameStartChar (NameChar)*
var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]///\u10000-\uEFFFF
var nameChar = new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
var tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');
//var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')

//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
var S_TAG = 0;//tag name offerring
var S_ATTR = 1;//attr name offerring
var S_ATTR_SPACE=2;//attr name end and space offer
var S_EQ = 3;//=space?
var S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)
var S_ATTR_END = 5;//attr value end and no space(quot end)
var S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)
var S_TAG_CLOSE = 7;//closed el<el />

/**
 * Creates an error that will not be caught by XMLReader aka the SAX parser.
 *
 * @param {string} message
 * @param {any?} locator Optional, can provide details about the location in the source
 * @constructor
 */
function ParseError(message, locator) {
	this.message = message
	this.locator = locator
	if(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);
}
ParseError.prototype = new Error();
ParseError.prototype.name = ParseError.name

function XMLReader(){

}

XMLReader.prototype = {
	parse:function(source,defaultNSMap,entityMap){
		var domBuilder = this.domBuilder;
		domBuilder.startDocument();
		_copy(defaultNSMap ,defaultNSMap = {})
		parse(source,defaultNSMap,entityMap,
				domBuilder,this.errorHandler);
		domBuilder.endDocument();
	}
}
function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){
	function fixedFromCharCode(code) {
		// String.prototype.fromCharCode does not supports
		// > 2 bytes unicode chars directly
		if (code > 0xffff) {
			code -= 0x10000;
			var surrogate1 = 0xd800 + (code >> 10)
				, surrogate2 = 0xdc00 + (code & 0x3ff);

			return String.fromCharCode(surrogate1, surrogate2);
		} else {
			return String.fromCharCode(code);
		}
	}
	function entityReplacer(a){
		var k = a.slice(1,-1);
		if (Object.hasOwnProperty.call(entityMap, k)) {
			return entityMap[k];
		}else if(k.charAt(0) === '#'){
			return fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))
		}else{
			errorHandler.error('entity not found:'+a);
			return a;
		}
	}
	function appendText(end){//has some bugs
		if(end>start){
			var xt = source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);
			locator&&position(start);
			domBuilder.characters(xt,0,end-start);
			start = end
		}
	}
	function position(p,m){
		while(p>=lineEnd && (m = linePattern.exec(source))){
			lineStart = m.index;
			lineEnd = lineStart + m[0].length;
			locator.lineNumber++;
			//console.log('line++:',locator,startPos,endPos)
		}
		locator.columnNumber = p-lineStart+1;
	}
	var lineStart = 0;
	var lineEnd = 0;
	var linePattern = /.*(?:\r\n?|\n)|.*$/g
	var locator = domBuilder.locator;

	var parseStack = [{currentNSMap:defaultNSMapCopy}]
	var closeMap = {};
	var start = 0;
	while(true){
		try{
			var tagStart = source.indexOf('<',start);
			if(tagStart<0){
				if(!source.substr(start).match(/^\s*$/)){
					var doc = domBuilder.doc;
	    			var text = doc.createTextNode(source.substr(start));
	    			doc.appendChild(text);
	    			domBuilder.currentElement = text;
				}
				return;
			}
			if(tagStart>start){
				appendText(tagStart);
			}
			switch(source.charAt(tagStart+1)){
			case '/':
				var end = source.indexOf('>',tagStart+3);
				var tagName = source.substring(tagStart + 2, end).replace(/[ \t\n\r]+$/g, '');
				var config = parseStack.pop();
				if(end<0){

	        		tagName = source.substring(tagStart+2).replace(/[\s<].*/,'');
	        		errorHandler.error("end tag name: "+tagName+' is not complete:'+config.tagName);
	        		end = tagStart+1+tagName.length;
	        	}else if(tagName.match(/\s</)){
	        		tagName = tagName.replace(/[\s<].*/,'');
	        		errorHandler.error("end tag name: "+tagName+' maybe not complete');
	        		end = tagStart+1+tagName.length;
				}
				var localNSMap = config.localNSMap;
				var endMatch = config.tagName == tagName;
				var endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()
		        if(endIgnoreCaseMach){
		        	domBuilder.endElement(config.uri,config.localName,tagName);
					if(localNSMap){
						for (var prefix in localNSMap) {
							if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {
								domBuilder.endPrefixMapping(prefix);
							}
						}
					}
					if(!endMatch){
		            	errorHandler.fatalError("end tag name: "+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case
					}
		        }else{
		        	parseStack.push(config)
		        }

				end++;
				break;
				// end elment
			case '?':// <?...?>
				locator&&position(tagStart);
				end = parseInstruction(source,tagStart,domBuilder);
				break;
			case '!':// <!doctype,<![CDATA,<!--
				locator&&position(tagStart);
				end = parseDCC(source,tagStart,domBuilder,errorHandler);
				break;
			default:
				locator&&position(tagStart);
				var el = new ElementAttributes();
				var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
				//elStartEnd
				var end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);
				var len = el.length;


				if(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){
					el.closed = true;
					if(!entityMap.nbsp){
						errorHandler.warning('unclosed xml attribute');
					}
				}
				if(locator && len){
					var locator2 = copyLocator(locator,{});
					//try{//attribute position fixed
					for(var i = 0;i<len;i++){
						var a = el[i];
						position(a.offset);
						a.locator = copyLocator(locator,{});
					}
					domBuilder.locator = locator2
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
					domBuilder.locator = locator;
				}else{
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
				}

				if (NAMESPACE.isHTML(el.uri) && !el.closed) {
					end = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)
				} else {
					end++;
				}
			}
		}catch(e){
			if (e instanceof ParseError) {
				throw e;
			}
			errorHandler.error('element parse error: '+e)
			end = -1;
		}
		if(end>start){
			start = end;
		}else{
			//TODO: 这里有可能sax回退，有位置错误风险
			appendText(Math.max(tagStart,start)+1);
		}
	}
}
function copyLocator(f,t){
	t.lineNumber = f.lineNumber;
	t.columnNumber = f.columnNumber;
	return t;
}

/**
 * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
 * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
 */
function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){

	/**
	 * @param {string} qname
	 * @param {string} value
	 * @param {number} startIndex
	 */
	function addAttribute(qname, value, startIndex) {
		if (el.attributeNames.hasOwnProperty(qname)) {
			errorHandler.fatalError('Attribute ' + qname + ' redefined')
		}
		el.addValue(
			qname,
			// @see https://www.w3.org/TR/xml/#AVNormalize
			// since the xmldom sax parser does not "interpret" DTD the following is not implemented:
			// - recursive replacement of (DTD) entity references
			// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA
			value.replace(/[\t\n\r]/g, ' ').replace(/&#?\w+;/g, entityReplacer),
			startIndex
		)
	}
	var attrName;
	var value;
	var p = ++start;
	var s = S_TAG;//status
	while(true){
		var c = source.charAt(p);
		switch(c){
		case '=':
			if(s === S_ATTR){//attrName
				attrName = source.slice(start,p);
				s = S_EQ;
			}else if(s === S_ATTR_SPACE){
				s = S_EQ;
			}else{
				//fatalError: equal must after attrName or space after attrName
				throw new Error('attribute equal must after attrName'); // No known test case
			}
			break;
		case '\'':
		case '"':
			if(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE
				){//equal
				if(s === S_ATTR){
					errorHandler.warning('attribute value must after "="')
					attrName = source.slice(start,p)
				}
				start = p+1;
				p = source.indexOf(c,start)
				if(p>0){
					value = source.slice(start, p);
					addAttribute(attrName, value, start-1);
					s = S_ATTR_END;
				}else{
					//fatalError: no end quot match
					throw new Error('attribute value no end \''+c+'\' match');
				}
			}else if(s == S_ATTR_NOQUOT_VALUE){
				value = source.slice(start, p);
				addAttribute(attrName, value, start);
				errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+')!!');
				start = p+1;
				s = S_ATTR_END
			}else{
				//fatalError: no equal before
				throw new Error('attribute value must after "="'); // No known test case
			}
			break;
		case '/':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				s =S_TAG_CLOSE;
				el.closed = true;
			case S_ATTR_NOQUOT_VALUE:
			case S_ATTR:
				break;
				case S_ATTR_SPACE:
					el.closed = true;
				break;
			//case S_EQ:
			default:
				throw new Error("attribute invalid close char('/')") // No known test case
			}
			break;
		case ''://end document
			errorHandler.error('unexpected end of input');
			if(s == S_TAG){
				el.setTagName(source.slice(start,p));
			}
			return p;
		case '>':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				break;//normal
			case S_ATTR_NOQUOT_VALUE://Compatible state
			case S_ATTR:
				value = source.slice(start,p);
				if(value.slice(-1) === '/'){
					el.closed  = true;
					value = value.slice(0,-1)
				}
			case S_ATTR_SPACE:
				if(s === S_ATTR_SPACE){
					value = attrName;
				}
				if(s == S_ATTR_NOQUOT_VALUE){
					errorHandler.warning('attribute "'+value+'" missed quot(")!');
					addAttribute(attrName, value, start)
				}else{
					if(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){
						errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!')
					}
					addAttribute(value, value, start)
				}
				break;
			case S_EQ:
				throw new Error('attribute value missed!!');
			}
//			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
			return p;
		/*xml space '\x20' | #x9 | #xD | #xA; */
		case '\u0080':
			c = ' ';
		default:
			if(c<= ' '){//space
				switch(s){
				case S_TAG:
					el.setTagName(source.slice(start,p));//tagName
					s = S_TAG_SPACE;
					break;
				case S_ATTR:
					attrName = source.slice(start,p)
					s = S_ATTR_SPACE;
					break;
				case S_ATTR_NOQUOT_VALUE:
					var value = source.slice(start, p);
					errorHandler.warning('attribute "'+value+'" missed quot(")!!');
					addAttribute(attrName, value, start)
				case S_ATTR_END:
					s = S_TAG_SPACE;
					break;
				//case S_TAG_SPACE:
				//case S_EQ:
				//case S_ATTR_SPACE:
				//	void();break;
				//case S_TAG_CLOSE:
					//ignore warning
				}
			}else{//not space
//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
				switch(s){
				//case S_TAG:void();break;
				//case S_ATTR:void();break;
				//case S_ATTR_NOQUOT_VALUE:void();break;
				case S_ATTR_SPACE:
					var tagName =  el.tagName;
					if (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {
						errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead2!!')
					}
					addAttribute(attrName, attrName, start);
					start = p;
					s = S_ATTR;
					break;
				case S_ATTR_END:
					errorHandler.warning('attribute space is required"'+attrName+'"!!')
				case S_TAG_SPACE:
					s = S_ATTR;
					start = p;
					break;
				case S_EQ:
					s = S_ATTR_NOQUOT_VALUE;
					start = p;
					break;
				case S_TAG_CLOSE:
					throw new Error("elements closed character '/' and '>' must be connected to");
				}
			}
		}//end outer switch
		//console.log('p++',p)
		p++;
	}
}
/**
 * @return true if has new namespace define
 */
function appendElement(el,domBuilder,currentNSMap){
	var tagName = el.tagName;
	var localNSMap = null;
	//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
	var i = el.length;
	while(i--){
		var a = el[i];
		var qName = a.qName;
		var value = a.value;
		var nsp = qName.indexOf(':');
		if(nsp>0){
			var prefix = a.prefix = qName.slice(0,nsp);
			var localName = qName.slice(nsp+1);
			var nsPrefix = prefix === 'xmlns' && localName
		}else{
			localName = qName;
			prefix = null
			nsPrefix = qName === 'xmlns' && ''
		}
		//can not set prefix,because prefix !== ''
		a.localName = localName ;
		//prefix == null for no ns prefix attribute
		if(nsPrefix !== false){//hack!!
			if(localNSMap == null){
				localNSMap = {}
				//console.log(currentNSMap,0)
				_copy(currentNSMap,currentNSMap={})
				//console.log(currentNSMap,1)
			}
			currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
			a.uri = NAMESPACE.XMLNS
			domBuilder.startPrefixMapping(nsPrefix, value)
		}
	}
	var i = el.length;
	while(i--){
		a = el[i];
		var prefix = a.prefix;
		if(prefix){//no prefix attribute has no namespace
			if(prefix === 'xml'){
				a.uri = NAMESPACE.XML;
			}if(prefix !== 'xmlns'){
				a.uri = currentNSMap[prefix || '']

				//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
			}
		}
	}
	var nsp = tagName.indexOf(':');
	if(nsp>0){
		prefix = el.prefix = tagName.slice(0,nsp);
		localName = el.localName = tagName.slice(nsp+1);
	}else{
		prefix = null;//important!!
		localName = el.localName = tagName;
	}
	//no prefix element has default namespace
	var ns = el.uri = currentNSMap[prefix || ''];
	domBuilder.startElement(ns,localName,tagName,el);
	//endPrefixMapping and startPrefixMapping have not any help for dom builder
	//localNSMap = null
	if(el.closed){
		domBuilder.endElement(ns,localName,tagName);
		if(localNSMap){
			for (prefix in localNSMap) {
				if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {
					domBuilder.endPrefixMapping(prefix);
				}
			}
		}
	}else{
		el.currentNSMap = currentNSMap;
		el.localNSMap = localNSMap;
		//parseStack.push(el);
		return true;
	}
}
function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){
	if(/^(?:script|textarea)$/i.test(tagName)){
		var elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);
		var text = source.substring(elStartEnd+1,elEndStart);
		if(/[&<]/.test(text)){
			if(/^script$/i.test(tagName)){
				//if(!/\]\]>/.test(text)){
					//lexHandler.startCDATA();
					domBuilder.characters(text,0,text.length);
					//lexHandler.endCDATA();
					return elEndStart;
				//}
			}//}else{//text area
				text = text.replace(/&#?\w+;/g,entityReplacer);
				domBuilder.characters(text,0,text.length);
				return elEndStart;
			//}

		}
	}
	return elStartEnd+1;
}
function fixSelfClosed(source,elStartEnd,tagName,closeMap){
	//if(tagName in closeMap){
	var pos = closeMap[tagName];
	if(pos == null){
		//console.log(tagName)
		pos =  source.lastIndexOf('</'+tagName+'>')
		if(pos<elStartEnd){//忘记闭合
			pos = source.lastIndexOf('</'+tagName)
		}
		closeMap[tagName] =pos
	}
	return pos<elStartEnd;
	//}
}

function _copy (source, target) {
	for (var n in source) {
		if (Object.prototype.hasOwnProperty.call(source, n)) {
			target[n] = source[n];
		}
	}
}

function parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'
	var next= source.charAt(start+2)
	switch(next){
	case '-':
		if(source.charAt(start + 3) === '-'){
			var end = source.indexOf('-->',start+4);
			//append comment source.substring(4,end)//<!--
			if(end>start){
				domBuilder.comment(source,start+4,end-start-4);
				return end+3;
			}else{
				errorHandler.error("Unclosed comment");
				return -1;
			}
		}else{
			//error
			return -1;
		}
	default:
		if(source.substr(start+3,6) == 'CDATA['){
			var end = source.indexOf(']]>',start+9);
			domBuilder.startCDATA();
			domBuilder.characters(source,start+9,end-start-9);
			domBuilder.endCDATA()
			return end+3;
		}
		//<!DOCTYPE
		//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)
		var matchs = split(source,start);
		var len = matchs.length;
		if(len>1 && /!doctype/i.test(matchs[0][0])){
			var name = matchs[1][0];
			var pubid = false;
			var sysid = false;
			if(len>3){
				if(/^public$/i.test(matchs[2][0])){
					pubid = matchs[3][0];
					sysid = len>4 && matchs[4][0];
				}else if(/^system$/i.test(matchs[2][0])){
					sysid = matchs[3][0];
				}
			}
			var lastMatch = matchs[len-1]
			domBuilder.startDTD(name, pubid, sysid);
			domBuilder.endDTD();

			return lastMatch.index+lastMatch[0].length
		}
	}
	return -1;
}



function parseInstruction(source,start,domBuilder){
	var end = source.indexOf('?>',start);
	if(end){
		var match = source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
		if(match){
			var len = match[0].length;
			domBuilder.processingInstruction(match[1], match[2]) ;
			return end+2;
		}else{//error
			return -1;
		}
	}
	return -1;
}

function ElementAttributes(){
	this.attributeNames = {}
}
ElementAttributes.prototype = {
	setTagName:function(tagName){
		if(!tagNamePattern.test(tagName)){
			throw new Error('invalid tagName:'+tagName)
		}
		this.tagName = tagName
	},
	addValue:function(qName, value, offset) {
		if(!tagNamePattern.test(qName)){
			throw new Error('invalid attribute:'+qName)
		}
		this.attributeNames[qName] = this.length;
		this[this.length++] = {qName:qName,value:value,offset:offset}
	},
	length:0,
	getLocalName:function(i){return this[i].localName},
	getLocator:function(i){return this[i].locator},
	getQName:function(i){return this[i].qName},
	getURI:function(i){return this[i].uri},
	getValue:function(i){return this[i].value}
//	,getIndex:function(uri, localName)){
//		if(localName){
//
//		}else{
//			var qName = uri
//		}
//	},
//	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
//	getType:function(uri,localName){}
//	getType:function(i){},
}



function split(source,start){
	var match;
	var buf = [];
	var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
	reg.lastIndex = start;
	reg.exec(source);//skip <
	while(match = reg.exec(source)){
		buf.push(match);
		if(match[1])return buf;
	}
}

exports.XMLReader = XMLReader;
exports.ParseError = ParseError;


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/**
 * Module dependencies.
 */

var base64 = __webpack_require__(230);
var xmlbuilder = __webpack_require__(639);

/**
 * Module exports.
 */

exports.build = build;

/**
 * Accepts a `Date` instance and returns an ISO date string.
 *
 * @param {Date} d - Date instance to serialize
 * @returns {String} ISO date string representation of `d`
 * @api private
 */

function ISODateString(d){
  function pad(n){
    return n < 10 ? '0' + n : n;
  }
  return d.getUTCFullYear()+'-'
    + pad(d.getUTCMonth()+1)+'-'
    + pad(d.getUTCDate())+'T'
    + pad(d.getUTCHours())+':'
    + pad(d.getUTCMinutes())+':'
    + pad(d.getUTCSeconds())+'Z';
}

/**
 * Returns the internal "type" of `obj` via the
 * `Object.prototype.toString()` trick.
 *
 * @param {Mixed} obj - any value
 * @returns {String} the internal "type" name
 * @api private
 */

var toString = Object.prototype.toString;
function type (obj) {
  var m = toString.call(obj).match(/\[object (.*)\]/);
  return m ? m[1] : m;
}

/**
 * Generate an XML plist string from the input object `obj`.
 *
 * @param {Object} obj - the object to convert
 * @param {Object} [opts] - optional options object
 * @returns {String} converted plist XML string
 * @api public
 */

function build (obj, opts) {
  var XMLHDR = {
    version: '1.0',
    encoding: 'UTF-8'
  };

  var XMLDTD = {
    pubid: '-//Apple//DTD PLIST 1.0//EN',
    sysid: 'http://www.apple.com/DTDs/PropertyList-1.0.dtd'
  };

  var doc = xmlbuilder.create('plist');

  doc.dec(XMLHDR.version, XMLHDR.encoding, XMLHDR.standalone);
  doc.dtd(XMLDTD.pubid, XMLDTD.sysid);
  doc.att('version', '1.0');

  walk_obj(obj, doc);

  if (!opts) opts = {};
  // default `pretty` to `true`
  opts.pretty = opts.pretty !== false;
  return doc.end(opts);
}

/**
 * depth first, recursive traversal of a javascript object. when complete,
 * next_child contains a reference to the build XML object.
 *
 * @api private
 */

function walk_obj(next, next_child) {
  var tag_type, i, prop;
  var name = type(next);

  if ('Undefined' == name) {
    return;
  } else if (Array.isArray(next)) {
    next_child = next_child.ele('array');
    for (i = 0; i < next.length; i++) {
      walk_obj(next[i], next_child);
    }

  } else if (Buffer.isBuffer(next)) {
    next_child.ele('data').raw(next.toString('base64'));

  } else if ('Object' == name) {
    next_child = next_child.ele('dict');
    for (prop in next) {
      if (next.hasOwnProperty(prop)) {
        next_child.ele('key').txt(prop);
        walk_obj(next[prop], next_child);
      }
    }

  } else if ('Number' == name) {
    // detect if this is an integer or real
    // TODO: add an ability to force one way or another via a "cast"
    tag_type = (next % 1 === 0) ? 'integer' : 'real';
    next_child.ele(tag_type).txt(next.toString());

  } else if ('BigInt' == name) {
    next_child.ele('integer').txt(next);

  } else if ('Date' == name) {
    next_child.ele('date').txt(ISODateString(new Date(next)));

  } else if ('Boolean' == name) {
    next_child.ele(next ? 'true' : 'false');

  } else if ('String' == name) {
    next_child.ele('string').txt(next);

  } else if ('ArrayBuffer' == name) {
    next_child.ele('data').raw(base64.fromByteArray(next));

  } else if (next && next.buffer && 'ArrayBuffer' == type(next.buffer)) {
    // a typed array
    next_child.ele('data').raw(base64.fromByteArray(new Uint8Array(next.buffer), next_child));

  } else if ('Null' === name) {
    next_child.ele('null').txt('');

  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(229).Buffer))

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction;

  ({assign, isFunction} = __webpack_require__(24));

  XMLDOMImplementation = __webpack_require__(232);

  XMLDocument = __webpack_require__(233);

  XMLDocumentCB = __webpack_require__(645);

  XMLStringWriter = __webpack_require__(103);

  XMLStreamWriter = __webpack_require__(646);

  NodeType = __webpack_require__(6);

  WriterState = __webpack_require__(59);

  // Creates a new document and returns the root node for
  // chain-building the document tree

  // `name` name of the root element

  // `xmldec.version` A version number string, e.g. 1.0
  // `xmldec.encoding` Encoding declaration, e.g. UTF-8
  // `xmldec.standalone` standalone document declaration: true or false

  // `doctype.pubID` public identifier of the external subset
  // `doctype.sysID` system identifier of the external subset

  // `options.headless` whether XML declaration and doctype will be included:
  //     true or false
  // `options.keepNullNodes` whether nodes with null values will be kept
  //     or ignored: true or false
  // `options.keepNullAttributes` whether attributes with null values will be
  //     kept or ignored: true or false
  // `options.ignoreDecorators` whether decorator strings will be ignored when
  //     converting JS objects: true or false
  // `options.separateArrayItems` whether array items are created as separate
  //     nodes when passed as an object value: true or false
  // `options.noDoubleEncoding` whether existing html entities are encoded:
  //     true or false
  // `options.stringify` a set of functions to use for converting values to
  //     strings
  // `options.writer` the default XML writer to use for converting nodes to
  //     string. If the default writer is not set, the built-in XMLStringWriter
  //     will be used instead.
  module.exports.create = function(name, xmldec, doctype, options) {
    var doc, root;
    if (name == null) {
      throw new Error("Root element needs a name.");
    }
    options = assign({}, xmldec, doctype, options);
    // create the document node
    doc = new XMLDocument(options);
    // add the root node
    root = doc.element(name);
    // prolog
    if (!options.headless) {
      doc.declaration(options);
      if ((options.pubID != null) || (options.sysID != null)) {
        doc.dtd(options);
      }
    }
    return root;
  };

  // Creates a new document and returns the document node for
  // chain-building the document tree

  // `options.keepNullNodes` whether nodes with null values will be kept
  //     or ignored: true or false
  // `options.keepNullAttributes` whether attributes with null values will be
  //     kept or ignored: true or false
  // `options.ignoreDecorators` whether decorator strings will be ignored when
  //     converting JS objects: true or false
  // `options.separateArrayItems` whether array items are created as separate
  //     nodes when passed as an object value: true or false
  // `options.noDoubleEncoding` whether existing html entities are encoded:
  //     true or false
  // `options.stringify` a set of functions to use for converting values to
  //     strings
  // `options.writer` the default XML writer to use for converting nodes to
  //     string. If the default writer is not set, the built-in XMLStringWriter
  //     will be used instead.

  // `onData` the function to be called when a new chunk of XML is output. The
  //          string containing the XML chunk is passed to `onData` as its single
  //          argument.
  // `onEnd`  the function to be called when the XML document is completed with
  //          `end`. `onEnd` does not receive any arguments.
  module.exports.begin = function(options, onData, onEnd) {
    if (isFunction(options)) {
      [onData, onEnd] = [options, onData];
      options = {};
    }
    if (onData) {
      return new XMLDocumentCB(options, onData, onEnd);
    } else {
      return new XMLDocument(options);
    }
  };

  module.exports.stringWriter = function(options) {
    return new XMLStringWriter(options);
  };

  module.exports.streamWriter = function(stream, options) {
    return new XMLStreamWriter(stream, options);
  };

  module.exports.implementation = new XMLDOMImplementation();

  module.exports.nodeType = NodeType;

  module.exports.writerState = WriterState;

}).call(this);


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;

  XMLDOMErrorHandler = __webpack_require__(641);

  XMLDOMStringList = __webpack_require__(642);

  // Implements the DOMConfiguration interface
  module.exports = XMLDOMConfiguration = (function() {
    class XMLDOMConfiguration {
      constructor() {
        var clonedSelf;
        this.defaultParams = {
          "canonical-form": false,
          "cdata-sections": false,
          "comments": false,
          "datatype-normalization": false,
          "element-content-whitespace": true,
          "entities": true,
          "error-handler": new XMLDOMErrorHandler(),
          "infoset": true,
          "validate-if-schema": false,
          "namespaces": true,
          "namespace-declarations": true,
          "normalize-characters": false,
          "schema-location": '',
          "schema-type": '',
          "split-cdata-sections": true,
          "validate": false,
          "well-formed": true
        };
        this.params = clonedSelf = Object.create(this.defaultParams);
      }

      // Gets the value of a parameter.

      // `name` name of the parameter
      getParameter(name) {
        if (this.params.hasOwnProperty(name)) {
          return this.params[name];
        } else {
          return null;
        }
      }

      // Checks if setting a parameter to a specific value is supported.

      // `name` name of the parameter
      // `value` parameter value
      canSetParameter(name, value) {
        return true;
      }

      // Sets the value of a parameter.

      // `name` name of the parameter
      // `value` new value or null if the user wishes to unset the parameter
      setParameter(name, value) {
        if (value != null) {
          return this.params[name] = value;
        } else {
          return delete this.params[name];
        }
      }

    };

    // Returns the list of parameter names
    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {
      get: function() {
        return new XMLDOMStringList(Object.keys(this.defaultParams));
      }
    });

    return XMLDOMConfiguration;

  }).call(this);

}).call(this);


/***/ }),
/* 641 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Represents the error handler for DOM operations
  var XMLDOMErrorHandler;

  module.exports = XMLDOMErrorHandler = class XMLDOMErrorHandler {
    // Initializes a new instance of `XMLDOMErrorHandler`

    constructor() {}

    // Called on the error handler when an error occurs.

    // `error` the error message as a string
    handleError(error) {
      throw new Error(error);
    }

  };

}).call(this);


/***/ }),
/* 642 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Represents a list of string entries
  var XMLDOMStringList;

  module.exports = XMLDOMStringList = (function() {
    class XMLDOMStringList {
      // Initializes a new instance of `XMLDOMStringList`
      // This is just a wrapper around an ordinary
      // JS array.

      // `arr` the array of string values
      constructor(arr) {
        this.arr = arr || [];
      }

      // Returns the indexth item in the collection.

      // `index` index into the collection
      item(index) {
        return this.arr[index] || null;
      }

      // Test if a string is part of this DOMStringList.

      // `str` the string to look for
      contains(str) {
        return this.arr.indexOf(str) !== -1;
      }

    };

    // Returns the number of strings in the list.
    Object.defineProperty(XMLDOMStringList.prototype, 'length', {
      get: function() {
        return this.arr.length;
      }
    });

    return XMLDOMStringList;

  }).call(this);

}).call(this);


/***/ }),
/* 643 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  // Represents a list of nodes
  var XMLNodeList;

  module.exports = XMLNodeList = (function() {
    class XMLNodeList {
      // Initializes a new instance of `XMLNodeList`
      // This is just a wrapper around an ordinary
      // JS array.

      // `nodes` the array containing nodes.
      constructor(nodes) {
        this.nodes = nodes;
      }

      // Creates and returns a deep clone of `this`

      clone() {
        // this class should not be cloned since it wraps
        // around a given array. The calling function should check
        // whether the wrapped array is null and supply a new array
        // (from the clone).
        return this.nodes = null;
      }

      // DOM Level 1
      item(index) {
        return this.nodes[index] || null;
      }

    };

    // DOM level 1
    Object.defineProperty(XMLNodeList.prototype, 'length', {
      get: function() {
        return this.nodes.length || 0;
      }
    });

    return XMLNodeList;

  }).call(this);

}).call(this);


/***/ }),
/* 644 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 2.4.1
(function() {
  module.exports = {
    Disconnected: 1,
    Preceding: 2,
    Following: 4,
    Contains: 8,
    ContainedBy: 16,
    ImplementationSpecific: 32
  };

}).call(this);


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject,
    hasProp = {}.hasOwnProperty;

  ({isObject, isFunction, isPlainObject, getValue} = __webpack_require__(24));

  NodeType = __webpack_require__(6);

  XMLDocument = __webpack_require__(233);

  XMLElement = __webpack_require__(90);

  XMLCData = __webpack_require__(92);

  XMLComment = __webpack_require__(93);

  XMLRaw = __webpack_require__(100);

  XMLText = __webpack_require__(101);

  XMLProcessingInstruction = __webpack_require__(102);

  XMLDeclaration = __webpack_require__(94);

  XMLDocType = __webpack_require__(95);

  XMLDTDAttList = __webpack_require__(96);

  XMLDTDEntity = __webpack_require__(97);

  XMLDTDElement = __webpack_require__(98);

  XMLDTDNotation = __webpack_require__(99);

  XMLAttribute = __webpack_require__(234);

  XMLStringifier = __webpack_require__(236);

  XMLStringWriter = __webpack_require__(103);

  WriterState = __webpack_require__(59);

  // Represents an XML builder
  module.exports = XMLDocumentCB = class XMLDocumentCB {
    // Initializes a new instance of `XMLDocumentCB`

    // `options.keepNullNodes` whether nodes with null values will be kept
    //     or ignored: true or false
    // `options.keepNullAttributes` whether attributes with null values will be
    //     kept or ignored: true or false
    // `options.ignoreDecorators` whether decorator strings will be ignored when
    //     converting JS objects: true or false
    // `options.separateArrayItems` whether array items are created as separate
    //     nodes when passed as an object value: true or false
    // `options.noDoubleEncoding` whether existing html entities are encoded:
    //     true or false
    // `options.stringify` a set of functions to use for converting values to
    //     strings
    // `options.writer` the default XML writer to use for converting nodes to
    //     string. If the default writer is not set, the built-in XMLStringWriter
    //     will be used instead.

    // `onData` the function to be called when a new chunk of XML is output. The
    //          string containing the XML chunk is passed to `onData` as its first
    //          argument, and the current indentation level as its second argument.
    // `onEnd`  the function to be called when the XML document is completed with
    //          `end`. `onEnd` does not receive any arguments.
    constructor(options, onData, onEnd) {
      var writerOptions;
      this.name = "?xml";
      this.type = NodeType.Document;
      options || (options = {});
      writerOptions = {};
      if (!options.writer) {
        options.writer = new XMLStringWriter();
      } else if (isPlainObject(options.writer)) {
        writerOptions = options.writer;
        options.writer = new XMLStringWriter();
      }
      this.options = options;
      this.writer = options.writer;
      this.writerOptions = this.writer.filterOptions(writerOptions);
      this.stringify = new XMLStringifier(options);
      this.onDataCallback = onData || function() {};
      this.onEndCallback = onEnd || function() {};
      this.currentNode = null;
      this.currentLevel = -1;
      this.openTags = {};
      this.documentStarted = false;
      this.documentCompleted = false;
      this.root = null;
    }

    // Creates a child element node from the given XMLNode

    // `node` the child node
    createChildNode(node) {
      var att, attName, attributes, child, i, len, ref, ref1;
      switch (node.type) {
        case NodeType.CData:
          this.cdata(node.value);
          break;
        case NodeType.Comment:
          this.comment(node.value);
          break;
        case NodeType.Element:
          attributes = {};
          ref = node.attribs;
          for (attName in ref) {
            if (!hasProp.call(ref, attName)) continue;
            att = ref[attName];
            attributes[attName] = att.value;
          }
          this.node(node.name, attributes);
          break;
        case NodeType.Dummy:
          this.dummy();
          break;
        case NodeType.Raw:
          this.raw(node.value);
          break;
        case NodeType.Text:
          this.text(node.value);
          break;
        case NodeType.ProcessingInstruction:
          this.instruction(node.target, node.value);
          break;
        default:
          throw new Error("This XML node type is not supported in a JS object: " + node.constructor.name);
      }
      ref1 = node.children;
      // write child nodes recursively
      for (i = 0, len = ref1.length; i < len; i++) {
        child = ref1[i];
        this.createChildNode(child);
        if (child.type === NodeType.Element) {
          this.up();
        }
      }
      return this;
    }

    // Creates a dummy node

    dummy() {
      // no-op, just return this
      return this;
    }

    // Creates a node

    // `name` name of the node
    // `attributes` an object containing name/value pairs of attributes
    // `text` element text
    node(name, attributes, text) {
      if (name == null) {
        throw new Error("Missing node name.");
      }
      if (this.root && this.currentLevel === -1) {
        throw new Error("Document can only have one root node. " + this.debugInfo(name));
      }
      this.openCurrent();
      name = getValue(name);
      if (attributes == null) {
        attributes = {};
      }
      attributes = getValue(attributes);
      // swap argument order: text <-> attributes
      if (!isObject(attributes)) {
        [text, attributes] = [attributes, text];
      }
      this.currentNode = new XMLElement(this, name, attributes);
      this.currentNode.children = false;
      this.currentLevel++;
      this.openTags[this.currentLevel] = this.currentNode;
      if (text != null) {
        this.text(text);
      }
      return this;
    }

    // Creates a child element node or an element type declaration when called
    // inside the DTD

    // `name` name of the node
    // `attributes` an object containing name/value pairs of attributes
    // `text` element text
    element(name, attributes, text) {
      var child, i, len, oldValidationFlag, ref, root;
      if (this.currentNode && this.currentNode.type === NodeType.DocType) {
        this.dtdElement(...arguments);
      } else {
        if (Array.isArray(name) || isObject(name) || isFunction(name)) {
          oldValidationFlag = this.options.noValidation;
          this.options.noValidation = true;
          root = new XMLDocument(this.options).element('TEMP_ROOT');
          root.element(name);
          this.options.noValidation = oldValidationFlag;
          ref = root.children;
          for (i = 0, len = ref.length; i < len; i++) {
            child = ref[i];
            this.createChildNode(child);
            if (child.type === NodeType.Element) {
              this.up();
            }
          }
        } else {
          this.node(name, attributes, text);
        }
      }
      return this;
    }

    // Adds or modifies an attribute

    // `name` attribute name
    // `value` attribute value
    attribute(name, value) {
      var attName, attValue;
      if (!this.currentNode || this.currentNode.children) {
        throw new Error("att() can only be used immediately after an ele() call in callback mode. " + this.debugInfo(name));
      }
      if (name != null) {
        name = getValue(name);
      }
      if (isObject(name)) { // expand if object
        for (attName in name) {
          if (!hasProp.call(name, attName)) continue;
          attValue = name[attName];
          this.attribute(attName, attValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        if (this.options.keepNullAttributes && (value == null)) {
          this.currentNode.attribs[name] = new XMLAttribute(this, name, "");
        } else if (value != null) {
          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);
        }
      }
      return this;
    }

    // Creates a text node

    // `value` element text
    text(value) {
      var node;
      this.openCurrent();
      node = new XMLText(this, value);
      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates a CDATA node

    // `value` element text without CDATA delimiters
    cdata(value) {
      var node;
      this.openCurrent();
      node = new XMLCData(this, value);
      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates a comment node

    // `value` comment text
    comment(value) {
      var node;
      this.openCurrent();
      node = new XMLComment(this, value);
      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Adds unescaped raw text

    // `value` text
    raw(value) {
      var node;
      this.openCurrent();
      node = new XMLRaw(this, value);
      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Adds a processing instruction

    // `target` instruction target
    // `value` instruction value
    instruction(target, value) {
      var i, insTarget, insValue, len, node;
      this.openCurrent();
      if (target != null) {
        target = getValue(target);
      }
      if (value != null) {
        value = getValue(value);
      }
      if (Array.isArray(target)) { // expand if array
        for (i = 0, len = target.length; i < len; i++) {
          insTarget = target[i];
          this.instruction(insTarget);
        }
      } else if (isObject(target)) { // expand if object
        for (insTarget in target) {
          if (!hasProp.call(target, insTarget)) continue;
          insValue = target[insTarget];
          this.instruction(insTarget, insValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        node = new XMLProcessingInstruction(this, target, value);
        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      }
      return this;
    }

    // Creates the xml declaration

    // `version` A version number string, e.g. 1.0
    // `encoding` Encoding declaration, e.g. UTF-8
    // `standalone` standalone document declaration: true or false
    declaration(version, encoding, standalone) {
      var node;
      this.openCurrent();
      if (this.documentStarted) {
        throw new Error("declaration() must be the first node.");
      }
      node = new XMLDeclaration(this, version, encoding, standalone);
      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates the document type declaration

    // `root`  the name of the root node
    // `pubID` the public identifier of the external subset
    // `sysID` the system identifier of the external subset
    doctype(root, pubID, sysID) {
      this.openCurrent();
      if (root == null) {
        throw new Error("Missing root node name.");
      }
      if (this.root) {
        throw new Error("dtd() must come before the root node.");
      }
      this.currentNode = new XMLDocType(this, pubID, sysID);
      this.currentNode.rootNodeName = root;
      this.currentNode.children = false;
      this.currentLevel++;
      this.openTags[this.currentLevel] = this.currentNode;
      return this;
    }

    // Creates an element type declaration

    // `name` element name
    // `value` element content (defaults to #PCDATA)
    dtdElement(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDElement(this, name, value);
      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates an attribute declaration

    // `elementName` the name of the element containing this attribute
    // `attributeName` attribute name
    // `attributeType` type of the attribute (defaults to CDATA)
    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or
    //                    #DEFAULT) (defaults to #IMPLIED)
    // `defaultValue` default value of the attribute
    //                (only used for #FIXED or #DEFAULT)
    attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      var node;
      this.openCurrent();
      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates a general entity declaration

    // `name` the name of the entity
    // `value` internal entity value or an object with external entity details
    // `value.pubID` public identifier
    // `value.sysID` system identifier
    // `value.nData` notation declaration
    entity(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDEntity(this, false, name, value);
      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates a parameter entity declaration

    // `name` the name of the entity
    // `value` internal entity value or an object with external entity details
    // `value.pubID` public identifier
    // `value.sysID` system identifier
    pEntity(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDEntity(this, true, name, value);
      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Creates a NOTATION declaration

    // `name` the name of the notation
    // `value` an object with external entity details
    // `value.pubID` public identifier
    // `value.sysID` system identifier
    notation(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDNotation(this, name, value);
      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);
      return this;
    }

    // Gets the parent node
    up() {
      if (this.currentLevel < 0) {
        throw new Error("The document node has no parent.");
      }
      if (this.currentNode) {
        if (this.currentNode.children) {
          this.closeNode(this.currentNode);
        } else {
          this.openNode(this.currentNode);
        }
        this.currentNode = null;
      } else {
        this.closeNode(this.openTags[this.currentLevel]);
      }
      delete this.openTags[this.currentLevel];
      this.currentLevel--;
      return this;
    }

    // Ends the document
    end() {
      while (this.currentLevel >= 0) {
        this.up();
      }
      return this.onEnd();
    }

    // Opens the current parent node
    openCurrent() {
      if (this.currentNode) {
        this.currentNode.children = true;
        return this.openNode(this.currentNode);
      }
    }

    // Writes the opening tag of the current node or the entire node if it has
    // no child nodes
    openNode(node) {
      var att, chunk, name, ref;
      if (!node.isOpen) {
        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {
          this.root = node;
        }
        chunk = '';
        if (node.type === NodeType.Element) {
          this.writerOptions.state = WriterState.OpenTag;
          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;
          ref = node.attribs;
          for (name in ref) {
            if (!hasProp.call(ref, name)) continue;
            att = ref[name];
            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);
          }
          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);
          this.writerOptions.state = WriterState.InsideTag; // if node.type is NodeType.DocType
        } else {
          this.writerOptions.state = WriterState.OpenTag;
          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;
          
          // external identifier
          if (node.pubID && node.sysID) {
            chunk += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
          } else if (node.sysID) {
            chunk += ' SYSTEM "' + node.sysID + '"';
          }
          
          // internal subset
          if (node.children) {
            chunk += ' [';
            this.writerOptions.state = WriterState.InsideTag;
          } else {
            this.writerOptions.state = WriterState.CloseTag;
            chunk += '>';
          }
          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);
        }
        this.onData(chunk, this.currentLevel);
        return node.isOpen = true;
      }
    }

    // Writes the closing tag of the current node
    closeNode(node) {
      var chunk;
      if (!node.isClosed) {
        chunk = '';
        this.writerOptions.state = WriterState.CloseTag;
        if (node.type === NodeType.Element) {
          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel); // if node.type is NodeType.DocType
        } else {
          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);
        }
        this.writerOptions.state = WriterState.None;
        this.onData(chunk, this.currentLevel);
        return node.isClosed = true;
      }
    }

    // Called when a new chunk of XML is output

    // `chunk` a string containing the XML chunk
    // `level` current indentation level
    onData(chunk, level) {
      this.documentStarted = true;
      return this.onDataCallback(chunk, level + 1);
    }

    // Called when the XML document is completed
    onEnd() {
      this.documentCompleted = true;
      return this.onEndCallback();
    }

    // Returns debug string
    debugInfo(name) {
      if (name == null) {
        return "";
      } else {
        return "node: <" + name + ">";
      }
    }

    // Node aliases
    ele() {
      return this.element(...arguments);
    }

    nod(name, attributes, text) {
      return this.node(name, attributes, text);
    }

    txt(value) {
      return this.text(value);
    }

    dat(value) {
      return this.cdata(value);
    }

    com(value) {
      return this.comment(value);
    }

    ins(target, value) {
      return this.instruction(target, value);
    }

    dec(version, encoding, standalone) {
      return this.declaration(version, encoding, standalone);
    }

    dtd(root, pubID, sysID) {
      return this.doctype(root, pubID, sysID);
    }

    e(name, attributes, text) {
      return this.element(name, attributes, text);
    }

    n(name, attributes, text) {
      return this.node(name, attributes, text);
    }

    t(value) {
      return this.text(value);
    }

    d(value) {
      return this.cdata(value);
    }

    c(value) {
      return this.comment(value);
    }

    r(value) {
      return this.raw(value);
    }

    i(target, value) {
      return this.instruction(target, value);
    }

    // Attribute aliases
    att() {
      if (this.currentNode && this.currentNode.type === NodeType.DocType) {
        return this.attList(...arguments);
      } else {
        return this.attribute(...arguments);
      }
    }

    a() {
      if (this.currentNode && this.currentNode.type === NodeType.DocType) {
        return this.attList(...arguments);
      } else {
        return this.attribute(...arguments);
      }
    }

    // DTD aliases
    // att() and ele() are defined above
    ent(name, value) {
      return this.entity(name, value);
    }

    pent(name, value) {
      return this.pEntity(name, value);
    }

    not(name, value) {
      return this.notation(name, value);
    }

  };

}).call(this);


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 2.4.1
(function() {
  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,
    hasProp = {}.hasOwnProperty;

  NodeType = __webpack_require__(6);

  XMLWriterBase = __webpack_require__(237);

  WriterState = __webpack_require__(59);

  // Prints XML nodes to a stream
  module.exports = XMLStreamWriter = class XMLStreamWriter extends XMLWriterBase {
    // Initializes a new instance of `XMLStreamWriter`

    // `stream` output stream
    // `options.pretty` pretty prints the result
    // `options.indent` indentation string
    // `options.newline` newline sequence
    // `options.offset` a fixed number of indentations to add to every line
    // `options.allowEmpty` do not self close empty element tags
    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF
    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements
    constructor(stream, options) {
      super(options);
      this.stream = stream;
    }

    endline(node, options, level) {
      if (node.isLastRootNode && options.state === WriterState.CloseTag) {
        return '';
      } else {
        return super.endline(node, options, level);
      }
    }

    document(doc, options) {
      var child, i, j, k, len1, len2, ref, ref1, results;
      ref = doc.children;
      // set a flag so that we don't insert a newline after the last root level node 
      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {
        child = ref[i];
        child.isLastRootNode = i === doc.children.length - 1;
      }
      options = this.filterOptions(options);
      ref1 = doc.children;
      results = [];
      for (k = 0, len2 = ref1.length; k < len2; k++) {
        child = ref1[k];
        results.push(this.writeChildNode(child, options, 0));
      }
      return results;
    }

    cdata(node, options, level) {
      return this.stream.write(super.cdata(node, options, level));
    }

    comment(node, options, level) {
      return this.stream.write(super.comment(node, options, level));
    }

    declaration(node, options, level) {
      return this.stream.write(super.declaration(node, options, level));
    }

    docType(node, options, level) {
      var child, j, len1, ref;
      level || (level = 0);
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      this.stream.write(this.indent(node, options, level));
      this.stream.write('<!DOCTYPE ' + node.root().name);
      // external identifier
      if (node.pubID && node.sysID) {
        this.stream.write(' PUBLIC "' + node.pubID + '" "' + node.sysID + '"');
      } else if (node.sysID) {
        this.stream.write(' SYSTEM "' + node.sysID + '"');
      }
      // internal subset
      if (node.children.length > 0) {
        this.stream.write(' [');
        this.stream.write(this.endline(node, options, level));
        options.state = WriterState.InsideTag;
        ref = node.children;
        for (j = 0, len1 = ref.length; j < len1; j++) {
          child = ref[j];
          this.writeChildNode(child, options, level + 1);
        }
        options.state = WriterState.CloseTag;
        this.stream.write(']');
      }
      // close tag
      options.state = WriterState.CloseTag;
      this.stream.write(options.spaceBeforeSlash + '>');
      this.stream.write(this.endline(node, options, level));
      options.state = WriterState.None;
      return this.closeNode(node, options, level);
    }

    element(node, options, level) {
      var att, attLen, child, childNodeCount, firstChildNode, j, len, len1, name, prettySuppressed, r, ratt, ref, ref1, ref2, rline;
      level || (level = 0);
      // open tag
      this.openNode(node, options, level);
      options.state = WriterState.OpenTag;
      r = this.indent(node, options, level) + '<' + node.name;
      // attributes
      if (options.pretty && options.width > 0) {
        len = r.length;
        ref = node.attribs;
        for (name in ref) {
          if (!hasProp.call(ref, name)) continue;
          att = ref[name];
          ratt = this.attribute(att, options, level);
          attLen = ratt.length;
          if (len + attLen > options.width) {
            rline = this.indent(node, options, level + 1) + ratt;
            r += this.endline(node, options, level) + rline;
            len = rline.length;
          } else {
            rline = ' ' + ratt;
            r += rline;
            len += rline.length;
          }
        }
      } else {
        ref1 = node.attribs;
        for (name in ref1) {
          if (!hasProp.call(ref1, name)) continue;
          att = ref1[name];
          r += this.attribute(att, options, level);
        }
      }
      this.stream.write(r);
      childNodeCount = node.children.length;
      firstChildNode = childNodeCount === 0 ? null : node.children[0];
      if (childNodeCount === 0 || node.children.every(function(e) {
        return (e.type === NodeType.Text || e.type === NodeType.Raw || e.type === NodeType.CData) && e.value === '';
      })) {
        // empty element
        if (options.allowEmpty) {
          this.stream.write('>');
          options.state = WriterState.CloseTag;
          this.stream.write('</' + node.name + '>');
        } else {
          options.state = WriterState.CloseTag;
          this.stream.write(options.spaceBeforeSlash + '/>');
        }
      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw || firstChildNode.type === NodeType.CData) && (firstChildNode.value != null)) {
        // do not indent text-only nodes
        this.stream.write('>');
        options.state = WriterState.InsideTag;
        options.suppressPrettyCount++;
        prettySuppressed = true;
        this.writeChildNode(firstChildNode, options, level + 1);
        options.suppressPrettyCount--;
        prettySuppressed = false;
        options.state = WriterState.CloseTag;
        this.stream.write('</' + node.name + '>');
      } else {
        this.stream.write('>' + this.endline(node, options, level));
        options.state = WriterState.InsideTag;
        ref2 = node.children;
        // inner tags
        for (j = 0, len1 = ref2.length; j < len1; j++) {
          child = ref2[j];
          this.writeChildNode(child, options, level + 1);
        }
        // close tag
        options.state = WriterState.CloseTag;
        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');
      }
      this.stream.write(this.endline(node, options, level));
      options.state = WriterState.None;
      return this.closeNode(node, options, level);
    }

    processingInstruction(node, options, level) {
      return this.stream.write(super.processingInstruction(node, options, level));
    }

    raw(node, options, level) {
      return this.stream.write(super.raw(node, options, level));
    }

    text(node, options, level) {
      return this.stream.write(super.text(node, options, level));
    }

    dtdAttList(node, options, level) {
      return this.stream.write(super.dtdAttList(node, options, level));
    }

    dtdElement(node, options, level) {
      return this.stream.write(super.dtdElement(node, options, level));
    }

    dtdEntity(node, options, level) {
      return this.stream.write(super.dtdEntity(node, options, level));
    }

    dtdNotation(node, options, level) {
      return this.stream.write(super.dtdNotation(node, options, level));
    }

  };

}).call(this);


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {
;(function(){
var UPNG = {};

// Make available for import by `require()`
var pako;
if (true) {module.exports = UPNG;}  else {window.UPNG = UPNG;}
if (true) {pako = __webpack_require__(648);}  else {pako = window.pako;}
function log() { if (typeof process=="undefined" || "production"=="development") console.log.apply(console, arguments);  }
(function(UPNG, pako){

	

	

UPNG.toRGBA8 = function(out)
{
	var w = out.width, h = out.height;
	if(out.tabs.acTL==null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];
	
	var frms = [];
	if(out.frames[0].data==null) out.frames[0].data = out.data;
	
	var img, empty = new Uint8Array(w*h*4);
	for(var i=0; i<out.frames.length; i++)
	{
		var frm = out.frames[i];
		var fx=frm.rect.x, fy=frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;
		var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw,fh, out);
		
		if(i==0) img = fdata;
		else if(frm.blend  ==0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);
		else if(frm.blend  ==1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);
		
		frms.push(img.buffer);  img = img.slice(0);
		
		if     (frm.dispose==0) {}
		else if(frm.dispose==1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);
		else if(frm.dispose==2) {
			var pi = i-1;
			while(out.frames[pi].dispose==2) pi--;
			img = new Uint8Array(frms[pi]).slice(0);
		}
	}
	return frms;
}
UPNG.toRGBA8.decodeImage = function(data, w, h, out)
{
	var area = w*h, bpp = UPNG.decode._getBPP(out);
	var bpl = Math.ceil(w*bpp/8);	// bytes per line

	var bf = new Uint8Array(area*4), bf32 = new Uint32Array(bf.buffer);
	var ctype = out.ctype, depth = out.depth;
	var rs = UPNG._bin.readUshort;
	
	//console.log(ctype, depth);

	if     (ctype==6) { // RGB + alpha
		var qarea = area<<2;
		if(depth== 8) for(var i=0; i<qarea;i++) {  bf[i] = data[i];  /*if((i&3)==3 && data[i]!=0) bf[i]=255;*/ }
		if(depth==16) for(var i=0; i<qarea;i++) {  bf[i] = data[i<<1];  }
	}
	else if(ctype==2) {	// RGB
		var ts=out.tabs["tRNS"], tr=-1, tg=-1, tb=-1;
		if(ts) {  tr=ts[0];  tg=ts[1];  tb=ts[2];  }
		if(depth== 8) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  bf[qi] = data[ti];  bf[qi+1] = data[ti+1];  bf[qi+2] = data[ti+2];  bf[qi+3] = 255;
			if(tr!=-1 && data[ti]   ==tr && data[ti+1]   ==tg && data[ti+2]   ==tb) bf[qi+3] = 0;  }
		if(depth==16) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6;  bf[qi] = data[ti];  bf[qi+1] = data[ti+2];  bf[qi+2] = data[ti+4];  bf[qi+3] = 255;
			if(tr!=-1 && rs(data,ti)==tr && rs(data,ti+2)==tg && rs(data,ti+4)==tb) bf[qi+3] = 0;  }
	}
	else if(ctype==3) {	// palette
		var p=out.tabs["PLTE"], ap=out.tabs["tRNS"], tl=ap?ap.length:0;
		//console.log(p, ap);
		if(depth==1) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>3)]>>(7-((i&7)<<0)))& 1), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==2) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>2)]>>(6-((i&3)<<1)))& 3), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==4) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>1)]>>(4-((i&1)<<2)))&15), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==8) for(var i=0; i<area; i++ ) {  var qi=i<<2, j=data[i]                      , cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
	}
	else if(ctype==4) {	// gray + alpha
		if(depth== 8)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<1, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+1];  }
		if(depth==16)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<2, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+2];  }
	}
	else if(ctype==0) {	// gray
		var tr = out.tabs["tRNS"] ? out.tabs["tRNS"] : -1;
		if(depth== 1) for(var i=0; i<area; i++) {  var gr=255*((data[i>>3]>>(7 -((i&7)   )))& 1), al=(gr==tr*255)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
		if(depth== 2) for(var i=0; i<area; i++) {  var gr= 85*((data[i>>2]>>(6 -((i&3)<<1)))& 3), al=(gr==tr* 85)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
		if(depth== 4) for(var i=0; i<area; i++) {  var gr= 17*((data[i>>1]>>(4 -((i&1)<<2)))&15), al=(gr==tr* 17)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
		if(depth== 8) for(var i=0; i<area; i++) {  var gr=data[i  ] , al=(gr           ==tr)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
		if(depth==16) for(var i=0; i<area; i++) {  var gr=data[i<<1], al=(rs(data,i<<1)==tr)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
	}
	return bf;
}



UPNG.decode = function(buff)
{
	var data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;
	var out = {tabs:{}, frames:[]};
	var dd = new Uint8Array(data.length), doff = 0;	 // put all IDAT data into it
	var fd, foff = 0;	// frames
	
	var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];
	for(var i=0; i<8; i++) if(data[i]!=mgck[i]) throw "The input is not a PNG file!";

	while(offset<data.length)
	{
		var len  = bin.readUint(data, offset);  offset += 4;
		var type = bin.readASCII(data, offset, 4);  offset += 4;
		//log(type,len);
		
		if     (type=="IHDR")  {  UPNG.decode._IHDR(data, offset, out);  }
		else if(type=="IDAT") {
			for(var i=0; i<len; i++) dd[doff+i] = data[offset+i];
			doff += len;
		}
		else if(type=="acTL")  {
			out.tabs[type] = {  num_frames:rUi(data, offset), num_plays:rUi(data, offset+4)  };
			fd = new Uint8Array(data.length);
		}
		else if(type=="fcTL")  {
			if(foff!=0) {  var fr = out.frames[out.frames.length-1];
				fr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;
			}
			var rct = {x:rUi(data, offset+12),y:rUi(data, offset+16),width:rUi(data, offset+4),height:rUi(data, offset+8)};
			var del = rUs(data, offset+22);  del = rUs(data, offset+20) / (del==0?100:del);
			var frm = {rect:rct, delay:Math.round(del*1000), dispose:data[offset+24], blend:data[offset+25]};
			//console.log(frm);
			out.frames.push(frm);
		}
		else if(type=="fdAT") {
			for(var i=0; i<len-4; i++) fd[foff+i] = data[offset+i+4];
			foff += len-4;
		}
		else if(type=="pHYs") {
			out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset+4), data[offset+8]];
		}
		else if(type=="cHRM") {
			out.tabs[type] = [];
			for(var i=0; i<8; i++) out.tabs[type].push(bin.readUint(data, offset+i*4));
		}
		else if(type=="tEXt") {
			if(out.tabs[type]==null) out.tabs[type] = {};
			var nz = bin.nextZero(data, offset);
			var keyw = bin.readASCII(data, offset, nz-offset);
			var text = bin.readASCII(data, nz+1, offset+len-nz-1);
			out.tabs[type][keyw] = text;
		}
		else if(type=="iTXt") {
			if(out.tabs[type]==null) out.tabs[type] = {};
			var nz = 0, off = offset;
			nz = bin.nextZero(data, off);
			var keyw = bin.readASCII(data, off, nz-off);  off = nz + 1;
			var cflag = data[off], cmeth = data[off+1];  off+=2;
			nz = bin.nextZero(data, off);
			var ltag = bin.readASCII(data, off, nz-off);  off = nz + 1;
			nz = bin.nextZero(data, off);
			var tkeyw = bin.readUTF8(data, off, nz-off);  off = nz + 1;
			var text  = bin.readUTF8(data, off, len-(off-offset));
			out.tabs[type][keyw] = text;
		}
		else if(type=="PLTE") {
			out.tabs[type] = bin.readBytes(data, offset, len);
		}
		else if(type=="hIST") {
			var pl = out.tabs["PLTE"].length/3;
			out.tabs[type] = [];  for(var i=0; i<pl; i++) out.tabs[type].push(rUs(data, offset+i*2));
		}
		else if(type=="tRNS") {
			if     (out.ctype==3) out.tabs[type] = bin.readBytes(data, offset, len);
			else if(out.ctype==0) out.tabs[type] = rUs(data, offset);
			else if(out.ctype==2) out.tabs[type] = [ rUs(data,offset),rUs(data,offset+2),rUs(data,offset+4) ];
			//else console.log("tRNS for unsupported color type",out.ctype, len);
		}
		else if(type=="gAMA") out.tabs[type] = bin.readUint(data, offset)/100000;
		else if(type=="sRGB") out.tabs[type] = data[offset];
		else if(type=="bKGD")
		{
			if     (out.ctype==0 || out.ctype==4) out.tabs[type] = [rUs(data, offset)];
			else if(out.ctype==2 || out.ctype==6) out.tabs[type] = [rUs(data, offset), rUs(data, offset+2), rUs(data, offset+4)];
			else if(out.ctype==3) out.tabs[type] = data[offset];
		}
		else if(type=="IEND") {
			if(foff!=0) {  var fr = out.frames[out.frames.length-1];
				fr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;
			}	
			out.data = UPNG.decode._decompress(out, dd, out.width, out.height);  break;
		}
		//else {  log("unknown chunk type", type, len);  }
		offset += len;
		var crc = bin.readUint(data, offset);  offset += 4;
	}
	delete out.compress;  delete out.interlace;  delete out.filter;
	return out;
}

UPNG.decode._decompress = function(out, dd, w, h) {
	if(out.compress ==0) dd = UPNG.decode._inflate(dd);

	if     (out.interlace==0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);
	else if(out.interlace==1) dd = UPNG.decode._readInterlace(dd, out);
	return dd;
}

UPNG.decode._inflate = function(data) {  return pako["inflate"](data);  }

UPNG.decode._readInterlace = function(data, out)
{
	var w = out.width, h = out.height;
	var bpp = UPNG.decode._getBPP(out), cbpp = bpp>>3, bpl = Math.ceil(w*bpp/8);
	var img = new Uint8Array( h * bpl );
	var di = 0;

	var starting_row  = [ 0, 0, 4, 0, 2, 0, 1 ];
	var starting_col  = [ 0, 4, 0, 2, 0, 1, 0 ];
	var row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];
	var col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];

	var pass=0;
	while(pass<7)
	{
		var ri = row_increment[pass], ci = col_increment[pass];
		var sw = 0, sh = 0;
		var cr = starting_row[pass];  while(cr<h) {  cr+=ri;  sh++;  }
		var cc = starting_col[pass];  while(cc<w) {  cc+=ci;  sw++;  }
		var bpll = Math.ceil(sw*bpp/8);
		UPNG.decode._filterZero(data, out, di, sw, sh);

		var y=0, row = starting_row[pass];
		while(row<h)
		{
			var col = starting_col[pass];
			var cdi = (di+y*bpll)<<3;

			while(col<w)
			{
				if(bpp==1) {
					var val = data[cdi>>3];  val = (val>>(7-(cdi&7)))&1;
					img[row*bpl + (col>>3)] |= (val << (7-((col&3)<<0)));
				}
				if(bpp==2) {
					var val = data[cdi>>3];  val = (val>>(6-(cdi&7)))&3;
					img[row*bpl + (col>>2)] |= (val << (6-((col&3)<<1)));
				}
				if(bpp==4) {
					var val = data[cdi>>3];  val = (val>>(4-(cdi&7)))&15;
					img[row*bpl + (col>>1)] |= (val << (4-((col&1)<<2)));
				}
				if(bpp>=8) {
					var ii = row*bpl+col*cbpp;
					for(var j=0; j<cbpp; j++) img[ii+j] = data[(cdi>>3)+j];
				}
				cdi+=bpp;  col+=ci;
			}
			y++;  row += ri;
		}
		if(sw*sh!=0) di += sh * (1 + bpll);
		pass = pass + 1;
	}
	return img;
}

UPNG.decode._getBPP = function(out) {
	var noc = [1,null,3,1,2,null,4][out.ctype];
	return noc * out.depth;
}

UPNG.decode._filterZero = function(data, out, off, w, h)
{
	var bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), paeth = UPNG.decode._paeth;
	bpp = Math.ceil(bpp/8);

	for(var y=0; y<h; y++)  {
		var i = off+y*bpl, di = i+y+1;
		var type = data[di-1];

		if     (type==0) for(var x=  0; x<bpl; x++) data[i+x] = data[di+x];
		else if(type==1) {
			for(var x=  0; x<bpp; x++) data[i+x] = data[di+x];
			for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpp])&255;
		}
		else if(y==0) {
			for(var x=  0; x<bpp; x++) data[i+x] = data[di+x];
			if(type==2) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x])&255;
			if(type==3) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + (data[i+x-bpp]>>1) )&255;
			if(type==4) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], 0, 0) )&255;
		}
		else {
			if(type==2) { for(var x=  0; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpl])&255;  }

			if(type==3) { for(var x=  0; x<bpp; x++) data[i+x] = (data[di+x] + (data[i+x-bpl]>>1))&255;
			              for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + ((data[i+x-bpl]+data[i+x-bpp])>>1) )&255;  }

			if(type==4) { for(var x=  0; x<bpp; x++) data[i+x] = (data[di+x] + paeth(0, data[i+x-bpl], 0))&255;
						  for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], data[i+x-bpl], data[i+x-bpp-bpl]) )&255;  }
		}
	}
	return data;
}

UPNG.decode._paeth = function(a,b,c)
{
	var p = a+b-c, pa = Math.abs(p-a), pb = Math.abs(p-b), pc = Math.abs(p-c);
	if (pa <= pb && pa <= pc)  return a;
	else if (pb <= pc)  return b;
	return c;
}

UPNG.decode._IHDR = function(data, offset, out)
{
	var bin = UPNG._bin;
	out.width  = bin.readUint(data, offset);  offset += 4;
	out.height = bin.readUint(data, offset);  offset += 4;
	out.depth     = data[offset];  offset++;
	out.ctype     = data[offset];  offset++;
	out.compress  = data[offset];  offset++;
	out.filter    = data[offset];  offset++;
	out.interlace = data[offset];  offset++;
}

UPNG._bin = {
	nextZero   : function(data,p)  {  while(data[p]!=0) p++;  return p;  },
	readUshort : function(buff,p)  {  return (buff[p]<< 8) | buff[p+1];  },
	writeUshort: function(buff,p,n){  buff[p] = (n>>8)&255;  buff[p+1] = n&255;  },
	readUint   : function(buff,p)  {  return (buff[p]*(256*256*256)) + ((buff[p+1]<<16) | (buff[p+2]<< 8) | buff[p+3]);  },
	writeUint  : function(buff,p,n){  buff[p]=(n>>24)&255;  buff[p+1]=(n>>16)&255;  buff[p+2]=(n>>8)&255;  buff[p+3]=n&255;  },
	readASCII  : function(buff,p,l){  var s = "";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },
	writeASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },
	readBytes  : function(buff,p,l){  var arr = [];   for(var i=0; i<l; i++) arr.push(buff[p+i]);   return arr;  },
	pad : function(n) { return n.length < 2 ? "0" + n : n; },
	readUTF8 : function(buff, p, l) {
		var s = "", ns;
		for(var i=0; i<l; i++) s += "%" + UPNG._bin.pad(buff[p+i].toString(16));
		try {  ns = decodeURIComponent(s); }
		catch(e) {  return UPNG._bin.readASCII(buff, p, l);  }
		return  ns;
	}
}
UPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode)
{
	var w = Math.min(sw,tw), h = Math.min(sh,th);
	var si=0, ti=0;
	for(var y=0; y<h; y++)
		for(var x=0; x<w; x++)
		{
			if(xoff>=0 && yoff>=0) {  si = (y*sw+x)<<2;  ti = (( yoff+y)*tw+xoff+x)<<2;  }
			else                   {  si = ((-yoff+y)*sw-xoff+x)<<2;  ti = (y*tw+x)<<2;  }
			
			if     (mode==0) {  tb[ti] = sb[si];  tb[ti+1] = sb[si+1];  tb[ti+2] = sb[si+2];  tb[ti+3] = sb[si+3];  }
			else if(mode==1) {
				var fa = sb[si+3]*(1/255), fr=sb[si]*fa, fg=sb[si+1]*fa, fb=sb[si+2]*fa; 
				var ba = tb[ti+3]*(1/255), br=tb[ti]*ba, bg=tb[ti+1]*ba, bb=tb[ti+2]*ba; 
				
				var ifa=1-fa, oa = fa+ba*ifa, ioa = (oa==0?0:1/oa);
				tb[ti+3] = 255*oa;  
				tb[ti+0] = (fr+br*ifa)*ioa;  
				tb[ti+1] = (fg+bg*ifa)*ioa;   
				tb[ti+2] = (fb+bb*ifa)*ioa;  
			}
			else if(mode==2){	// copy only differences, otherwise zero
				var fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; 
				var ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; 
				if(fa==ba && fr==br && fg==bg && fb==bb) {  tb[ti]=0;  tb[ti+1]=0;  tb[ti+2]=0;  tb[ti+3]=0;  }
				else {  tb[ti]=fr;  tb[ti+1]=fg;  tb[ti+2]=fb;  tb[ti+3]=fa;  }
			}
			else if(mode==3){	// check if can be blended
				var fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; 
				var ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; 
				if(fa==ba && fr==br && fg==bg && fb==bb) continue;
				//if(fa!=255 && ba!=0) return false;
				if(fa<220 && ba>20) return false;
			}
		}
	return true;
}



UPNG.encode = function(bufs, w, h, ps, dels, forbidPlte)
{
	if(ps==null) ps=0;
	if(forbidPlte==null) forbidPlte = false;
	var data = new Uint8Array(bufs[0].byteLength*bufs.length+100);
	var wr=[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];
	for(var i=0; i<8; i++) data[i]=wr[i];
	var offset = 8,  bin = UPNG._bin, crc = UPNG.crc.crc, wUi = bin.writeUint, wUs = bin.writeUshort, wAs = bin.writeASCII;

	var nimg = UPNG.encode.compressPNG(bufs, w, h, ps, forbidPlte);

	wUi(data,offset, 13);     offset+=4;
	wAs(data,offset,"IHDR");  offset+=4;
	wUi(data,offset,w);  offset+=4;
	wUi(data,offset,h);  offset+=4;
	data[offset] = nimg.depth;  offset++;  // depth
	data[offset] = nimg.ctype;  offset++;  // ctype
	data[offset] = 0;  offset++;  // compress
	data[offset] = 0;  offset++;  // filter
	data[offset] = 0;  offset++;  // interlace
	wUi(data,offset,crc(data,offset-17,17));  offset+=4; // crc

	// 9 bytes to say, that it is sRGB
	wUi(data,offset, 1);      offset+=4;
	wAs(data,offset,"sRGB");  offset+=4;
	data[offset] = 1;  offset++;
	wUi(data,offset,crc(data,offset-5,5));  offset+=4; // crc

	var anim = bufs.length>1;
	if(anim) {
		wUi(data,offset, 8);      offset+=4;
		wAs(data,offset,"acTL");  offset+=4;
		wUi(data,offset, bufs.length);      offset+=4;
		wUi(data,offset, 0);      offset+=4;
		wUi(data,offset,crc(data,offset-12,12));  offset+=4; // crc
	}

	if(nimg.ctype==3) {
		var dl = nimg.plte.length;
		wUi(data,offset, dl*3);  offset+=4;
		wAs(data,offset,"PLTE");  offset+=4;
		for(var i=0; i<dl; i++){
			var ti=i*3, c=nimg.plte[i], r=(c)&255, g=(c>>8)&255, b=(c>>16)&255;
			data[offset+ti+0]=r;  data[offset+ti+1]=g;  data[offset+ti+2]=b;
		}
		offset+=dl*3;
		wUi(data,offset,crc(data,offset-dl*3-4,dl*3+4));  offset+=4; // crc

		if(nimg.gotAlpha) {
			wUi(data,offset, dl);  offset+=4;
			wAs(data,offset,"tRNS");  offset+=4;
			for(var i=0; i<dl; i++)  data[offset+i]=(nimg.plte[i]>>24)&255;
			offset+=dl;
			wUi(data,offset,crc(data,offset-dl-4,dl+4));  offset+=4; // crc
		}
	}
	
	var fi = 0;
	for(var j=0; j<nimg.frames.length; j++)
	{
		var fr = nimg.frames[j];
		if(anim) {
			wUi(data,offset, 26);     offset+=4;
			wAs(data,offset,"fcTL");  offset+=4;
			wUi(data, offset, fi++);   offset+=4;
			wUi(data, offset, fr.rect.width );   offset+=4;
			wUi(data, offset, fr.rect.height);   offset+=4;
			wUi(data, offset, fr.rect.x);   offset+=4;
			wUi(data, offset, fr.rect.y);   offset+=4;
			wUs(data, offset, dels[j]);   offset+=2;
			wUs(data, offset,  1000);   offset+=2;
			data[offset] = fr.dispose;  offset++;	// dispose
			data[offset] = fr.blend  ;  offset++;	// blend
			wUi(data,offset,crc(data,offset-30,30));  offset+=4; // crc
		}
				
		var imgd = fr.cimg, dl = imgd.length;
		wUi(data,offset, dl+(j==0?0:4));     offset+=4;
		var ioff = offset;
		wAs(data,offset,(j==0)?"IDAT":"fdAT");  offset+=4;
		if(j!=0) {  wUi(data, offset, fi++);  offset+=4;  }
		for(var i=0; i<dl; i++) data[offset+i] = imgd[i];
		offset += dl;
		wUi(data,offset,crc(data,ioff,offset-ioff));  offset+=4; // crc
	}

	wUi(data,offset, 0);     offset+=4;
	wAs(data,offset,"IEND");  offset+=4;
	wUi(data,offset,crc(data,offset-4,4));  offset+=4; // crc

	return data.buffer.slice(0,offset);
}

UPNG.encode.compressPNG = function(bufs, w, h, ps, forbidPlte)
{
	var out = UPNG.encode.compress(bufs, w, h, ps, false, forbidPlte);
	for(var i=0; i<bufs.length; i++) {
		var frm = out.frames[i], nw=frm.rect.width, nh=frm.rect.height, bpl=frm.bpl, bpp=frm.bpp;
		var fdata = new Uint8Array(nh*bpl+nh);
		frm.cimg = UPNG.encode._filterZero(frm.img,nh,bpp,bpl,fdata);
	}	
	return out;
}

UPNG.encode.compress = function(bufs, w, h, ps, forGIF, forbidPlte)
{
	if(forbidPlte==null) forbidPlte = false;
	
	var ctype = 6, depth = 8, bpp = 4, alphaAnd=255
	
	for(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame
		var img = new Uint8Array(bufs[j]), ilen = img.length;
		for(var i=0; i<ilen; i+=4) alphaAnd &= img[i+3];
	}
	var gotAlpha = (alphaAnd)!=255;
	
	var cmap={}, plte=[];  if(bufs.length!=0) {  cmap[0]=0;  plte.push(0);  if(ps!=0) ps--;  } 
	
	
	if(ps!=0) {
		var qres = UPNG.quantize(bufs, ps, forGIF);  bufs = qres.bufs;
		for(var i=0; i<qres.plte.length; i++) {  var c=qres.plte[i].est.rgba;  if(cmap[c]==null) {  cmap[c]=plte.length;  plte.push(c);  }     }
	}
	else {
		// what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used
		for(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame
			var img32 = new Uint32Array(bufs[j]), ilen = img32.length;
			for(var i=0; i<ilen; i++) {
				var c = img32[i];
				if((i<w || (c!=img32[i-1] && c!=img32[i-w])) && cmap[c]==null) {  cmap[c]=plte.length;  plte.push(c);  if(plte.length>=300) break;  }
			}
		}
	}
	
	var brute = gotAlpha ? forGIF : false;		// brute : frames can only be copied, not "blended"
	var cc=plte.length;  //console.log(cc);
	if(cc<=256 && forbidPlte==false) {
		if(cc<= 2) depth=1;  else if(cc<= 4) depth=2;  else if(cc<=16) depth=4;  else depth=8;
		if(forGIF) depth=8;
		gotAlpha = true;
	}
	
	
	var frms = [];
	for(var j=0; j<bufs.length; j++)
	{
		var cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);
		
		var nx=0, ny=0, nw=w, nh=h, blend=0;
		if(j!=0 && !brute) {
			var tlim = (forGIF || j==1 || frms[frms.length-2].dispose==2)?1:2, tstp = 0, tarea = 1e9;
			for(var it=0; it<tlim; it++)
			{
				var pimg = new Uint8Array(bufs[j-1-it]), p32 = new Uint32Array(bufs[j-1-it]);
				var mix=w,miy=h,max=-1,may=-1;
				for(var y=0; y<h; y++) for(var x=0; x<w; x++) {
					var i = y*w+x;
					if(cimg32[i]!=p32[i]) {
						if(x<mix) mix=x;  if(x>max) max=x;
						if(y<miy) miy=y;  if(y>may) may=y;
					}
				}
				var sarea = (max==-1) ? 1 : (max-mix+1)*(may-miy+1);
				if(sarea<tarea) {
					tarea = sarea;  tstp = it;  
					if(max==-1) {  nx=ny=0;  nw=nh=1;  }
					else {  nx = mix; ny = miy; nw = max-mix+1; nh = may-miy+1;  }
				}
			}
			
			var pimg = new Uint8Array(bufs[j-1-tstp]);
			if(tstp==1) frms[frms.length-1].dispose = 2;
			
			var nimg = new Uint8Array(nw*nh*4), nimg32 = new Uint32Array(nimg.buffer);
			UPNG.   _copyTile(pimg,w,h, nimg,nw,nh, -nx,-ny, 0);
			if(UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 3)) {
				UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 2);  blend = 1;
			}
			else {
				UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 0);  blend = 0;
			}
			cimg = nimg;  cimg32 = new Uint32Array(cimg.buffer);
		}
		var bpl = 4*nw;
		if(cc<=256 && forbidPlte==false) {
			bpl = Math.ceil(depth*nw/8);
			var nimg = new Uint8Array(bpl*nh);
			for(var y=0; y<nh; y++) {  var i=y*bpl, ii=y*nw;
				if     (depth==8) for(var x=0; x<nw; x++) nimg[i+(x)   ]   =  (cmap[cimg32[ii+x]]             );
				else if(depth==4) for(var x=0; x<nw; x++) nimg[i+(x>>1)]  |=  (cmap[cimg32[ii+x]]<<(4-(x&1)*4));
				else if(depth==2) for(var x=0; x<nw; x++) nimg[i+(x>>2)]  |=  (cmap[cimg32[ii+x]]<<(6-(x&3)*2));
				else if(depth==1) for(var x=0; x<nw; x++) nimg[i+(x>>3)]  |=  (cmap[cimg32[ii+x]]<<(7-(x&7)*1));
			}
			cimg=nimg;  ctype=3;  bpp=1;
		}
		else if(gotAlpha==false && bufs.length==1) {	// some next "reduced" frames may contain alpha for blending
			var nimg = new Uint8Array(nw*nh*3), area=nw*nh;
			for(var i=0; i<area; i++) { var ti=i*3, qi=i*4;  nimg[ti]=cimg[qi];  nimg[ti+1]=cimg[qi+1];  nimg[ti+2]=cimg[qi+2];  }
			cimg=nimg;  ctype=2;  bpp=3;  bpl=3*nw;
		}
		frms.push({rect:{x:nx,y:ny,width:nw,height:nh}, img:cimg, bpl:bpl, bpp:bpp, blend:blend, dispose:brute?1:0});
	}
	return {ctype:ctype, depth:depth, plte:plte, gotAlpha:gotAlpha, frames:frms  };
}

UPNG.encode._filterZero = function(img,h,bpp,bpl,data)
{
	var fls = [];
	for(var t=0; t<5; t++) {  if(h*bpl>500000 && (t==2 || t==3 || t==4)) continue;
		for(var y=0; y<h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, t);
		fls.push(pako["deflate"](data));  if(bpp==1) break;
	}
	var ti, tsize=1e9;
	for(var i=0; i<fls.length; i++) if(fls[i].length<tsize) {  ti=i;  tsize=fls[i].length;  }
	return fls[ti];
}
UPNG.encode._filterLine = function(data, img, y, bpl, bpp, type)
{
	var i = y*bpl, di = i+y, paeth = UPNG.decode._paeth
	data[di]=type;  di++;

	if(type==0) for(var x=0; x<bpl; x++) data[di+x] = img[i+x];
	else if(type==1) {
		for(var x=  0; x<bpp; x++) data[di+x] =  img[i+x];
		for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]-img[i+x-bpp]+256)&255;
	}
	else if(y==0) {
		for(var x=  0; x<bpp; x++) data[di+x] = img[i+x];

		if(type==2) for(var x=bpp; x<bpl; x++) data[di+x] = img[i+x];
		if(type==3) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - (img[i+x-bpp]>>1) +256)&255;
		if(type==4) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - paeth(img[i+x-bpp], 0, 0) +256)&255;
	}
	else {
		if(type==2) { for(var x=  0; x<bpl; x++) data[di+x] = (img[i+x]+256 - img[i+x-bpl])&255;  }
		if(type==3) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - (img[i+x-bpl]>>1))&255;
					  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - ((img[i+x-bpl]+img[i+x-bpp])>>1))&255;  }
		if(type==4) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - paeth(0, img[i+x-bpl], 0))&255;
					  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - paeth(img[i+x-bpp], img[i+x-bpl], img[i+x-bpp-bpl]))&255;  }
	}
}

UPNG.crc = {
	table : ( function() {
	   var tab = new Uint32Array(256);
	   for (var n=0; n<256; n++) {
			var c = n;
			for (var k=0; k<8; k++) {
				if (c & 1)  c = 0xedb88320 ^ (c >>> 1);
				else        c = c >>> 1;
			}
			tab[n] = c;  }
		return tab;  })(),
	update : function(c, buf, off, len) {
		for (var i=0; i<len; i++)  c = UPNG.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);
		return c;
	},
	crc : function(b,o,l)  {  return UPNG.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }
}


UPNG.quantize = function(bufs, ps, roundAlpha)
{	
	var imgs = [], totl = 0;
	for(var i=0; i<bufs.length; i++) {  imgs.push(UPNG.encode.alphaMul(new Uint8Array(bufs[i]), roundAlpha));  totl+=bufs[i].byteLength;  }
	
	var nimg = new Uint8Array(totl), nimg32 = new Uint32Array(nimg.buffer), noff=0;
	for(var i=0; i<imgs.length; i++) {
		var img = imgs[i], il = img.length;
		for(var j=0; j<il; j++) nimg[noff+j] = img[j];
		noff += il;
	}
	
	var root = {i0:0, i1:nimg.length, bst:null, est:null, tdst:0, left:null, right:null };  // basic statistic, extra statistic
	root.bst = UPNG.quantize.stats(  nimg,root.i0, root.i1  );  root.est = UPNG.quantize.estats( root.bst );
	var leafs = [root];
	
	while(leafs.length<ps)
	{
		var maxL = 0, mi=0;
		for(var i=0; i<leafs.length; i++) if(leafs[i].est.L > maxL) {  maxL=leafs[i].est.L;  mi=i;  }
		if(maxL<1e-3) break;
		var node = leafs[mi];
		
		var s0 = UPNG.quantize.splitPixels(nimg,nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);
		
		var ln = {i0:node.i0, i1:s0, bst:null, est:null, tdst:0, left:null, right:null };  ln.bst = UPNG.quantize.stats( nimg, ln.i0, ln.i1 );  
		ln.est = UPNG.quantize.estats( ln.bst );
		var rn = {i0:s0, i1:node.i1, bst:null, est:null, tdst:0, left:null, right:null };  rn.bst = {R:[], m:[], N:node.bst.N-ln.bst.N};
		for(var i=0; i<16; i++) rn.bst.R[i] = node.bst.R[i]-ln.bst.R[i];
		for(var i=0; i< 4; i++) rn.bst.m[i] = node.bst.m[i]-ln.bst.m[i];
		rn.est = UPNG.quantize.estats( rn.bst );
		
		node.left = ln;  node.right = rn;
		leafs[mi]=ln;  leafs.push(rn);
	}
	leafs.sort(function(a,b) {  return b.bst.N-a.bst.N;  });
	
	for(var ii=0; ii<imgs.length; ii++) {
		var planeDst = UPNG.quantize.planeDst;
		var sb = new Uint8Array(imgs[ii].buffer), tb = new Uint32Array(imgs[ii].buffer), len = sb.length;
		
		var stack = [], si=0;
		for(var i=0; i<len; i+=4) {
			var r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);
			
			//  exact, but too slow :(
			//var nd = UPNG.quantize.getNearest(root, r, g, b, a);
			var nd = root;
			while(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;
			
			tb[i>>2] = nd.est.rgba;
		}
		imgs[ii]=tb.buffer;
	}
	return {  bufs:imgs, plte:leafs  };
}
UPNG.quantize.getNearest = function(nd, r,g,b,a)
{
	if(nd.left==null) {  nd.tdst = UPNG.quantize.dist(nd.est.q,r,g,b,a);  return nd;  }
	var planeDst = UPNG.quantize.planeDst(nd.est,r,g,b,a);
	
	var node0 = nd.left, node1 = nd.right;
	if(planeDst>0) {  node0=nd.right;  node1=nd.left;  }
	
	var ln = UPNG.quantize.getNearest(node0, r,g,b,a);
	if(ln.tdst<=planeDst*planeDst) return ln;
	var rn = UPNG.quantize.getNearest(node1, r,g,b,a);
	return rn.tdst<ln.tdst ? rn : ln;
}
UPNG.quantize.planeDst = function(est, r,g,b,a) {  var e = est.e;  return e[0]*r + e[1]*g + e[2]*b + e[3]*a - est.eMq;  }
UPNG.quantize.dist     = function(q,   r,g,b,a) {  var d0=r-q[0], d1=g-q[1], d2=b-q[2], d3=a-q[3];  return d0*d0+d1*d1+d2*d2+d3*d3;  }

UPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq)
{
	var vecDot = UPNG.quantize.vecDot;
	i1-=4;
	var shfs = 0;
	while(i0<i1)
	{
		while(vecDot(nimg, i0, e)<=eMq) i0+=4;
		while(vecDot(nimg, i1, e)> eMq) i1-=4;
		if(i0>=i1) break;
		
		var t = nimg32[i0>>2];  nimg32[i0>>2] = nimg32[i1>>2];  nimg32[i1>>2]=t;
		
		i0+=4;  i1-=4;
	}
	while(vecDot(nimg, i0, e)>eMq) i0-=4;
	return i0+4;
}
UPNG.quantize.vecDot = function(nimg, i, e)
{
	return nimg[i]*e[0] + nimg[i+1]*e[1] + nimg[i+2]*e[2] + nimg[i+3]*e[3];
}
UPNG.quantize.stats = function(nimg, i0, i1){
	var R = [0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0];
	var m = [0,0,0,0];
	var N = (i1-i0)>>2;
	for(var i=i0; i<i1; i+=4)
	{
		var r = nimg[i]*(1/255), g = nimg[i+1]*(1/255), b = nimg[i+2]*(1/255), a = nimg[i+3]*(1/255);
		//var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];
		m[0]+=r;  m[1]+=g;  m[2]+=b;  m[3]+=a;
		
		R[ 0] += r*r;  R[ 1] += r*g;  R[ 2] += r*b;  R[ 3] += r*a;  
		               R[ 5] += g*g;  R[ 6] += g*b;  R[ 7] += g*a; 
		                              R[10] += b*b;  R[11] += b*a;  
		                                             R[15] += a*a;  
	}
	R[4]=R[1];  R[8]=R[2];  R[12]=R[3];  R[9]=R[6];  R[13]=R[7];  R[14]=R[11];
	
	return {R:R, m:m, N:N};
}
UPNG.quantize.estats = function(stats){
	var R = stats.R, m = stats.m, N = stats.N;
	
	var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = (N==0 ? 0 : 1/N);
	var Rj = [
		R[ 0] - m0*m0*iN,  R[ 1] - m0*m1*iN,  R[ 2] - m0*m2*iN,  R[ 3] - m0*m3*iN,  
		R[ 4] - m1*m0*iN,  R[ 5] - m1*m1*iN,  R[ 6] - m1*m2*iN,  R[ 7] - m1*m3*iN,
		R[ 8] - m2*m0*iN,  R[ 9] - m2*m1*iN,  R[10] - m2*m2*iN,  R[11] - m2*m3*iN,  
		R[12] - m3*m0*iN,  R[13] - m3*m1*iN,  R[14] - m3*m2*iN,  R[15] - m3*m3*iN 
	];
	
	var A = Rj, M = UPNG.M4;
	var b = [0.5,0.5,0.5,0.5], mi = 0, tmi = 0;
	
	if(N!=0)
	for(var i=0; i<10; i++) {
		b = M.multVec(A, b);  tmi = Math.sqrt(M.dot(b,b));  b = M.sml(1/tmi,  b);
		if(Math.abs(tmi-mi)<1e-9) break;  mi = tmi;
	}	
	//b = [0,0,1,0];  mi=N;
	var q = [m0*iN, m1*iN, m2*iN, m3*iN];
	var eMq255 = M.dot(M.sml(255,q),b);
	
	var ia = (q[3]<0.001) ? 0 : 1/q[3];
	
	return {  Cov:Rj, q:q, e:b, L:mi,  eMq255:eMq255, eMq : M.dot(b,q),
				rgba: (((Math.round(255*q[3])<<24) | (Math.round(255*q[2]*ia)<<16) |  (Math.round(255*q[1]*ia)<<8) | (Math.round(255*q[0]*ia)<<0))>>>0)  };
}
UPNG.M4 = {
	multVec : function(m,v) {
			return [
				m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2] + m[ 3]*v[3],
				m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2] + m[ 7]*v[3],
				m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2] + m[11]*v[3],
				m[12]*v[0] + m[13]*v[1] + m[14]*v[2] + m[15]*v[3]
			];
	},
	dot : function(x,y) {  return  x[0]*y[0]+x[1]*y[1]+x[2]*y[2]+x[3]*y[3];  },
	sml : function(a,y) {  return [a*y[0],a*y[1],a*y[2],a*y[3]];  }
}

UPNG.encode.alphaMul = function(img, roundA) {
	var nimg = new Uint8Array(img.length), area = img.length>>2; 
	for(var i=0; i<area; i++) {
		var qi=i<<2, ia=img[qi+3];   
		if(roundA) ia = ((ia<128))?0:255;
		var a = ia*(1/255);
		nimg[qi+0] = img[qi+0]*a;  nimg[qi+1] = img[qi+1]*a;  nimg[qi+2] = img[qi+2]*a;  nimg[qi+3] = ia;
	}
	return nimg;
}

	
	
	
	
	


})(UPNG, pako);
})();


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(82)))

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Top level file is just a mixin of submodules & constants


var assign    = __webpack_require__(27).assign;

var deflate   = __webpack_require__(649);
var inflate   = __webpack_require__(652);
var constants = __webpack_require__(242);

var pako = {};

assign(pako, deflate, inflate, constants);

module.exports = pako;


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var zlib_deflate = __webpack_require__(650);
var utils        = __webpack_require__(27);
var strings      = __webpack_require__(240);
var msg          = __webpack_require__(104);
var ZStream      = __webpack_require__(241);

var toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

var Z_NO_FLUSH      = 0;
var Z_FINISH        = 4;

var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_SYNC_FLUSH    = 2;

var Z_DEFAULT_COMPRESSION = -1;

var Z_DEFAULT_STRATEGY    = 0;

var Z_DEFLATED  = 8;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array|Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
 * push a chunk with explicit flush (call [[Deflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate(options) {
  if (!(this instanceof Deflate)) return new Deflate(options);

  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ''
  }, options || {});

  var opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new ZStream();
  this.strm.avail_out = 0;

  var status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    var dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = zlib_deflate.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the compression context.
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * array format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;

  if (this.ended) { return false; }

  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */

    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {
      if (this.options.to === 'string') {
        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(utils.shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);

  // Finalize on the last chunk.
  if (_mode === Z_FINISH) {
    status = zlib_deflate.deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  var deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


exports.Deflate = Deflate;
exports.deflate = deflate;
exports.deflateRaw = deflateRaw;
exports.gzip = gzip;


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = __webpack_require__(27);
var trees   = __webpack_require__(651);
var adler32 = __webpack_require__(238);
var crc32   = __webpack_require__(239);
var msg     = __webpack_require__(104);

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = __webpack_require__(27);

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var zlib_inflate = __webpack_require__(653);
var utils        = __webpack_require__(27);
var strings      = __webpack_require__(240);
var c            = __webpack_require__(242);
var msg          = __webpack_require__(104);
var ZStream      = __webpack_require__(241);
var GZheader     = __webpack_require__(656);

var toString = Object.prototype.toString;

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
 * push a chunk with explicit flush (call [[Inflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate(options) {
  if (!(this instanceof Inflate)) return new Inflate(options);

  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ''
  }, options || {});

  var opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new ZStream();
  this.strm.avail_out = 0;

  var status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== c.Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new GZheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== c.Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the decompression context.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var dictionary = this.options.dictionary;
  var status, _mode;
  var next_out_utf8, tail, utf8str;

  // Flag to properly process Z_BUF_ERROR on testing inflate call
  // when we check that all output data was flushed.
  var allowBufError = false;

  if (this.ended) { return false; }
  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // Only binary strings can be decompressed on practice
    strm.input = strings.binstring2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */

    if (status === c.Z_NEED_DICT && dictionary) {
      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);
    }

    if (status === c.Z_BUF_ERROR && allowBufError === true) {
      status = c.Z_OK;
      allowBufError = false;
    }

    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {

        if (this.options.to === 'string') {

          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          tail = strm.next_out - next_out_utf8;
          utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }

          this.onData(utf8str);

        } else {
          this.onData(utils.shrinkBuf(strm.output, strm.next_out));
        }
      }
    }

    // When no more input data, we should check that internal inflate buffers
    // are flushed. The only way to do it when avail_out = 0 - run one more
    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.
    // Here we set flag to process this error properly.
    //
    // NOTE. Deflate does not return error in this case and does not needs such
    // logic.
    if (strm.avail_in === 0 && strm.avail_out === 0) {
      allowBufError = true;
    }

  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);

  if (status === c.Z_STREAM_END) {
    _mode = c.Z_FINISH;
  }

  // Finalize on the last chunk.
  if (_mode === c.Z_FINISH) {
    status = zlib_inflate.inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === c.Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === c.Z_SYNC_FLUSH) {
    this.onEnd(c.Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === c.Z_OK) {
    if (this.options.to === 'string') {
      // Glue & convert here, until we teach pako to send
      // utf8 aligned strings to onData
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
 *   , output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  var inflator = new Inflate(options);

  inflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


exports.Inflate = Inflate;
exports.inflate = inflate;
exports.inflateRaw = inflateRaw;
exports.ungzip  = inflate;


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = __webpack_require__(27);
var adler32       = __webpack_require__(238);
var crc32         = __webpack_require__(239);
var inflate_fast  = __webpack_require__(654);
var inflate_table = __webpack_require__(655);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(27);

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;


/***/ }),
/* 657 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "drop" } }, [
    _vm.visible
      ? _c(
          "div",
          { attrs: { id: "skin-editor-app" } },
          [
            _c("SkinSaveDialog", {
              attrs: {
                onConfirm: _vm.onSaveConfirm,
                onCancel: _vm.onSaveCancel,
                bus: _vm.bus
              }
            }),
            _vm._v(" "),
            _c(
              "div",
              {
                attrs: { id: "skin-editor-blocker" },
                on: { click: _vm.openLeaveConfirmation }
              },
              [_c("div", { staticClass: "disabler" })]
            ),
            _vm._v(" "),
            _c(
              "div",
              {
                attrs: { id: "skin-editor-dialog" },
                on: { click: _vm.changeTutorialPage }
              },
              [
                _c("span", {
                  staticClass: "inner-close sprite-main Close",
                  on: { click: _vm.openLeaveConfirmation }
                }),
                _vm._v(" "),
                _c("span", {
                  staticClass: "sprite-main hint-button",
                  on: { click: _vm.restartTutorial }
                }),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "skin-editor-container" },
                  [
                    _c("aside", { staticClass: "left-tools" }, [
                      _c(
                        "ol",
                        { staticClass: "colors" },
                        _vm._l(_vm.colors, function(color) {
                          return _c(
                            "li",
                            {
                              key: color.id,
                              staticClass: "color-option",
                              class: {
                                selected: color.selected && !_vm.showTutorial,
                                highlighted: _vm.currentTutorialPage === 1
                              }
                            },
                            [
                              _c("button", {
                                key: color.id,
                                style: {
                                  backgroundColor: color.regular,
                                  borderStyle:
                                    color.id == _vm.Colors.WHITE
                                      ? "solid"
                                      : "none",
                                  borderColor: "rgb(195,195,195)",
                                  borderWidth: 5
                                },
                                attrs: { type: "button" },
                                on: {
                                  mousedown: function($event) {
                                    return _vm.selectColor(color)
                                  }
                                }
                              })
                            ]
                          )
                        }),
                        0
                      ),
                      _vm._v(" "),
                      _c("div", { staticClass: "history" }, [
                        _c(
                          "div",
                          {
                            staticClass: "undo",
                            class: { disabled: !_vm.canUndo }
                          },
                          [
                            _c(
                              "button",
                              {
                                staticClass: "btn",
                                attrs: { type: "button" },
                                on: { click: _vm.undo }
                              },
                              [
                                _c("img", {
                                  attrs: { src: "/img/button_arrow.png" }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c("div", { staticClass: "label" }, [
                              _vm._v("Undo")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "redo",
                            class: { disabled: !_vm.canRedo }
                          },
                          [
                            _c(
                              "button",
                              {
                                staticClass: "btn",
                                attrs: {
                                  type: "button",
                                  src: "/img/button_arrow.png"
                                },
                                on: { click: _vm.redo }
                              },
                              [
                                _c("img", {
                                  attrs: { src: "/img/button_arrow.png" }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c("div", { staticClass: "label" }, [
                              _vm._v("Redo")
                            ])
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "clear",
                          class: { disabled: !_vm.canClear }
                        },
                        [
                          _c(
                            "button",
                            {
                              staticClass: "btn",
                              attrs: { type: "button" },
                              on: { click: _vm.openClearConfirm }
                            },
                            [_vm._v("Clear")]
                          )
                        ]
                      )
                    ]),
                    _vm._v(" "),
                    _c("div", { attrs: { id: "skin-editor-border" } }, [
                      _c("canvas", {
                        attrs: {
                          id: "skin-editor-canvas",
                          width: "512",
                          height: "512"
                        },
                        on: {
                          mouseleave: _vm.mouseLeave,
                          mouseenter: _vm.mouseEnter
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "transition",
                      { attrs: { name: "fade" } },
                      [
                        _vm.isHandVisible
                          ? _c("animation", {
                              class: "hand",
                              attrs: {
                                assetName: "SkinEditor_Tutorial_Hand",
                                animName: "animation",
                                texturesCount: 9,
                                width: 360,
                                height: 350,
                                offsetX: 400,
                                offsetY: 400,
                                scaleX: 0.35,
                                scaleY: 0.35
                              }
                            })
                          : _vm._e()
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("aside", { staticClass: "right-tools" }, [
                      _c(
                        "ol",
                        {
                          staticClass: "brushes",
                          class: { highlighted: _vm.currentTutorialPage === 2 }
                        },
                        _vm._l(_vm.brushSizes, function(brush, index) {
                          return _c(
                            "li",
                            {
                              key: index + "_" + brush.size,
                              staticClass: "brush-option",
                              class: {
                                selected:
                                  _vm.currentSize === brush.size &&
                                  !_vm.showTutorial
                              }
                            },
                            [
                              _c("button", {
                                staticClass: "btn",
                                style: {
                                  width: brush.uiTipSize + "px",
                                  height: brush.uiTipSize + "px",
                                  margin: brush.uiTipMargin + "px"
                                },
                                attrs: { type: "button" },
                                on: {
                                  click: function($event) {
                                    return _vm.changeSize(brush.size)
                                  }
                                }
                              })
                            ]
                          )
                        }),
                        0
                      ),
                      _vm._v(" "),
                      _c("div", { staticClass: "tools" }, [
                        _c(
                          "div",
                          {
                            staticClass: "brush",
                            class: {
                              highlighted: _vm.currentTutorialPage === 3
                            }
                          },
                          [
                            _c(
                              "button",
                              {
                                staticClass: "btn",
                                class: {
                                  selected:
                                    _vm.currentTool.id == "brush" &&
                                    !_vm.showTutorial
                                },
                                attrs: { type: "button" },
                                on: {
                                  click: function($event) {
                                    return _vm.selectTool("brush")
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  staticClass: "brush-handle",
                                  attrs: { src: "/img/tool_brush.png" }
                                }),
                                _vm._v(" "),
                                _vm.getToolColorById("brush").id ===
                                _vm.Colors.WHITE
                                  ? _c("img", {
                                      staticClass: "brush-tip white",
                                      attrs: {
                                        src: "/img/tool_brush_white.png"
                                      }
                                    })
                                  : _c(
                                      "svg",
                                      {
                                        staticClass: "brush-tip",
                                        attrs: {
                                          width: "60px",
                                          height: "50px",
                                          viewBox: "0 0 70 60",
                                          "xml:space": "preserve"
                                        }
                                      },
                                      [
                                        _c("path", {
                                          staticClass: "cls-1",
                                          attrs: {
                                            id: "tool_brush",
                                            d:
                                              "M1298.75,593.166a56.784,56.784,0,0,1-18.91-12.146,13.635,13.635,0,0,1-1.35-1.68,2.653,2.653,0,0,1,1.96-4.191,24.011,24.011,0,0,0,6.25-1.5,9.887,9.887,0,0,0,6.18-6.39c1.03-2.8,1.88-5.659,2.79-8.5,1.81-5.663,5.22-9.944,10.73-12.341a19.049,19.049,0,0,1,15.27.407c4.75,2.122,8.13,5.873,11.4,9.835,8.05,10.67,5.98,24.372-4.67,32.561-6.89,5.292-14.89,6.5-23.29,5.382A57.576,57.576,0,0,1,1298.75,593.166Z",
                                            transform:
                                              "translate(-1275.5 -542.5)",
                                            fill: _vm.getToolColorById("brush")
                                              .regular
                                          }
                                        })
                                      ]
                                    )
                              ]
                            ),
                            _vm._v(" "),
                            _c("div", { staticClass: "label" }, [
                              _vm._v("Brush")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "eraser",
                            class: {
                              highlighted: _vm.currentTutorialPage === 4
                            }
                          },
                          [
                            _c(
                              "button",
                              {
                                staticClass: "btn",
                                class: {
                                  selected:
                                    _vm.currentTool.id == "eraser" &&
                                    !_vm.showTutorial
                                },
                                attrs: { type: "button" },
                                on: {
                                  click: function($event) {
                                    return _vm.selectTool("eraser")
                                  }
                                }
                              },
                              [
                                _c("img", {
                                  attrs: { src: "/img/tool_eraser.png" }
                                })
                              ]
                            ),
                            _vm._v(" "),
                            _c("div", { staticClass: "label" }, [
                              _vm._v("Eraser")
                            ])
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("ol", { staticClass: "cell-colors" }, [
                        _c(
                          "li",
                          {
                            staticClass: "color-option",
                            class: {
                              selected:
                                _vm.currentTool.id == "background" &&
                                !_vm.showTutorial,
                              highlighted: _vm.currentTutorialPage === 5
                            }
                          },
                          [
                            _c("button", {
                              style: {
                                backgroundColor: _vm.getToolColorById(
                                  "background"
                                ).regular,
                                borderColor: _vm.getToolColorById("background")
                                  .border,
                                borderStyle:
                                  _vm.getToolColorById("background").id ===
                                  _vm.Colors.WHITE
                                    ? "solid"
                                    : "",
                                borderWidth: 5
                              },
                              attrs: { type: "button" },
                              on: {
                                mousedown: function($event) {
                                  return _vm.selectTool("background")
                                }
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "label",
                                staticStyle: { "margin-left": "-10px" }
                              },
                              [_vm._v("Background")]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "color-option",
                            class: {
                              selected:
                                _vm.currentTool.id == "border" &&
                                !_vm.showTutorial,
                              highlighted: _vm.currentTutorialPage === 6
                            }
                          },
                          [
                            _c("button", {
                              style: {
                                backgroundColor: "#FFF0",
                                borderColor: _vm.getToolColorById("border")
                                  .border,
                                borderStyle: "solid",
                                borderWidth: 5
                              },
                              attrs: { type: "button" },
                              on: {
                                mousedown: function($event) {
                                  return _vm.selectTool("border")
                                }
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "label",
                                staticStyle: { "margin-left": "-5px" }
                              },
                              [_vm._v("Border")]
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _vm.customSkinTokensTotalCount > 0
                        ? _c("span", { staticClass: "free-skins-label" }, [
                            _vm._v(_vm._s(_vm.getFreeSkinsLabelText()))
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c(
                        "button",
                        {
                          staticClass: "save",
                          on: {
                            click: function($event) {
                              return _vm.showSaveDialog()
                            }
                          }
                        },
                        [
                          _c("span", [_vm._v("Save")]),
                          _vm._v(" "),
                          _vm.customSkinTokensTotalCount > 0
                            ? _c("counter", {
                                attrs: {
                                  amount: _vm.customSkinTokensTotalCount,
                                  time: 0
                                }
                              })
                            : _vm._e()
                        ],
                        1
                      )
                    ])
                  ],
                  1
                ),
                _vm._v(" "),
                _vm.showTutorial
                  ? _c("div", { attrs: { id: "skin-editor-tutorial" } }, [
                      _c(
                        "div",
                        { staticClass: "tutorial-bubble-container" },
                        [
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 1
                              ? _c(
                                  "div",
                                  { staticClass: "tutorial-bubble color left" },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n("skin_editor_tutorial_color")
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 2
                              ? _c(
                                  "div",
                                  { staticClass: "tutorial-bubble size right" },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n(
                                          "skin_editor_tutorial_brush_size"
                                        )
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 3
                              ? _c(
                                  "div",
                                  {
                                    staticClass: "tutorial-bubble brush right"
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n("skin_editor_tutorial_brush")
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 4
                              ? _c(
                                  "div",
                                  {
                                    staticClass: "tutorial-bubble eraser right"
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n("skin_editor_tutorial_eraser")
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 5
                              ? _c(
                                  "div",
                                  {
                                    staticClass:
                                      "tutorial-bubble background right"
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n(
                                          "skin_editor_tutorial_background"
                                        )
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ]),
                          _vm._v(" "),
                          _c("transition", { attrs: { name: "fade" } }, [
                            _vm.currentTutorialPage === 6
                              ? _c(
                                  "div",
                                  {
                                    staticClass: "tutorial-bubble border right"
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.i18n("skin_editor_tutorial_border")
                                      )
                                    )
                                  ]
                                )
                              : _vm._e()
                          ])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("span", [
                        _vm._v(
                          _vm._s(_vm.i18n("skin_editor_click_to_continue"))
                        )
                      ])
                    ])
                  : _vm._e()
              ]
            ),
            _vm._v(" "),
            _c(
              "transition",
              { attrs: { name: "drop" } },
              [
                _vm.clearConfirmationVisible
                  ? _c("confirmation", {
                      attrs: {
                        title: _vm.i18n("skin_editor_clear_confirmation_title"),
                        description:
                          _vm.i18n("skin_editor_clear_confirmation_subtitle1") +
                          "<br><br>" +
                          _vm.i18n("skin_editor_clear_confirmation_subtitle2"),
                        confirmLabel: _vm.i18n(
                          "skin_editor_clear_confirmation_button_confirm"
                        ),
                        cancelLabel: _vm.i18n(
                          "skin_editor_clear_confirmation_button_dismiss"
                        ),
                        confirmCallback: _vm.onClear,
                        cancelCallback: _vm.closeClearConfirmation
                      }
                    })
                  : _vm._e()
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "transition",
              { attrs: { name: "drop" } },
              [
                _vm.leaveConfirmationVisible
                  ? _c("confirmation", {
                      attrs: {
                        title: _vm.i18n("skin_editor_leave_confirmation_title"),
                        description:
                          _vm.i18n("skin_editor_leave_confirmation_subtitle1") +
                          "<br><br>" +
                          _vm.i18n("skin_editor_leave_confirmation_subtitle2"),
                        confirmLabel: _vm.i18n(
                          "skin_editor_leave_confirmation_button_confirm"
                        ),
                        cancelLabel: _vm.i18n(
                          "skin_editor_leave_confirmation_button_dismiss"
                        ),
                        confirmCallback: _vm.onLeave,
                        cancelCallback: _vm.closeLeaveConfirmation
                      }
                    })
                  : _vm._e()
              ],
              1
            ),
            _vm._v(" "),
            _c("PurchaseCompleteDialog", {
              attrs: {
                onPlay: _vm.onPurchasePlay,
                onClose: _vm.onPurchaseClose,
                onShare: _vm.onPurchaseShare,
                bus: _vm.bus
              }
            })
          ],
          1
        )
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-662b4a84", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 658 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "home" } },
    [
      _vm.isHome
        ? _c("div", { attrs: { id: "overlays" } }, [
            _vm._m(0),
            _vm._v(" "),
            _vm._m(1),
            _vm._v(" "),
            _c("div", {
              attrs: {
                id: "helloContainer",
                "data-logged-in": "0",
                "data-has-account-data": "0",
                "data-party-state": "0",
                "data-results-state": "0",
                "data-gamemode": ""
              }
            })
          ])
        : _vm._e(),
      _vm._v(" "),
      _c("mainmenu", {
        attrs: { fastEntry: _vm.fastEntry },
        on: {
          "update:token": function($event) {
            _vm.partyToken = $event
          },
          "copy:token": _vm.copyToken
        }
      }),
      _vm._v(" "),
      _c("leaderboards"),
      _vm._v(" "),
      _c("battleroyale"),
      _vm._v(" "),
      _c("teamrush"),
      _vm._v(" "),
      _c("rewardlinks"),
      _vm._v(" "),
      _c("skineditor"),
      _vm._v(" "),
      _vm.partyState == _vm.PartyState.JOINED
        ? _c("div", { staticClass: "partymode-info" }, [
            _vm._m(2),
            _vm._v(" "),
            _c("div", { attrs: { id: "code" } }, [
              _vm._v(_vm._s(_vm.partyToken))
            ]),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "btn btn-primary copy-party-token",
                attrs: { title: "" },
                on: {
                  click: function($event) {
                    return _vm.copyToken(".party-token")
                  }
                }
              },
              [_vm._v("Copy")]
            )
          ])
        : _vm._e(),
      _vm._v(" "),
      _c("button", {
        staticClass: "g-interactivepost",
        staticStyle: { display: "none" },
        attrs: {
          id: "externalGShare",
          "data-contenturl": "http://agar.io",
          "data-clientid": "",
          "data-cookiepolicy": "single_host_origin",
          "data-prefilltext": "",
          "data-calltoactionlabel": "BEAT",
          "data-calltoactionurl": "http://agar.io"
        }
      }),
      _vm._v(" "),
      !_vm.inGame
        ? _c("header", [
            _c("div", { staticClass: "tosBox right" }, [
              _c(
                "div",
                {
                  on: {
                    mouseleave: function($event) {
                      _vm.showChangeLog = false
                    }
                  }
                },
                [
                  _c("changelog", {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.showChangeLog,
                        expression: "showChangeLog"
                      }
                    ]
                  })
                ],
                1
              ),
              _vm._v(" "),
              _c("a", {
                staticClass: "text-muted footer-gamemode",
                attrs: { id: "btn-privacy-settings", target: "_blank" },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_privacy_settings) },
                on: {
                  click: function($event) {
                    return _vm.showPrivacySettings()
                  }
                }
              }),
              _vm._v(" |\n            "),
              _c("a", {
                staticClass: "text-muted",
                attrs: {
                  href: "https://www.miniclip.com/cookie-policy/",
                  target: "_blank"
                },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_cookie_policy) }
              }),
              _vm._v(" |\n            "),
              _c("a", {
                staticClass: "text-muted",
                attrs: {
                  href: "https://www.miniclip.com/privacy/",
                  target: "_blank"
                },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_privacy_policy) }
              }),
              _vm._v(" |\n            "),
              _c("a", {
                staticClass: "text-muted",
                attrs: {
                  href: "https://www.miniclip.com/terms/",
                  target: "_blank"
                },
                domProps: { innerHTML: _vm._s(_vm.i18n.page_terms_of_service) }
              }),
              _vm._v(" |\n            "),
              _c("a", {
                staticClass: "text-muted",
                attrs: { href: "#" },
                domProps: {
                  innerHTML: _vm._s(_vm.i18n.contact_support_description)
                },
                on: { click: _vm.openCustomerSupport }
              })
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _c("div", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.shop,
            expression: "shop"
          }
        ],
        staticClass: "disabler",
        attrs: { id: "openfl-overlay" }
      }),
      _vm._v(" "),
      _c("div", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.shop,
            expression: "shop"
          }
        ],
        attrs: { id: "openfl-content" }
      }),
      _vm._v(" "),
      _c("div", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.shop,
            expression: "shop"
          }
        ],
        staticClass: "disabler top",
        attrs: { id: "openfl-overlay-top" }
      }),
      _vm._v(" "),
      _c("div", { attrs: { id: "debug-overlay" } }),
      _vm._v(" "),
      _c("a", {
        staticClass: "xsolla_container",
        attrs: { id: "modal-payment-link", href: "/pay/" }
      }),
      _vm._v(" "),
      _vm._m(3),
      _vm._v(" "),
      _vm._m(4),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showSideBanners && _vm.hasSideAds,
              expression: "showSideBanners && hasSideAds"
            }
          ],
          attrs: { id: "agar-io_160x600" }
        },
        [
          _c("script", { attrs: { type: "application/javascript" } }, [
            _vm._v(
              "\n            aiptag.cmd.display.push(function() { aipDisplayTag.display('agar-io_160x600'); });\n        "
            )
          ])
        ]
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showSideBanners && _vm.hasSideAds,
              expression: "showSideBanners && hasSideAds"
            }
          ],
          attrs: { id: "agar-io_160x600_2" }
        },
        [
          _c("script", { attrs: { type: "application/javascript" } }, [
            _vm._v(
              "\n            aiptag.cmd.display.push(function() { aipDisplayTag.display('agar-io_160x600_2'); });\n        "
            )
          ])
        ]
      ),
      _vm._v(" "),
      _c("div", { attrs: { id: "preroll" } }),
      _vm._v(" "),
      _c("transition", { attrs: { name: "drop" } }, [
        _c(
          "div",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.showFullSpectate,
                expression: "showFullSpectate"
              }
            ],
            attrs: { id: "fullSpectate" }
          },
          [
            _c("span", {
              staticClass: "text",
              domProps: { innerHTML: _vm._s(_vm.i18n.spectate_full) }
            }),
            _vm._v(" "),
            _c("span", {
              staticClass: "sprite-main Close",
              on: { click: _vm.closeFullSpectate }
            })
          ]
        )
      ])
    ],
    1
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "gamepad_alert",
        staticStyle: { display: "none" },
        attrs: { id: "controller_alert_connected" }
      },
      [
        _c("div", { staticClass: "wrapper" }, [
          _c("span", { staticClass: "controller_icon" }, [_vm._v(" ")]),
          _vm._v(" "),
          _c("span", { staticClass: "alert_text" }, [
            _vm._v("Controller Connected")
          ])
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "gamepad_alert",
        staticStyle: { display: "none" },
        attrs: { id: "controller_alert_disconnected" }
      },
      [
        _c("div", { staticClass: "wrapper" }, [
          _c("span", { staticClass: "controller_icon" }, [_vm._v(" ")]),
          _vm._v(" "),
          _c("span", { staticClass: "alert_text" }, [
            _vm._v("Controller Disconnected")
          ])
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "label" } }, [
      _c("b", [_vm._v("Share with friends")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "fbBlocker" } }, [
      _c("div", { staticClass: "disabler" })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { attrs: { id: "agar-io_970x90" } }, [
      _c("script", { attrs: { type: "application/javascript" } }, [
        _vm._v(
          "\n            aiptag.cmd.display.push(function() { aipDisplayTag.display('agar-io_970x90'); });\n        "
        )
      ])
    ])
  }
]
render._withStripped = true

if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-9c4d2b0c", { render: render, staticRenderFns: staticRenderFns })
  }
}

/***/ }),
/* 659 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VClosePopover", function() { return VClosePopover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VPopover", function() { return VPopover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VTooltip", function() { return VTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTooltip", function() { return createTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroyTooltip", function() { return destroyTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "install", function() { return install; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_classCallCheck__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_createClass__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_popper_js__ = __webpack_require__(660);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_isEqual__ = __webpack_require__(661);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_isEqual___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_lodash_isEqual__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_resize__ = __webpack_require__(721);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_merge__ = __webpack_require__(722);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_lodash_merge__);









var SVGAnimatedString = function SVGAnimatedString() {};

if (typeof window !== 'undefined') {
  SVGAnimatedString = window.SVGAnimatedString;
}

function convertToArray(value) {
  if (typeof value === 'string') {
    value = value.split(' ');
  }

  return value;
}
/**
 * Add classes to an element.
 * This method checks to ensure that the classes don't already exist before adding them.
 * It uses el.className rather than classList in order to be IE friendly.
 * @param {object} el - The element to add the classes to.
 * @param {classes} string - List of space separated classes to be added to the element.
 */

function addClasses(el, classes) {
  var newClasses = convertToArray(classes);
  var classList;

  if (el.className instanceof SVGAnimatedString) {
    classList = convertToArray(el.className.baseVal);
  } else {
    classList = convertToArray(el.className);
  }

  newClasses.forEach(function (newClass) {
    if (classList.indexOf(newClass) === -1) {
      classList.push(newClass);
    }
  });

  if (el instanceof SVGElement) {
    el.setAttribute('class', classList.join(' '));
  } else {
    el.className = classList.join(' ');
  }
}
/**
 * Remove classes from an element.
 * It uses el.className rather than classList in order to be IE friendly.
 * @export
 * @param {any} el The element to remove the classes from.
 * @param {any} classes List of space separated classes to be removed from the element.
 */

function removeClasses(el, classes) {
  var newClasses = convertToArray(classes);
  var classList;

  if (el.className instanceof SVGAnimatedString) {
    classList = convertToArray(el.className.baseVal);
  } else {
    classList = convertToArray(el.className);
  }

  newClasses.forEach(function (newClass) {
    var index = classList.indexOf(newClass);

    if (index !== -1) {
      classList.splice(index, 1);
    }
  });

  if (el instanceof SVGElement) {
    el.setAttribute('class', classList.join(' '));
  } else {
    el.className = classList.join(' ');
  }
}
var supportsPassive = false;

if (typeof window !== 'undefined') {
  supportsPassive = false;

  try {
    var opts = Object.defineProperty({}, 'passive', {
      get: function get() {
        supportsPassive = true;
      }
    });
    window.addEventListener('test', null, opts);
  } catch (e) {}
}

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var DEFAULT_OPTIONS = {
  container: false,
  delay: 0,
  html: false,
  placement: 'top',
  title: '',
  template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
  trigger: 'hover focus',
  offset: 0
};
var openTooltips = [];

var Tooltip = /*#__PURE__*/function () {
  /**
   * Create a new Tooltip.js instance
   * @class Tooltip
   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).
   * @param {Object} options
   * @param {String} options.placement=bottom
   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),
   *      left(-start, -end)`
   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.
   * @param {Number|Object} options.delay=0
   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.
   *      If a number is supplied, delay is applied to both hide/show.
   *      Object structure is: `{ show: 500, hide: 100 }`
   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `innerText`.
   * @param {String|PlacementFunction} options.placement='top' - One of the allowed placements, or a function returning one of them.
   * @param {String} [options.template='<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>']
   *      Base HTML to used when creating the tooltip.
   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.
   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.
   *      The outermost wrapper element should have the `.tooltip` class.
   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.
   * @param {String} [options.trigger='hover focus']
   *      How tooltip is triggered - click, hover, focus, manual.
   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.
   * @param {HTMLElement} options.boundariesElement
   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'
   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)
   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'
   *      [offset docs](https://popper.js.org/popper-documentation.html)
   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'
   *      [options docs](https://popper.js.org/popper-documentation.html)
   * @param {string} [options.ariaId] Id used for accessibility
   * @return {Object} instance - The generated tooltip instance
   */
  function Tooltip(_reference, _options) {
    var _this = this;

    __WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_classCallCheck___default()(this, Tooltip);

    __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()(this, "_events", []);

    __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()(this, "_setTooltipNodeEvent", function (evt, reference, delay, options) {
      var relatedreference = evt.relatedreference || evt.toElement || evt.relatedTarget;

      var callback = function callback(evt2) {
        var relatedreference2 = evt2.relatedreference || evt2.toElement || evt2.relatedTarget; // Remove event listener after call

        _this._tooltipNode.removeEventListener(evt.type, callback); // If the new reference is not the reference element


        if (!reference.contains(relatedreference2)) {
          // Schedule to hide tooltip
          _this._scheduleHide(reference, options.delay, options, evt2);
        }
      };

      if (_this._tooltipNode.contains(relatedreference)) {
        // listen to mouseleave on the tooltip element to be able to hide the tooltip
        _this._tooltipNode.addEventListener(evt.type, callback);

        return true;
      }

      return false;
    });

    // apply user options over default ones
    _options = _objectSpread$2(_objectSpread$2({}, DEFAULT_OPTIONS), _options);
    _reference.jquery && (_reference = _reference[0]);
    this.show = this.show.bind(this);
    this.hide = this.hide.bind(this); // cache reference and options

    this.reference = _reference;
    this.options = _options; // set initial state

    this._isOpen = false;

    this._init();
  } //
  // Public methods
  //

  /**
   * Reveals an element's tooltip. This is considered a "manual" triggering of the tooltip.
   * Tooltips with zero-length titles are never displayed.
   * @method Tooltip#show
   * @memberof Tooltip
   */


  __WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_createClass___default()(Tooltip, [{
    key: "show",
    value: function show() {
      this._show(this.reference, this.options);
    }
    /**
     * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.
     * @method Tooltip#hide
     * @memberof Tooltip
     */

  }, {
    key: "hide",
    value: function hide() {
      this._hide();
    }
    /**
     * Hides and destroys an element’s tooltip.
     * @method Tooltip#dispose
     * @memberof Tooltip
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this._dispose();
    }
    /**
     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.
     * @method Tooltip#toggle
     * @memberof Tooltip
     */

  }, {
    key: "toggle",
    value: function toggle() {
      if (this._isOpen) {
        return this.hide();
      } else {
        return this.show();
      }
    }
  }, {
    key: "setClasses",
    value: function setClasses(classes) {
      this._classes = classes;
    }
  }, {
    key: "setContent",
    value: function setContent(content) {
      this.options.title = content;

      if (this._tooltipNode) {
        this._setContent(content, this.options);
      }
    }
  }, {
    key: "setOptions",
    value: function setOptions(options) {
      var classesUpdated = false;
      var classes = options && options.classes || directive.options.defaultClass;

      if (!__WEBPACK_IMPORTED_MODULE_5_lodash_isEqual___default()(this._classes, classes)) {
        this.setClasses(classes);
        classesUpdated = true;
      }

      options = getOptions(options);
      var needPopperUpdate = false;
      var needRestart = false;

      if (this.options.offset !== options.offset || this.options.placement !== options.placement) {
        needPopperUpdate = true;
      }

      if (this.options.template !== options.template || this.options.trigger !== options.trigger || this.options.container !== options.container || classesUpdated) {
        needRestart = true;
      }

      for (var key in options) {
        this.options[key] = options[key];
      }

      if (this._tooltipNode) {
        if (needRestart) {
          var isOpen = this._isOpen;
          this.dispose();

          this._init();

          if (isOpen) {
            this.show();
          }
        } else if (needPopperUpdate) {
          this.popperInstance.update();
        }
      }
    } //
    // Private methods
    //

  }, {
    key: "_init",
    value: function _init() {
      // get events list
      var events = typeof this.options.trigger === 'string' ? this.options.trigger.split(' ') : [];
      this._isDisposed = false;
      this._enableDocumentTouch = events.indexOf('manual') === -1;
      events = events.filter(function (trigger) {
        return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;
      }); // set event listeners

      this._setEventListeners(this.reference, events, this.options); // title attribute


      this.$_originalTitle = this.reference.getAttribute('title');
      this.reference.removeAttribute('title');
      this.reference.setAttribute('data-original-title', this.$_originalTitle);
    }
    /**
     * Creates a new tooltip node
     * @memberof Tooltip
     * @private
     * @param {HTMLElement} reference
     * @param {String} template
     * @param {String|HTMLElement|TitleFunction} title
     * @param {Boolean} allowHtml
     * @return {HTMLelement} tooltipNode
     */

  }, {
    key: "_create",
    value: function _create(reference, template) {
      var _this2 = this;

      // create tooltip element
      var tooltipGenerator = window.document.createElement('div');
      tooltipGenerator.innerHTML = template.trim();
      var tooltipNode = tooltipGenerator.childNodes[0]; // add unique ID to our tooltip (needed for accessibility reasons)

      tooltipNode.id = this.options.ariaId || "tooltip_".concat(Math.random().toString(36).substr(2, 10)); // Initially hide the tooltip
      // The attribute will be switched in a next frame so
      // CSS transitions can play

      tooltipNode.setAttribute('aria-hidden', 'true');

      if (this.options.autoHide && this.options.trigger.indexOf('hover') !== -1) {
        tooltipNode.addEventListener('mouseenter', function (evt) {
          return _this2._scheduleHide(reference, _this2.options.delay, _this2.options, evt);
        });
        tooltipNode.addEventListener('click', function (evt) {
          return _this2._scheduleHide(reference, _this2.options.delay, _this2.options, evt);
        });
      } // return the generated tooltip node


      return tooltipNode;
    }
  }, {
    key: "_setContent",
    value: function _setContent(content, options) {
      var _this3 = this;

      this.asyncContent = false;

      this._applyContent(content, options).then(function () {
        if (!_this3.popperInstance) return;

        _this3.popperInstance.update();
      });
    }
  }, {
    key: "_applyContent",
    value: function _applyContent(title, options) {
      var _this4 = this;

      return new Promise(function (resolve, reject) {
        var allowHtml = options.html;
        var rootNode = _this4._tooltipNode;
        if (!rootNode) return;
        var titleNode = rootNode.querySelector(_this4.options.innerSelector);

        if (title.nodeType === 1) {
          // if title is a node, append it only if allowHtml is true
          if (allowHtml) {
            while (titleNode.firstChild) {
              titleNode.removeChild(titleNode.firstChild);
            }

            titleNode.appendChild(title);
          }
        } else if (typeof title === 'function') {
          // if title is a function, call it and set innerText or innerHtml depending by `allowHtml` value
          var result = title();

          if (result && typeof result.then === 'function') {
            _this4.asyncContent = true;
            options.loadingClass && addClasses(rootNode, options.loadingClass);

            if (options.loadingContent) {
              _this4._applyContent(options.loadingContent, options);
            }

            result.then(function (asyncResult) {
              options.loadingClass && removeClasses(rootNode, options.loadingClass);
              return _this4._applyContent(asyncResult, options);
            }).then(resolve).catch(reject);
          } else {
            _this4._applyContent(result, options).then(resolve).catch(reject);
          }

          return;
        } else {
          // if it's just a simple text, set innerText or innerHtml depending by `allowHtml` value
          allowHtml ? titleNode.innerHTML = title : titleNode.innerText = title;
        }

        resolve();
      });
    }
  }, {
    key: "_show",
    value: function _show(reference, options) {
      if (options && typeof options.container === 'string') {
        var container = document.querySelector(options.container);
        if (!container) return;
      }

      clearTimeout(this._disposeTimer);
      options = Object.assign({}, options);
      delete options.offset;
      var updateClasses = true;

      if (this._tooltipNode) {
        addClasses(this._tooltipNode, this._classes);
        updateClasses = false;
      }

      var result = this._ensureShown(reference, options);

      if (updateClasses && this._tooltipNode) {
        addClasses(this._tooltipNode, this._classes);
      }

      addClasses(reference, ['v-tooltip-open']);
      return result;
    }
  }, {
    key: "_ensureShown",
    value: function _ensureShown(reference, options) {
      var _this5 = this;

      // don't show if it's already visible
      if (this._isOpen) {
        return this;
      }

      this._isOpen = true;
      openTooltips.push(this); // if the tooltipNode already exists, just show it

      if (this._tooltipNode) {
        this._tooltipNode.style.display = '';

        this._tooltipNode.setAttribute('aria-hidden', 'false');

        this.popperInstance.enableEventListeners();
        this.popperInstance.update();

        if (this.asyncContent) {
          this._setContent(options.title, options);
        }

        return this;
      } // get title


      var title = reference.getAttribute('title') || options.title; // don't show tooltip if no title is defined

      if (!title) {
        return this;
      } // create tooltip node


      var tooltipNode = this._create(reference, options.template);

      this._tooltipNode = tooltipNode; // Add `aria-describedby` to our reference element for accessibility reasons

      reference.setAttribute('aria-describedby', tooltipNode.id); // append tooltip to container

      var container = this._findContainer(options.container, reference);

      this._append(tooltipNode, container);

      var popperOptions = _objectSpread$2(_objectSpread$2({}, options.popperOptions), {}, {
        placement: options.placement
      });

      popperOptions.modifiers = _objectSpread$2(_objectSpread$2({}, popperOptions.modifiers), {}, {
        arrow: {
          element: this.options.arrowSelector
        }
      });

      if (options.boundariesElement) {
        popperOptions.modifiers.preventOverflow = {
          boundariesElement: options.boundariesElement
        };
      }

      this.popperInstance = new __WEBPACK_IMPORTED_MODULE_4_popper_js__["a" /* default */](reference, tooltipNode, popperOptions);

      this._setContent(title, options); // Fix position


      requestAnimationFrame(function () {
        if (!_this5._isDisposed && _this5.popperInstance) {
          _this5.popperInstance.update(); // Show the tooltip


          requestAnimationFrame(function () {
            if (!_this5._isDisposed) {
              _this5._isOpen && tooltipNode.setAttribute('aria-hidden', 'false');
            } else {
              _this5.dispose();
            }
          });
        } else {
          _this5.dispose();
        }
      });
      return this;
    }
  }, {
    key: "_noLongerOpen",
    value: function _noLongerOpen() {
      var index = openTooltips.indexOf(this);

      if (index !== -1) {
        openTooltips.splice(index, 1);
      }
    }
  }, {
    key: "_hide",
    value: function _hide()
    /* reference, options */
    {
      var _this6 = this;

      // don't hide if it's already hidden
      if (!this._isOpen) {
        return this;
      }

      this._isOpen = false;

      this._noLongerOpen(); // hide tooltipNode


      this._tooltipNode.style.display = 'none';

      this._tooltipNode.setAttribute('aria-hidden', 'true');

      if (this.popperInstance) {
        this.popperInstance.disableEventListeners();
      }

      clearTimeout(this._disposeTimer);
      var disposeTime = directive.options.disposeTimeout;

      if (disposeTime !== null) {
        this._disposeTimer = setTimeout(function () {
          if (_this6._tooltipNode) {
            _this6._tooltipNode.removeEventListener('mouseenter', _this6.hide);

            _this6._tooltipNode.removeEventListener('click', _this6.hide); // Don't remove popper instance, just the HTML element


            _this6._removeTooltipNode();
          }
        }, disposeTime);
      }

      removeClasses(this.reference, ['v-tooltip-open']);
      return this;
    }
  }, {
    key: "_removeTooltipNode",
    value: function _removeTooltipNode() {
      if (!this._tooltipNode) return;
      var parentNode = this._tooltipNode.parentNode;

      if (parentNode) {
        parentNode.removeChild(this._tooltipNode);
        this.reference.removeAttribute('aria-describedby');
      }

      this._tooltipNode = null;
    }
  }, {
    key: "_dispose",
    value: function _dispose() {
      var _this7 = this;

      this._isDisposed = true;
      this.reference.removeAttribute('data-original-title');

      if (this.$_originalTitle) {
        this.reference.setAttribute('title', this.$_originalTitle);
      } // remove event listeners first to prevent any unexpected behaviour


      this._events.forEach(function (_ref) {
        var func = _ref.func,
            event = _ref.event;

        _this7.reference.removeEventListener(event, func);
      });

      this._events = [];

      if (this._tooltipNode) {
        this._hide();

        this._tooltipNode.removeEventListener('mouseenter', this.hide);

        this._tooltipNode.removeEventListener('click', this.hide); // destroy instance


        this.popperInstance.destroy(); // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element

        if (!this.popperInstance.options.removeOnDestroy) {
          this._removeTooltipNode();
        }
      } else {
        this._noLongerOpen();
      }

      return this;
    }
  }, {
    key: "_findContainer",
    value: function _findContainer(container, reference) {
      // if container is a query, get the relative element
      if (typeof container === 'string') {
        container = window.document.querySelector(container);
      } else if (container === false) {
        // if container is `false`, set it to reference parent
        container = reference.parentNode;
      }

      return container;
    }
    /**
     * Append tooltip to container
     * @memberof Tooltip
     * @private
     * @param {HTMLElement} tooltip
     * @param {HTMLElement|String|false} container
     */

  }, {
    key: "_append",
    value: function _append(tooltipNode, container) {
      container.appendChild(tooltipNode);
    }
  }, {
    key: "_setEventListeners",
    value: function _setEventListeners(reference, events, options) {
      var _this8 = this;

      var directEvents = [];
      var oppositeEvents = [];
      events.forEach(function (event) {
        switch (event) {
          case 'hover':
            directEvents.push('mouseenter');
            oppositeEvents.push('mouseleave');
            if (_this8.options.hideOnTargetClick) oppositeEvents.push('click');
            break;

          case 'focus':
            directEvents.push('focus');
            oppositeEvents.push('blur');
            if (_this8.options.hideOnTargetClick) oppositeEvents.push('click');
            break;

          case 'click':
            directEvents.push('click');
            oppositeEvents.push('click');
            break;
        }
      }); // schedule show tooltip

      directEvents.forEach(function (event) {
        var func = function func(evt) {
          if (_this8._isOpen === true) {
            return;
          }

          evt.usedByTooltip = true;

          _this8._scheduleShow(reference, options.delay, options, evt);
        };

        _this8._events.push({
          event: event,
          func: func
        });

        reference.addEventListener(event, func);
      }); // schedule hide tooltip

      oppositeEvents.forEach(function (event) {
        var func = function func(evt) {
          if (evt.usedByTooltip === true) {
            return;
          }

          _this8._scheduleHide(reference, options.delay, options, evt);
        };

        _this8._events.push({
          event: event,
          func: func
        });

        reference.addEventListener(event, func);
      });
    }
  }, {
    key: "_onDocumentTouch",
    value: function _onDocumentTouch(event) {
      if (this._enableDocumentTouch) {
        this._scheduleHide(this.reference, this.options.delay, this.options, event);
      }
    }
  }, {
    key: "_scheduleShow",
    value: function _scheduleShow(reference, delay, options
    /*, evt */
    ) {
      var _this9 = this;

      // defaults to 0
      var computedDelay = delay && delay.show || delay || 0;
      clearTimeout(this._scheduleTimer);
      this._scheduleTimer = window.setTimeout(function () {
        return _this9._show(reference, options);
      }, computedDelay);
    }
  }, {
    key: "_scheduleHide",
    value: function _scheduleHide(reference, delay, options, evt) {
      var _this10 = this;

      // defaults to 0
      var computedDelay = delay && delay.hide || delay || 0;
      clearTimeout(this._scheduleTimer);
      this._scheduleTimer = window.setTimeout(function () {
        if (_this10._isOpen === false) {
          return;
        }

        if (!_this10._tooltipNode.ownerDocument.body.contains(_this10._tooltipNode)) {
          return;
        } // if we are hiding because of a mouseleave, we must check that the new
        // reference isn't the tooltip, because in this case we don't want to hide it


        if (evt.type === 'mouseleave') {
          var isSet = _this10._setTooltipNodeEvent(evt, reference, delay, options); // if we set the new event, don't hide the tooltip yet
          // the new event will take care to hide it if necessary


          if (isSet) {
            return;
          }
        }

        _this10._hide(reference, options);
      }, computedDelay);
    }
  }]);

  return Tooltip;
}(); // Hide tooltips on touch devices

if (typeof document !== 'undefined') {
  document.addEventListener('touchstart', function (event) {
    for (var i = 0; i < openTooltips.length; i++) {
      openTooltips[i]._onDocumentTouch(event);
    }
  }, supportsPassive ? {
    passive: true,
    capture: true
  } : true);
}
/**
 * Placement function, its context is the Tooltip instance.
 * @memberof Tooltip
 * @callback PlacementFunction
 * @param {HTMLElement} tooltip - tooltip DOM node.
 * @param {HTMLElement} reference - reference DOM node.
 * @return {String} placement - One of the allowed placement options.
 */

/**
 * Title function, its context is the Tooltip instance.
 * @memberof Tooltip
 * @callback TitleFunction
 * @return {String} placement - The desired title.
 */

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var state = {
  enabled: true
};
var positions = ['top', 'top-start', 'top-end', 'right', 'right-start', 'right-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end'];
var defaultOptions = {
  // Default tooltip placement relative to target element
  defaultPlacement: 'top',
  // Default CSS classes applied to the tooltip element
  defaultClass: 'vue-tooltip-theme',
  // Default CSS classes applied to the target element of the tooltip
  defaultTargetClass: 'has-tooltip',
  // Is the content HTML by default?
  defaultHtml: true,
  // Default HTML template of the tooltip element
  // It must include `tooltip-arrow` & `tooltip-inner` CSS classes (can be configured, see below)
  // Change if the classes conflict with other libraries (for example bootstrap)
  defaultTemplate: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
  // Selector used to get the arrow element in the tooltip template
  defaultArrowSelector: '.tooltip-arrow, .tooltip__arrow',
  // Selector used to get the inner content element in the tooltip template
  defaultInnerSelector: '.tooltip-inner, .tooltip__inner',
  // Delay (ms)
  defaultDelay: 0,
  // Default events that trigger the tooltip
  defaultTrigger: 'hover focus',
  // Default position offset (px)
  defaultOffset: 0,
  // Default container where the tooltip will be appended
  defaultContainer: 'body',
  defaultBoundariesElement: undefined,
  defaultPopperOptions: {},
  // Class added when content is loading
  defaultLoadingClass: 'tooltip-loading',
  // Displayed when tooltip content is loading
  defaultLoadingContent: '...',
  // Hide on mouseover tooltip
  autoHide: true,
  // Close tooltip on click on tooltip target?
  defaultHideOnTargetClick: true,
  // Auto destroy tooltip DOM nodes (ms)
  disposeTimeout: 5000,
  // Options for popover
  popover: {
    defaultPlacement: 'bottom',
    // Use the `popoverClass` prop for theming
    defaultClass: 'vue-popover-theme',
    // Base class (change if conflicts with other libraries)
    defaultBaseClass: 'tooltip popover',
    // Wrapper class (contains arrow and inner)
    defaultWrapperClass: 'wrapper',
    // Inner content class
    defaultInnerClass: 'tooltip-inner popover-inner',
    // Arrow class
    defaultArrowClass: 'tooltip-arrow popover-arrow',
    // Class added when popover is open
    defaultOpenClass: 'open',
    defaultDelay: 0,
    defaultTrigger: 'click',
    defaultOffset: 0,
    defaultContainer: 'body',
    defaultBoundariesElement: undefined,
    defaultPopperOptions: {},
    // Hides if clicked outside of popover
    defaultAutoHide: true,
    // Update popper on content resize
    defaultHandleResize: true
  }
};
function getOptions(options) {
  var result = {
    placement: typeof options.placement !== 'undefined' ? options.placement : directive.options.defaultPlacement,
    delay: typeof options.delay !== 'undefined' ? options.delay : directive.options.defaultDelay,
    html: typeof options.html !== 'undefined' ? options.html : directive.options.defaultHtml,
    template: typeof options.template !== 'undefined' ? options.template : directive.options.defaultTemplate,
    arrowSelector: typeof options.arrowSelector !== 'undefined' ? options.arrowSelector : directive.options.defaultArrowSelector,
    innerSelector: typeof options.innerSelector !== 'undefined' ? options.innerSelector : directive.options.defaultInnerSelector,
    trigger: typeof options.trigger !== 'undefined' ? options.trigger : directive.options.defaultTrigger,
    offset: typeof options.offset !== 'undefined' ? options.offset : directive.options.defaultOffset,
    container: typeof options.container !== 'undefined' ? options.container : directive.options.defaultContainer,
    boundariesElement: typeof options.boundariesElement !== 'undefined' ? options.boundariesElement : directive.options.defaultBoundariesElement,
    autoHide: typeof options.autoHide !== 'undefined' ? options.autoHide : directive.options.autoHide,
    hideOnTargetClick: typeof options.hideOnTargetClick !== 'undefined' ? options.hideOnTargetClick : directive.options.defaultHideOnTargetClick,
    loadingClass: typeof options.loadingClass !== 'undefined' ? options.loadingClass : directive.options.defaultLoadingClass,
    loadingContent: typeof options.loadingContent !== 'undefined' ? options.loadingContent : directive.options.defaultLoadingContent,
    popperOptions: _objectSpread$1({}, typeof options.popperOptions !== 'undefined' ? options.popperOptions : directive.options.defaultPopperOptions)
  };

  if (result.offset) {
    var typeofOffset = __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof___default()(result.offset);

    var offset = result.offset; // One value -> switch

    if (typeofOffset === 'number' || typeofOffset === 'string' && offset.indexOf(',') === -1) {
      offset = "0, ".concat(offset);
    }

    if (!result.popperOptions.modifiers) {
      result.popperOptions.modifiers = {};
    }

    result.popperOptions.modifiers.offset = {
      offset: offset
    };
  }

  if (result.trigger && result.trigger.indexOf('click') !== -1) {
    result.hideOnTargetClick = false;
  }

  return result;
}
function getPlacement(value, modifiers) {
  var placement = value.placement;

  for (var i = 0; i < positions.length; i++) {
    var pos = positions[i];

    if (modifiers[pos]) {
      placement = pos;
    }
  }

  return placement;
}
function getContent(value) {
  var type = __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof___default()(value);

  if (type === 'string') {
    return value;
  } else if (value && type === 'object') {
    return value.content;
  } else {
    return false;
  }
}
function createTooltip(el, value) {
  var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var content = getContent(value);
  var classes = typeof value.classes !== 'undefined' ? value.classes : directive.options.defaultClass;

  var opts = _objectSpread$1({
    title: content
  }, getOptions(_objectSpread$1(_objectSpread$1({}, __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof___default()(value) === 'object' ? value : {}), {}, {
    placement: getPlacement(value, modifiers)
  })));

  var tooltip = el._tooltip = new Tooltip(el, opts);
  tooltip.setClasses(classes);
  tooltip._vueEl = el; // Class on target

  var targetClasses = typeof value.targetClasses !== 'undefined' ? value.targetClasses : directive.options.defaultTargetClass;
  el._tooltipTargetClasses = targetClasses;
  addClasses(el, targetClasses);
  return tooltip;
}
function destroyTooltip(el) {
  if (el._tooltip) {
    el._tooltip.dispose();

    delete el._tooltip;
    delete el._tooltipOldShow;
  }

  if (el._tooltipTargetClasses) {
    removeClasses(el, el._tooltipTargetClasses);
    delete el._tooltipTargetClasses;
  }
}
function bind(el, _ref) {
  var value = _ref.value;
      _ref.oldValue;
      var modifiers = _ref.modifiers;
  var content = getContent(value);

  if (!content || !state.enabled) {
    destroyTooltip(el);
  } else {
    var tooltip;

    if (el._tooltip) {
      tooltip = el._tooltip; // Content

      tooltip.setContent(content); // Options

      tooltip.setOptions(_objectSpread$1(_objectSpread$1({}, value), {}, {
        placement: getPlacement(value, modifiers)
      }));
    } else {
      tooltip = createTooltip(el, value, modifiers);
    } // Manual show


    if (typeof value.show !== 'undefined' && value.show !== el._tooltipOldShow) {
      el._tooltipOldShow = value.show;
      value.show ? tooltip.show() : tooltip.hide();
    }
  }
}
var directive = {
  options: defaultOptions,
  bind: bind,
  update: bind,
  unbind: function unbind(el) {
    destroyTooltip(el);
  }
};

function addListeners(el) {
  el.addEventListener('click', onClick);
  el.addEventListener('touchstart', onTouchStart, supportsPassive ? {
    passive: true
  } : false);
}

function removeListeners(el) {
  el.removeEventListener('click', onClick);
  el.removeEventListener('touchstart', onTouchStart);
  el.removeEventListener('touchend', onTouchEnd);
  el.removeEventListener('touchcancel', onTouchCancel);
}

function onClick(event) {
  var el = event.currentTarget;
  event.closePopover = !el.$_vclosepopover_touch;
  event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;
}

function onTouchStart(event) {
  if (event.changedTouches.length === 1) {
    var el = event.currentTarget;
    el.$_vclosepopover_touch = true;
    var touch = event.changedTouches[0];
    el.$_vclosepopover_touchPoint = touch;
    el.addEventListener('touchend', onTouchEnd);
    el.addEventListener('touchcancel', onTouchCancel);
  }
}

function onTouchEnd(event) {
  var el = event.currentTarget;
  el.$_vclosepopover_touch = false;

  if (event.changedTouches.length === 1) {
    var touch = event.changedTouches[0];
    var firstTouch = el.$_vclosepopover_touchPoint;
    event.closePopover = Math.abs(touch.screenY - firstTouch.screenY) < 20 && Math.abs(touch.screenX - firstTouch.screenX) < 20;
    event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;
  }
}

function onTouchCancel(event) {
  var el = event.currentTarget;
  el.$_vclosepopover_touch = false;
}

var vclosepopover = {
  bind: function bind(el, _ref) {
    var value = _ref.value,
        modifiers = _ref.modifiers;
    el.$_closePopoverModifiers = modifiers;

    if (typeof value === 'undefined' || value) {
      addListeners(el);
    }
  },
  update: function update(el, _ref2) {
    var value = _ref2.value,
        oldValue = _ref2.oldValue,
        modifiers = _ref2.modifiers;
    el.$_closePopoverModifiers = modifiers;

    if (value !== oldValue) {
      if (typeof value === 'undefined' || value) {
        addListeners(el);
      } else {
        removeListeners(el);
      }
    }
  },
  unbind: function unbind(el) {
    removeListeners(el);
  }
};

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getDefault(key) {
  var value = directive.options.popover[key];

  if (typeof value === 'undefined') {
    return directive.options[key];
  }

  return value;
}

var isIOS = false;

if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {
  isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
}

var openPopovers = [];

var Element = function Element() {};

if (typeof window !== 'undefined') {
  Element = window.Element;
}

var script = {
  name: 'VPopover',
  components: {
    ResizeObserver: __WEBPACK_IMPORTED_MODULE_6_vue_resize__["a" /* ResizeObserver */]
  },
  props: {
    open: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    placement: {
      type: String,
      default: function _default() {
        return getDefault('defaultPlacement');
      }
    },
    delay: {
      type: [String, Number, Object],
      default: function _default() {
        return getDefault('defaultDelay');
      }
    },
    offset: {
      type: [String, Number],
      default: function _default() {
        return getDefault('defaultOffset');
      }
    },
    trigger: {
      type: String,
      default: function _default() {
        return getDefault('defaultTrigger');
      }
    },
    container: {
      type: [String, Object, Element, Boolean],
      default: function _default() {
        return getDefault('defaultContainer');
      }
    },
    boundariesElement: {
      type: [String, Element],
      default: function _default() {
        return getDefault('defaultBoundariesElement');
      }
    },
    popperOptions: {
      type: Object,
      default: function _default() {
        return getDefault('defaultPopperOptions');
      }
    },
    popoverClass: {
      type: [String, Array],
      default: function _default() {
        return getDefault('defaultClass');
      }
    },
    popoverBaseClass: {
      type: [String, Array],
      default: function _default() {
        return directive.options.popover.defaultBaseClass;
      }
    },
    popoverInnerClass: {
      type: [String, Array],
      default: function _default() {
        return directive.options.popover.defaultInnerClass;
      }
    },
    popoverWrapperClass: {
      type: [String, Array],
      default: function _default() {
        return directive.options.popover.defaultWrapperClass;
      }
    },
    popoverArrowClass: {
      type: [String, Array],
      default: function _default() {
        return directive.options.popover.defaultArrowClass;
      }
    },
    autoHide: {
      type: Boolean,
      default: function _default() {
        return directive.options.popover.defaultAutoHide;
      }
    },
    handleResize: {
      type: Boolean,
      default: function _default() {
        return directive.options.popover.defaultHandleResize;
      }
    },
    openGroup: {
      type: String,
      default: null
    },
    openClass: {
      type: [String, Array],
      default: function _default() {
        return directive.options.popover.defaultOpenClass;
      }
    },
    ariaId: {
      default: null
    }
  },
  data: function data() {
    return {
      isOpen: false,
      id: Math.random().toString(36).substr(2, 10)
    };
  },
  computed: {
    cssClass: function cssClass() {
      return __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_defineProperty___default()({}, this.openClass, this.isOpen);
    },
    popoverId: function popoverId() {
      return "popover_".concat(this.ariaId != null ? this.ariaId : this.id);
    }
  },
  watch: {
    open: function open(val) {
      if (val) {
        this.show();
      } else {
        this.hide();
      }
    },
    disabled: function disabled(val, oldVal) {
      if (val !== oldVal) {
        if (val) {
          this.hide();
        } else if (this.open) {
          this.show();
        }
      }
    },
    container: function container(val) {
      if (this.isOpen && this.popperInstance) {
        var popoverNode = this.$refs.popover;
        var reference = this.$refs.trigger;
        var container = this.$_findContainer(this.container, reference);

        if (!container) {
          console.warn('No container for popover', this);
          return;
        }

        container.appendChild(popoverNode);
        this.popperInstance.scheduleUpdate();
      }
    },
    trigger: function trigger(val) {
      this.$_removeEventListeners();
      this.$_addEventListeners();
    },
    placement: function placement(val) {
      var _this = this;

      this.$_updatePopper(function () {
        _this.popperInstance.options.placement = val;
      });
    },
    offset: '$_restartPopper',
    boundariesElement: '$_restartPopper',
    popperOptions: {
      handler: '$_restartPopper',
      deep: true
    }
  },
  created: function created() {
    this.$_isDisposed = false;
    this.$_mounted = false;
    this.$_events = [];
    this.$_preventOpen = false;
  },
  mounted: function mounted() {
    var popoverNode = this.$refs.popover;
    popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);
    this.$_init();

    if (this.open) {
      this.show();
    }
  },
  deactivated: function deactivated() {
    this.hide();
  },
  beforeDestroy: function beforeDestroy() {
    this.dispose();
  },
  methods: {
    show: function show() {
      var _this2 = this;

      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          event = _ref2.event;
          _ref2.skipDelay;
          var _ref2$force = _ref2.force,
          force = _ref2$force === void 0 ? false : _ref2$force;

      if (force || !this.disabled) {
        this.$_scheduleShow(event);
        this.$emit('show');
      }

      this.$emit('update:open', true);
      this.$_beingShowed = true;
      requestAnimationFrame(function () {
        _this2.$_beingShowed = false;
      });
    },
    hide: function hide() {
      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          event = _ref3.event;
          _ref3.skipDelay;

      this.$_scheduleHide(event);
      this.$emit('hide');
      this.$emit('update:open', false);
    },
    dispose: function dispose() {
      this.$_isDisposed = true;
      this.$_removeEventListeners();
      this.hide({
        skipDelay: true
      });

      if (this.popperInstance) {
        this.popperInstance.destroy(); // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element

        if (!this.popperInstance.options.removeOnDestroy) {
          var popoverNode = this.$refs.popover;
          popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);
        }
      }

      this.$_mounted = false;
      this.popperInstance = null;
      this.isOpen = false;
      this.$emit('dispose');
    },
    $_init: function $_init() {
      if (this.trigger.indexOf('manual') === -1) {
        this.$_addEventListeners();
      }
    },
    $_show: function $_show() {
      var _this3 = this;

      var reference = this.$refs.trigger;
      var popoverNode = this.$refs.popover;
      clearTimeout(this.$_disposeTimer); // Already open

      if (this.isOpen) {
        return;
      } // Popper is already initialized


      if (this.popperInstance) {
        this.isOpen = true;
        this.popperInstance.enableEventListeners();
        this.popperInstance.scheduleUpdate();
      }

      if (!this.$_mounted) {
        var container = this.$_findContainer(this.container, reference);

        if (!container) {
          console.warn('No container for popover', this);
          return;
        }

        container.appendChild(popoverNode);
        this.$_mounted = true;
        this.isOpen = false;

        if (this.popperInstance) {
          requestAnimationFrame(function () {
            if (!_this3.hidden) {
              _this3.isOpen = true;
            }
          });
        }
      }

      if (!this.popperInstance) {
        var popperOptions = _objectSpread(_objectSpread({}, this.popperOptions), {}, {
          placement: this.placement
        });

        popperOptions.modifiers = _objectSpread(_objectSpread({}, popperOptions.modifiers), {}, {
          arrow: _objectSpread(_objectSpread({}, popperOptions.modifiers && popperOptions.modifiers.arrow), {}, {
            element: this.$refs.arrow
          })
        });

        if (this.offset) {
          var offset = this.$_getOffset();
          popperOptions.modifiers.offset = _objectSpread(_objectSpread({}, popperOptions.modifiers && popperOptions.modifiers.offset), {}, {
            offset: offset
          });
        }

        if (this.boundariesElement) {
          popperOptions.modifiers.preventOverflow = _objectSpread(_objectSpread({}, popperOptions.modifiers && popperOptions.modifiers.preventOverflow), {}, {
            boundariesElement: this.boundariesElement
          });
        }

        this.popperInstance = new __WEBPACK_IMPORTED_MODULE_4_popper_js__["a" /* default */](reference, popoverNode, popperOptions); // Fix position

        requestAnimationFrame(function () {
          if (_this3.hidden) {
            _this3.hidden = false;

            _this3.$_hide();

            return;
          }

          if (!_this3.$_isDisposed && _this3.popperInstance) {
            _this3.popperInstance.scheduleUpdate(); // Show the tooltip


            requestAnimationFrame(function () {
              if (_this3.hidden) {
                _this3.hidden = false;

                _this3.$_hide();

                return;
              }

              if (!_this3.$_isDisposed) {
                _this3.isOpen = true;
              } else {
                _this3.dispose();
              }
            });
          } else {
            _this3.dispose();
          }
        });
      }

      var openGroup = this.openGroup;

      if (openGroup) {
        var popover;

        for (var i = 0; i < openPopovers.length; i++) {
          popover = openPopovers[i];

          if (popover.openGroup !== openGroup) {
            popover.hide();
            popover.$emit('close-group');
          }
        }
      }

      openPopovers.push(this);
      this.$emit('apply-show');
    },
    $_hide: function $_hide() {
      var _this4 = this;

      // Already hidden
      if (!this.isOpen) {
        return;
      }

      var index = openPopovers.indexOf(this);

      if (index !== -1) {
        openPopovers.splice(index, 1);
      }

      this.isOpen = false;

      if (this.popperInstance) {
        this.popperInstance.disableEventListeners();
      }

      clearTimeout(this.$_disposeTimer);
      var disposeTime = directive.options.popover.disposeTimeout || directive.options.disposeTimeout;

      if (disposeTime !== null) {
        this.$_disposeTimer = setTimeout(function () {
          var popoverNode = _this4.$refs.popover;

          if (popoverNode) {
            // Don't remove popper instance, just the HTML element
            popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);
            _this4.$_mounted = false;
          }
        }, disposeTime);
      }

      this.$emit('apply-hide');
    },
    $_findContainer: function $_findContainer(container, reference) {
      // if container is a query, get the relative element
      if (typeof container === 'string') {
        container = window.document.querySelector(container);
      } else if (container === false) {
        // if container is `false`, set it to reference parent
        container = reference.parentNode;
      }

      return container;
    },
    $_getOffset: function $_getOffset() {
      var typeofOffset = __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_typeof___default()(this.offset);

      var offset = this.offset; // One value -> switch

      if (typeofOffset === 'number' || typeofOffset === 'string' && offset.indexOf(',') === -1) {
        offset = "0, ".concat(offset);
      }

      return offset;
    },
    $_addEventListeners: function $_addEventListeners() {
      var _this5 = this;

      var reference = this.$refs.trigger;
      var directEvents = [];
      var oppositeEvents = [];
      var events = typeof this.trigger === 'string' ? this.trigger.split(' ').filter(function (trigger) {
        return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;
      }) : [];
      events.forEach(function (event) {
        switch (event) {
          case 'hover':
            directEvents.push('mouseenter');
            oppositeEvents.push('mouseleave');
            break;

          case 'focus':
            directEvents.push('focus');
            oppositeEvents.push('blur');
            break;

          case 'click':
            directEvents.push('click');
            oppositeEvents.push('click');
            break;
        }
      }); // schedule show tooltip

      directEvents.forEach(function (event) {
        var func = function func(event) {
          if (_this5.isOpen) {
            return;
          }

          event.usedByTooltip = true;
          !_this5.$_preventOpen && _this5.show({
            event: event
          });
          _this5.hidden = false;
        };

        _this5.$_events.push({
          event: event,
          func: func
        });

        reference.addEventListener(event, func);
      }); // schedule hide tooltip

      oppositeEvents.forEach(function (event) {
        var func = function func(event) {
          if (event.usedByTooltip) {
            return;
          }

          _this5.hide({
            event: event
          });

          _this5.hidden = true;
        };

        _this5.$_events.push({
          event: event,
          func: func
        });

        reference.addEventListener(event, func);
      });
    },
    $_scheduleShow: function $_scheduleShow() {
      var skipDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      clearTimeout(this.$_scheduleTimer);

      if (skipDelay) {
        this.$_show();
      } else {
        // defaults to 0
        var computedDelay = parseInt(this.delay && this.delay.show || this.delay || 0);
        this.$_scheduleTimer = setTimeout(this.$_show.bind(this), computedDelay);
      }
    },
    $_scheduleHide: function $_scheduleHide() {
      var _this6 = this;

      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var skipDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      clearTimeout(this.$_scheduleTimer);

      if (skipDelay) {
        this.$_hide();
      } else {
        // defaults to 0
        var computedDelay = parseInt(this.delay && this.delay.hide || this.delay || 0);
        this.$_scheduleTimer = setTimeout(function () {
          if (!_this6.isOpen) {
            return;
          } // if we are hiding because of a mouseleave, we must check that the new
          // reference isn't the tooltip, because in this case we don't want to hide it


          if (event && event.type === 'mouseleave') {
            var isSet = _this6.$_setTooltipNodeEvent(event); // if we set the new event, don't hide the tooltip yet
            // the new event will take care to hide it if necessary


            if (isSet) {
              return;
            }
          }

          _this6.$_hide();
        }, computedDelay);
      }
    },
    $_setTooltipNodeEvent: function $_setTooltipNodeEvent(event) {
      var _this7 = this;

      var reference = this.$refs.trigger;
      var popoverNode = this.$refs.popover;
      var relatedreference = event.relatedreference || event.toElement || event.relatedTarget;

      var callback = function callback(event2) {
        var relatedreference2 = event2.relatedreference || event2.toElement || event2.relatedTarget; // Remove event listener after call

        popoverNode.removeEventListener(event.type, callback); // If the new reference is not the reference element

        if (!reference.contains(relatedreference2)) {
          // Schedule to hide tooltip
          _this7.hide({
            event: event2
          });
        }
      };

      if (popoverNode.contains(relatedreference)) {
        // listen to mouseleave on the tooltip element to be able to hide the tooltip
        popoverNode.addEventListener(event.type, callback);
        return true;
      }

      return false;
    },
    $_removeEventListeners: function $_removeEventListeners() {
      var reference = this.$refs.trigger;
      this.$_events.forEach(function (_ref4) {
        var func = _ref4.func,
            event = _ref4.event;
        reference.removeEventListener(event, func);
      });
      this.$_events = [];
    },
    $_updatePopper: function $_updatePopper(cb) {
      if (this.popperInstance) {
        cb();
        if (this.isOpen) this.popperInstance.scheduleUpdate();
      }
    },
    $_restartPopper: function $_restartPopper() {
      if (this.popperInstance) {
        var isOpen = this.isOpen;
        this.dispose();
        this.$_isDisposed = false;
        this.$_init();

        if (isOpen) {
          this.show({
            skipDelay: true,
            force: true
          });
        }
      }
    },
    $_handleGlobalClose: function $_handleGlobalClose(event) {
      var _this8 = this;

      var touch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (this.$_beingShowed) return;
      this.hide({
        event: event
      });

      if (event.closePopover) {
        this.$emit('close-directive');
      } else {
        this.$emit('auto-hide');
      }

      if (touch) {
        this.$_preventOpen = true;
        setTimeout(function () {
          _this8.$_preventOpen = false;
        }, 300);
      }
    },
    $_handleResize: function $_handleResize() {
      if (this.isOpen && this.popperInstance) {
        this.popperInstance.scheduleUpdate();
        this.$emit('resize');
      }
    }
  }
};

if (typeof document !== 'undefined' && typeof window !== 'undefined') {
  if (isIOS) {
    document.addEventListener('touchend', handleGlobalTouchend, supportsPassive ? {
      passive: true,
      capture: true
    } : true);
  } else {
    window.addEventListener('click', handleGlobalClick, true);
  }
}

function handleGlobalClick(event) {
  handleGlobalClose(event);
}

function handleGlobalTouchend(event) {
  handleGlobalClose(event, true);
}

function handleGlobalClose(event) {
  var touch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var _loop = function _loop(i) {
    var popover = openPopovers[i];

    if (popover.$refs.popover) {
      var contains = popover.$refs.popover.contains(event.target);
      requestAnimationFrame(function () {
        if (event.closeAllPopover || event.closePopover && contains || popover.autoHide && !contains) {
          popover.$_handleGlobalClose(event, touch);
        }
      });
    }
  };

  // Delay so that close directive has time to set values
  for (var i = 0; i < openPopovers.length; i++) {
    _loop(i);
  }
}

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c("div", {
    staticClass: "v-popover",
    class: _vm.cssClass
  }, [_c("div", {
    ref: "trigger",
    staticClass: "trigger",
    staticStyle: {
      display: "inline-block"
    },
    attrs: {
      "aria-describedby": _vm.isOpen ? _vm.popoverId : undefined,
      tabindex: _vm.trigger.indexOf("focus") !== -1 ? 0 : undefined
    }
  }, [_vm._t("default")], 2), _vm._v(" "), _c("div", {
    ref: "popover",
    class: [_vm.popoverBaseClass, _vm.popoverClass, _vm.cssClass],
    style: {
      visibility: _vm.isOpen ? "visible" : "hidden"
    },
    attrs: {
      id: _vm.popoverId,
      "aria-hidden": _vm.isOpen ? "false" : "true",
      tabindex: _vm.autoHide ? 0 : undefined
    },
    on: {
      keyup: function keyup($event) {
        if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "esc", 27, $event.key, ["Esc", "Escape"])) {
          return null;
        }

        _vm.autoHide && _vm.hide();
      }
    }
  }, [_c("div", {
    class: _vm.popoverWrapperClass
  }, [_c("div", {
    ref: "inner",
    class: _vm.popoverInnerClass,
    staticStyle: {
      position: "relative"
    }
  }, [_c("div", [_vm._t("popover", null, {
    isOpen: _vm.isOpen
  })], 2), _vm._v(" "), _vm.handleResize ? _c("ResizeObserver", {
    on: {
      notify: _vm.$_handleResize
    }
  }) : _vm._e()], 1), _vm._v(" "), _c("div", {
    ref: "arrow",
    class: _vm.popoverArrowClass
  })])])]);
};

var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;
/* style */

var __vue_inject_styles__ = undefined;
/* scoped */

var __vue_scope_id__ = undefined;
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".resize-observer[data-v-8859cc6c]{position:absolute;top:0;left:0;z-index:-1;width:100%;height:100%;border:none;background-color:transparent;pointer-events:none;display:block;overflow:hidden;opacity:0}.resize-observer[data-v-8859cc6c] object{display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1}";
styleInject(css_248z);

function install(Vue) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (install.installed) return;
  install.installed = true;
  var finalOptions = {};
  __WEBPACK_IMPORTED_MODULE_7_lodash_merge___default()(finalOptions, defaultOptions, options);
  plugin.options = finalOptions;
  directive.options = finalOptions;
  Vue.directive('tooltip', directive);
  Vue.directive('close-popover', vclosepopover);
  Vue.component('VPopover', __vue_component__);
}
var VTooltip = directive;
var VClosePopover = vclosepopover;
var VPopover = __vue_component__;
var plugin = {
  install: install,

  get enabled() {
    return state.enabled;
  },

  set enabled(value) {
    state.enabled = value;
  }

}; // Auto-install

var GlobalVue = null;

if (typeof window !== 'undefined') {
  GlobalVue = window.Vue;
} else if (typeof global !== 'undefined') {
  GlobalVue = global.Vue;
}

if (GlobalVue) {
  GlobalVue.use(plugin);
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);


/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))

/***/ }),
/* 660 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

/* harmony default export */ __webpack_exports__["a"] = (Popper);
//# sourceMappingURL=popper.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(662);

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(663),
    isObjectLike = __webpack_require__(38);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(243),
    equalArrays = __webpack_require__(247),
    equalByTag = __webpack_require__(697),
    equalObjects = __webpack_require__(700),
    getTag = __webpack_require__(716),
    isArray = __webpack_require__(64),
    isBuffer = __webpack_require__(108),
    isTypedArray = __webpack_require__(109);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 664 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 670 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 671 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 672 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60),
    Map = __webpack_require__(105),
    MapCache = __webpack_require__(246);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(106),
    isMasked = __webpack_require__(677),
    isObject = __webpack_require__(32),
    toSource = __webpack_require__(245);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(107);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 676 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(678);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(23);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 679 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(681),
    ListCache = __webpack_require__(60),
    Map = __webpack_require__(105);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(682),
    hashDelete = __webpack_require__(683),
    hashGet = __webpack_require__(684),
    hashHas = __webpack_require__(685),
    hashSet = __webpack_require__(686);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(62);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 683 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(62);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(62);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(62);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 688 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(246),
    setCacheAdd = __webpack_require__(693),
    setCacheHas = __webpack_require__(694);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 693 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 694 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 695 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 696 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(107),
    Uint8Array = __webpack_require__(248),
    eq = __webpack_require__(48),
    equalArrays = __webpack_require__(247),
    mapToArray = __webpack_require__(698),
    setToArray = __webpack_require__(699);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 698 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 699 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(701);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(702),
    getSymbols = __webpack_require__(704),
    keys = __webpack_require__(707);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(703),
    isArray = __webpack_require__(64);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 703 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(705),
    stubArray = __webpack_require__(706);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 705 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 706 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(249),
    baseKeys = __webpack_require__(714),
    isArrayLike = __webpack_require__(65);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 708 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(49),
    isObjectLike = __webpack_require__(38);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 710 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(49),
    isLength = __webpack_require__(252),
    isObjectLike = __webpack_require__(38);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 712 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(244);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(40)(module)))

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(110),
    nativeKeys = __webpack_require__(715);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(253);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(717),
    Map = __webpack_require__(105),
    Promise = __webpack_require__(718),
    Set = __webpack_require__(719),
    WeakMap = __webpack_require__(720),
    baseGetTag = __webpack_require__(49),
    toSource = __webpack_require__(245);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31),
    root = __webpack_require__(23);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31),
    root = __webpack_require__(23);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31),
    root = __webpack_require__(23);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(31),
    root = __webpack_require__(23);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 721 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __vue_component__; });
/* unused harmony export install */
function getInternetExplorerVersion() {
  var ua = window.navigator.userAgent;
  var msie = ua.indexOf('MSIE ');

  if (msie > 0) {
    // IE 10 or older => return version number
    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
  }

  var trident = ua.indexOf('Trident/');

  if (trident > 0) {
    // IE 11 => return version number
    var rv = ua.indexOf('rv:');
    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
  }

  var edge = ua.indexOf('Edge/');

  if (edge > 0) {
    // Edge (IE 12+) => return version number
    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
  } // other browser


  return -1;
}

//
var isIE;

function initCompat() {
  if (!initCompat.init) {
    initCompat.init = true;
    isIE = getInternetExplorerVersion() !== -1;
  }
}

var script = {
  name: 'ResizeObserver',
  props: {
    emitOnMount: {
      type: Boolean,
      default: false
    },
    ignoreWidth: {
      type: Boolean,
      default: false
    },
    ignoreHeight: {
      type: Boolean,
      default: false
    }
  },
  mounted: function mounted() {
    var _this = this;

    initCompat();
    this.$nextTick(function () {
      _this._w = _this.$el.offsetWidth;
      _this._h = _this.$el.offsetHeight;

      if (_this.emitOnMount) {
        _this.emitSize();
      }
    });
    var object = document.createElement('object');
    this._resizeObject = object;
    object.setAttribute('aria-hidden', 'true');
    object.setAttribute('tabindex', -1);
    object.onload = this.addResizeHandlers;
    object.type = 'text/html';

    if (isIE) {
      this.$el.appendChild(object);
    }

    object.data = 'about:blank';

    if (!isIE) {
      this.$el.appendChild(object);
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.removeResizeHandlers();
  },
  methods: {
    compareAndNotify: function compareAndNotify() {
      if (!this.ignoreWidth && this._w !== this.$el.offsetWidth || !this.ignoreHeight && this._h !== this.$el.offsetHeight) {
        this._w = this.$el.offsetWidth;
        this._h = this.$el.offsetHeight;
        this.emitSize();
      }
    },
    emitSize: function emitSize() {
      this.$emit('notify', {
        width: this._w,
        height: this._h
      });
    },
    addResizeHandlers: function addResizeHandlers() {
      this._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);

      this.compareAndNotify();
    },
    removeResizeHandlers: function removeResizeHandlers() {
      if (this._resizeObject && this._resizeObject.onload) {
        if (!isIE && this._resizeObject.contentDocument) {
          this._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);
        }

        this.$el.removeChild(this._resizeObject);
        this._resizeObject.onload = null;
        this._resizeObject = null;
      }
    }
  }
};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
/* server only */
, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== 'boolean') {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  } // Vue.extend constructor export interop.


  var options = typeof script === 'function' ? script.options : script; // render functions

  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true; // functional template

    if (isFunctionalTemplate) {
      options.functional = true;
    }
  } // scopedId


  if (scopeId) {
    options._scopeId = scopeId;
  }

  var hook;

  if (moduleIdentifier) {
    // server build
    hook = function hook(context) {
      // 2.3 injection
      context = context || // cached call
      this.$vnode && this.$vnode.ssrContext || // stateful
      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
      // 2.2 with runInNewContext: true

      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
      } // inject component styles


      if (style) {
        style.call(this, createInjectorSSR(context));
      } // register component module identifier for async chunk inference


      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    }; // used by ssr in case component is cached and beforeCreate
    // never gets called


    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function (context) {
      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
    } : function (context) {
      style.call(this, createInjector(context));
    };
  }

  if (hook) {
    if (options.functional) {
      // register for functional component in vue file
      var originalRender = options.render;

      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }

  return script;
}

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c("div", {
    staticClass: "resize-observer",
    attrs: {
      tabindex: "-1"
    }
  });
};

var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;
/* style */

var __vue_inject_styles__ = undefined;
/* scoped */

var __vue_scope_id__ = "data-v-8859cc6c";
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);

function install(Vue) {
  // eslint-disable-next-line vue/component-definition-name-casing
  Vue.component('resize-observer', __vue_component__);
  Vue.component('ResizeObserver', __vue_component__);
}

var plugin = {
  // eslint-disable-next-line no-undef
  version: "1.0.1",
  install: install
};

var GlobalVue = null;

if (typeof window !== 'undefined') {
  GlobalVue = window.Vue;
} else if (typeof global !== 'undefined') {
  GlobalVue = global.Vue;
}

if (GlobalVue) {
  GlobalVue.use(plugin);
}

/* unused harmony default export */ var _unused_webpack_default_export = (plugin);

//# sourceMappingURL=vue-resize.esm.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(723),
    createAssigner = __webpack_require__(740);

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(243),
    assignMergeValue = __webpack_require__(254),
    baseFor = __webpack_require__(724),
    baseMergeDeep = __webpack_require__(726),
    isObject = __webpack_require__(32),
    keysIn = __webpack_require__(258),
    safeGet = __webpack_require__(257);

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(725);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 725 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(254),
    cloneBuffer = __webpack_require__(727),
    cloneTypedArray = __webpack_require__(728),
    copyArray = __webpack_require__(730),
    initCloneObject = __webpack_require__(731),
    isArguments = __webpack_require__(250),
    isArray = __webpack_require__(64),
    isArrayLikeObject = __webpack_require__(733),
    isBuffer = __webpack_require__(108),
    isFunction = __webpack_require__(106),
    isObject = __webpack_require__(32),
    isPlainObject = __webpack_require__(734),
    isTypedArray = __webpack_require__(109),
    safeGet = __webpack_require__(257),
    toPlainObject = __webpack_require__(735);

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(23);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(40)(module)))

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(729);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(248);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 730 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(732),
    getPrototype = __webpack_require__(256),
    isPrototype = __webpack_require__(110);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(32);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(65),
    isObjectLike = __webpack_require__(38);

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(49),
    getPrototype = __webpack_require__(256),
    isObjectLike = __webpack_require__(38);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(736),
    keysIn = __webpack_require__(258);

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(737),
    baseAssignValue = __webpack_require__(111);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(111),
    eq = __webpack_require__(48);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(32),
    isPrototype = __webpack_require__(110),
    nativeKeysIn = __webpack_require__(739);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 739 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(741),
    isIterateeCall = __webpack_require__(748);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(259),
    overRest = __webpack_require__(742),
    setToString = __webpack_require__(744);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(743);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 743 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(745),
    shortOut = __webpack_require__(747);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(746),
    defineProperty = __webpack_require__(255),
    identity = __webpack_require__(259);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 746 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 747 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(48),
    isArrayLike = __webpack_require__(65),
    isIndex = __webpack_require__(251),
    isObject = __webpack_require__(32);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ })
],[406]);